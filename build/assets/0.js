(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "./lib/@dimforge/rapier3d/coarena.js":
/*!*******************************************!*\
  !*** ./lib/@dimforge/rapier3d/coarena.js ***!
  \*******************************************/
/*! exports provided: Coarena */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Coarena\", function() { return Coarena; });\nclass Coarena {\n  constructor() {\n    this.fconv = new Float64Array(1);\n    this.uconv = new Uint32Array(this.fconv.buffer);\n    this.data = new Array();\n    this.size = 0;\n  }\n  set(handle, data) {\n    let i = this.index(handle);\n    while (this.data.length <= i) {\n      this.data.push(null);\n    }\n    if (this.data[i] == null) this.size += 1;\n    this.data[i] = data;\n  }\n  len() {\n    return this.size;\n  }\n  delete(handle) {\n    let i = this.index(handle);\n    if (i < this.data.length) {\n      if (this.data[i] != null) this.size -= 1;\n      this.data[i] = null;\n    }\n  }\n  clear() {\n    this.data = new Array();\n  }\n  get(handle) {\n    let i = this.index(handle);\n    if (i < this.data.length) {\n      return this.data[i];\n    } else {\n      return null;\n    }\n  }\n  forEach(f) {\n    for (const elt of this.data) {\n      if (elt != null) f(elt);\n    }\n  }\n  getAll() {\n    return this.data.filter(elt => elt != null);\n  }\n  index(handle) {\n    /// Extracts the index part of a handle (the lower 32 bits).\n    /// This is done by first injecting the handle into an Float64Array\n    /// which is itself injected into an Uint32Array (at construction time).\n    /// The 0-th value of the Uint32Array will become the `number` integer\n    /// representation of the lower 32 bits.\n    /// Also `this.uconv[1]` then contains the generation number as a `number`,\n    /// which we don’t really need.\n    this.fconv[0] = handle;\n    return this.uconv[0];\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvYXJlbmEudHM/ZTNmNyJdLCJuYW1lcyI6WyJDb2FyZW5hIiwiY29uc3RydWN0b3IiLCJmY29udiIsIkZsb2F0NjRBcnJheSIsInVjb252IiwiVWludDMyQXJyYXkiLCJidWZmZXIiLCJkYXRhIiwiQXJyYXkiLCJzaXplIiwic2V0IiwiaGFuZGxlIiwiaSIsImluZGV4IiwibGVuZ3RoIiwicHVzaCIsImxlbiIsImRlbGV0ZSIsImNsZWFyIiwiZ2V0IiwiZm9yRWFjaCIsImYiLCJlbHQiLCJnZXRBbGwiLCJmaWx0ZXIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBTSxNQUFPQSxPQUFPO0VBTWhCQyxZQUFBO0lBQ0ksSUFBSSxDQUFDQyxLQUFLLEdBQUcsSUFBSUMsWUFBWSxDQUFDLENBQUMsQ0FBQztJQUNoQyxJQUFJLENBQUNDLEtBQUssR0FBRyxJQUFJQyxXQUFXLENBQUMsSUFBSSxDQUFDSCxLQUFLLENBQUNJLE1BQU0sQ0FBQztJQUMvQyxJQUFJLENBQUNDLElBQUksR0FBRyxJQUFJQyxLQUFLLEVBQUs7SUFDMUIsSUFBSSxDQUFDQyxJQUFJLEdBQUcsQ0FBQztFQUNqQjtFQUVPQyxHQUFHQSxDQUFDQyxNQUFjLEVBQUVKLElBQU87SUFDOUIsSUFBSUssQ0FBQyxHQUFHLElBQUksQ0FBQ0MsS0FBSyxDQUFDRixNQUFNLENBQUM7SUFDMUIsT0FBTyxJQUFJLENBQUNKLElBQUksQ0FBQ08sTUFBTSxJQUFJRixDQUFDLEVBQUU7TUFDMUIsSUFBSSxDQUFDTCxJQUFJLENBQUNRLElBQUksQ0FBQyxJQUFJLENBQUM7O0lBR3hCLElBQUksSUFBSSxDQUFDUixJQUFJLENBQUNLLENBQUMsQ0FBQyxJQUFJLElBQUksRUFBRSxJQUFJLENBQUNILElBQUksSUFBSSxDQUFDO0lBQ3hDLElBQUksQ0FBQ0YsSUFBSSxDQUFDSyxDQUFDLENBQUMsR0FBR0wsSUFBSTtFQUN2QjtFQUVPUyxHQUFHQSxDQUFBO0lBQ04sT0FBTyxJQUFJLENBQUNQLElBQUk7RUFDcEI7RUFFT1EsTUFBTUEsQ0FBQ04sTUFBYztJQUN4QixJQUFJQyxDQUFDLEdBQUcsSUFBSSxDQUFDQyxLQUFLLENBQUNGLE1BQU0sQ0FBQztJQUMxQixJQUFJQyxDQUFDLEdBQUcsSUFBSSxDQUFDTCxJQUFJLENBQUNPLE1BQU0sRUFBRTtNQUN0QixJQUFJLElBQUksQ0FBQ1AsSUFBSSxDQUFDSyxDQUFDLENBQUMsSUFBSSxJQUFJLEVBQUUsSUFBSSxDQUFDSCxJQUFJLElBQUksQ0FBQztNQUN4QyxJQUFJLENBQUNGLElBQUksQ0FBQ0ssQ0FBQyxDQUFDLEdBQUcsSUFBSTs7RUFFM0I7RUFFT00sS0FBS0EsQ0FBQTtJQUNSLElBQUksQ0FBQ1gsSUFBSSxHQUFHLElBQUlDLEtBQUssRUFBSztFQUM5QjtFQUVPVyxHQUFHQSxDQUFDUixNQUFjO0lBQ3JCLElBQUlDLENBQUMsR0FBRyxJQUFJLENBQUNDLEtBQUssQ0FBQ0YsTUFBTSxDQUFDO0lBQzFCLElBQUlDLENBQUMsR0FBRyxJQUFJLENBQUNMLElBQUksQ0FBQ08sTUFBTSxFQUFFO01BQ3RCLE9BQU8sSUFBSSxDQUFDUCxJQUFJLENBQUNLLENBQUMsQ0FBQztLQUN0QixNQUFNO01BQ0gsT0FBTyxJQUFJOztFQUVuQjtFQUVPUSxPQUFPQSxDQUFDQyxDQUFtQjtJQUM5QixLQUFLLE1BQU1DLEdBQUcsSUFBSSxJQUFJLENBQUNmLElBQUksRUFBRTtNQUN6QixJQUFJZSxHQUFHLElBQUksSUFBSSxFQUFFRCxDQUFDLENBQUNDLEdBQUcsQ0FBQzs7RUFFL0I7RUFFT0MsTUFBTUEsQ0FBQTtJQUNULE9BQU8sSUFBSSxDQUFDaEIsSUFBSSxDQUFDaUIsTUFBTSxDQUFFRixHQUFHLElBQUtBLEdBQUcsSUFBSSxJQUFJLENBQUM7RUFDakQ7RUFFUVQsS0FBS0EsQ0FBQ0YsTUFBYztJQUN4QjtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBLElBQUksQ0FBQ1QsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHUyxNQUFNO0lBQ3RCLE9BQU8sSUFBSSxDQUFDUCxLQUFLLENBQUMsQ0FBQyxDQUFDO0VBQ3hCIiwiZmlsZSI6Ii4vbGliL0BkaW1mb3JnZS9yYXBpZXIzZC9jb2FyZW5hLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/coarena.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/control/character_controller.js":
/*!****************************************************************!*\
  !*** ./lib/@dimforge/rapier3d/control/character_controller.js ***!
  \****************************************************************/
/*! exports provided: CharacterCollision, KinematicCharacterController */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CharacterCollision\", function() { return CharacterCollision; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KinematicCharacterController\", function() { return KinematicCharacterController; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n\n\n/**\n * A collision between the character and an obstacle hit on its path.\n */\nclass CharacterCollision {}\n/**\n * A character controller for controlling kinematic bodies and parentless colliders by hitting\n * and sliding against obstacles.\n */\nclass KinematicCharacterController {\n  constructor(offset, params, bodies, colliders, queries) {\n    this.params = params;\n    this.bodies = bodies;\n    this.colliders = colliders;\n    this.queries = queries;\n    this.raw = new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawKinematicCharacterController\"](offset);\n    this.rawCharacterCollision = new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawCharacterCollision\"]();\n    this._applyImpulsesToDynamicBodies = false;\n    this._characterMass = null;\n  }\n  /** @internal */\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n      this.rawCharacterCollision.free();\n    }\n    this.raw = undefined;\n    this.rawCharacterCollision = undefined;\n  }\n  /**\n   * The direction that goes \"up\". Used to determine where the floor is, and the floor’s angle.\n   */\n  up() {\n    return this.raw.up();\n  }\n  /**\n   * Sets the direction that goes \"up\". Used to determine where the floor is, and the floor’s angle.\n   */\n  setUp(vector) {\n    let rawVect = _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].intoRaw(vector);\n    return this.raw.setUp(rawVect);\n    rawVect.free();\n  }\n  applyImpulsesToDynamicBodies() {\n    return this._applyImpulsesToDynamicBodies;\n  }\n  setApplyImpulsesToDynamicBodies(enabled) {\n    this._applyImpulsesToDynamicBodies = enabled;\n  }\n  /**\n   * Returns the custom value of the character mass, if it was set by `this.setCharacterMass`.\n   */\n  characterMass() {\n    return this._characterMass;\n  }\n  /**\n   * Set the mass of the character to be used for impulse resolution if `self.applyImpulsesToDynamicBodies`\n   * is set to `true`.\n   *\n   * If no character mass is set explicitly (or if it is set to `null`) it is automatically assumed to be equal\n   * to the mass of the rigid-body the character collider is attached to; or equal to 0 if the character collider\n   * isn’t attached to any rigid-body.\n   *\n   * @param mass - The mass to set.\n   */\n  setCharacterMass(mass) {\n    this._characterMass = mass;\n  }\n  /**\n   * A small gap to preserve between the character and its surroundings.\n   *\n   * This value should not be too large to avoid visual artifacts, but shouldn’t be too small\n   * (must not be zero) to improve numerical stability of the character controller.\n   */\n  offset() {\n    return this.raw.offset();\n  }\n  /**\n   * Sets a small gap to preserve between the character and its surroundings.\n   *\n   * This value should not be too large to avoid visual artifacts, but shouldn’t be too small\n   * (must not be zero) to improve numerical stability of the character controller.\n   */\n  setOffset(value) {\n    this.raw.setOffset(value);\n  }\n  /// Increase this number if your character appears to get stuck when sliding against surfaces.\n  ///\n  /// This is a small distance applied to the movement toward the contact normals of shapes hit\n  /// by the character controller. This helps shape-casting not getting stuck in an always-penetrating\n  /// state during the sliding calculation.\n  ///\n  /// This value should remain fairly small since it can introduce artificial \"bumps\" when sliding\n  /// along a flat surface.\n  normalNudgeFactor() {\n    return this.raw.normalNudgeFactor();\n  }\n  /// Increase this number if your character appears to get stuck when sliding against surfaces.\n  ///\n  /// This is a small distance applied to the movement toward the contact normals of shapes hit\n  /// by the character controller. This helps shape-casting not getting stuck in an always-penetrating\n  /// state during the sliding calculation.\n  ///\n  /// This value should remain fairly small since it can introduce artificial \"bumps\" when sliding\n  /// along a flat surface.\n  setNormalNudgeFactor(value) {\n    this.raw.setNormalNudgeFactor(value);\n  }\n  /**\n   * Is sliding against obstacles enabled?\n   */\n  slideEnabled() {\n    return this.raw.slideEnabled();\n  }\n  /**\n   * Enable or disable sliding against obstacles.\n   */\n  setSlideEnabled(enabled) {\n    this.raw.setSlideEnabled(enabled);\n  }\n  /**\n   * The maximum step height a character can automatically step over.\n   */\n  autostepMaxHeight() {\n    return this.raw.autostepMaxHeight();\n  }\n  /**\n   * The minimum width of free space that must be available after stepping on a stair.\n   */\n  autostepMinWidth() {\n    return this.raw.autostepMinWidth();\n  }\n  /**\n   * Can the character automatically step over dynamic bodies too?\n   */\n  autostepIncludesDynamicBodies() {\n    return this.raw.autostepIncludesDynamicBodies();\n  }\n  /**\n   * Is automatically stepping over small objects enabled?\n   */\n  autostepEnabled() {\n    return this.raw.autostepEnabled();\n  }\n  /**\n   * Enabled automatically stepping over small objects.\n   *\n   * @param maxHeight - The maximum step height a character can automatically step over.\n   * @param minWidth - The minimum width of free space that must be available after stepping on a stair.\n   * @param includeDynamicBodies - Can the character automatically step over dynamic bodies too?\n   */\n  enableAutostep(maxHeight, minWidth, includeDynamicBodies) {\n    this.raw.enableAutostep(maxHeight, minWidth, includeDynamicBodies);\n  }\n  /**\n   * Disable automatically stepping over small objects.\n   */\n  disableAutostep() {\n    return this.raw.disableAutostep();\n  }\n  /**\n   * The maximum angle (radians) between the floor’s normal and the `up` vector that the\n   * character is able to climb.\n   */\n  maxSlopeClimbAngle() {\n    return this.raw.maxSlopeClimbAngle();\n  }\n  /**\n   * Sets the maximum angle (radians) between the floor’s normal and the `up` vector that the\n   * character is able to climb.\n   */\n  setMaxSlopeClimbAngle(angle) {\n    this.raw.setMaxSlopeClimbAngle(angle);\n  }\n  /**\n   * The minimum angle (radians) between the floor’s normal and the `up` vector before the\n   * character starts to slide down automatically.\n   */\n  minSlopeSlideAngle() {\n    return this.raw.minSlopeSlideAngle();\n  }\n  /**\n   * Sets the minimum angle (radians) between the floor’s normal and the `up` vector before the\n   * character starts to slide down automatically.\n   */\n  setMinSlopeSlideAngle(angle) {\n    this.raw.setMinSlopeSlideAngle(angle);\n  }\n  /**\n   * If snap-to-ground is enabled, should the character be automatically snapped to the ground if\n   * the distance between the ground and its feet are smaller than the specified threshold?\n   */\n  snapToGroundDistance() {\n    return this.raw.snapToGroundDistance();\n  }\n  /**\n   * Enables automatically snapping the character to the ground if the distance between\n   * the ground and its feet are smaller than the specified threshold.\n   */\n  enableSnapToGround(distance) {\n    this.raw.enableSnapToGround(distance);\n  }\n  /**\n   * Disables automatically snapping the character to the ground.\n   */\n  disableSnapToGround() {\n    this.raw.disableSnapToGround();\n  }\n  /**\n   * Is automatically snapping the character to the ground enabled?\n   */\n  snapToGroundEnabled() {\n    return this.raw.snapToGroundEnabled();\n  }\n  /**\n   * Computes the movement the given collider is able to execute after hitting and sliding on obstacles.\n   *\n   * @param collider - The collider to move.\n   * @param desiredTranslationDelta - The desired collider movement.\n   * @param filterFlags - Flags for excluding whole subsets of colliders from the obstacles taken into account.\n   * @param filterGroups - Groups for excluding colliders with incompatible collision groups from the obstacles\n   *                       taken into account.\n   * @param filterPredicate - Any collider for which this closure returns `false` will be excluded from the\n   *                          obstacles taken into account.\n   */\n  computeColliderMovement(collider, desiredTranslationDelta, filterFlags, filterGroups, filterPredicate) {\n    let rawTranslationDelta = _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].intoRaw(desiredTranslationDelta);\n    this.raw.computeColliderMovement(this.params.dt, this.bodies.raw, this.colliders.raw, this.queries.raw, collider.handle, rawTranslationDelta, this._applyImpulsesToDynamicBodies, this._characterMass, filterFlags, filterGroups, this.colliders.castClosure(filterPredicate));\n    rawTranslationDelta.free();\n  }\n  /**\n   * The movement computed by the last call to `this.computeColliderMovement`.\n   */\n  computedMovement() {\n    return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(this.raw.computedMovement());\n  }\n  /**\n   * The result of ground detection computed by the last call to `this.computeColliderMovement`.\n   */\n  computedGrounded() {\n    return this.raw.computedGrounded();\n  }\n  /**\n   * The number of collisions against obstacles detected along the path of the last call\n   * to `this.computeColliderMovement`.\n   */\n  numComputedCollisions() {\n    return this.raw.numComputedCollisions();\n  }\n  /**\n   * Returns the collision against one of the obstacles detected along the path of the last\n   * call to `this.computeColliderMovement`.\n   *\n   * @param i - The i-th collision will be returned.\n   * @param out - If this argument is set, it will be filled with the collision information.\n   */\n  computedCollision(i, out) {\n    if (!this.raw.computedCollision(i, this.rawCharacterCollision)) {\n      return null;\n    } else {\n      let c = this.rawCharacterCollision;\n      out = out !== null && out !== void 0 ? out : new CharacterCollision();\n      out.translationDeltaApplied = _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(c.translationDeltaApplied());\n      out.translationDeltaRemaining = _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(c.translationDeltaRemaining());\n      out.toi = c.toi();\n      out.witness1 = _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(c.worldWitness1());\n      out.witness2 = _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(c.worldWitness2());\n      out.normal1 = _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(c.worldNormal1());\n      out.normal2 = _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(c.worldNormal2());\n      out.collider = this.colliders.get(c.handle());\n      return out;\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/control/character_controller.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/control/index.js":
/*!*************************************************!*\
  !*** ./lib/@dimforge/rapier3d/control/index.js ***!
  \*************************************************/
/*! exports provided: CharacterCollision, KinematicCharacterController, DynamicRayCastVehicleController */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _character_controller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./character_controller */ \"./lib/@dimforge/rapier3d/control/character_controller.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CharacterCollision\", function() { return _character_controller__WEBPACK_IMPORTED_MODULE_0__[\"CharacterCollision\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"KinematicCharacterController\", function() { return _character_controller__WEBPACK_IMPORTED_MODULE_0__[\"KinematicCharacterController\"]; });\n\n/* harmony import */ var _ray_cast_vehicle_controller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ray_cast_vehicle_controller */ \"./lib/@dimforge/rapier3d/control/ray_cast_vehicle_controller.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DynamicRayCastVehicleController\", function() { return _ray_cast_vehicle_controller__WEBPACK_IMPORTED_MODULE_1__[\"DynamicRayCastVehicleController\"]; });\n\n\n// #if DIM3\n\n// #endif//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2NvbnRyb2wvaW5kZXgudHM/NmI3YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBc0M7QUFFdEM7QUFDNkM7QUFDN0MiLCJmaWxlIjoiLi9saWIvQGRpbWZvcmdlL3JhcGllcjNkL2NvbnRyb2wvaW5kZXguanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/control/index.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/control/ray_cast_vehicle_controller.js":
/*!***********************************************************************!*\
  !*** ./lib/@dimforge/rapier3d/control/ray_cast_vehicle_controller.js ***!
  \***********************************************************************/
/*! exports provided: DynamicRayCastVehicleController */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DynamicRayCastVehicleController\", function() { return DynamicRayCastVehicleController; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n\n\n/**\n * A character controller to simulate vehicles using ray-casting for the wheels.\n */\nclass DynamicRayCastVehicleController {\n  constructor(chassis, bodies, colliders, queries) {\n    this.raw = new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawDynamicRayCastVehicleController\"](chassis.handle);\n    this.bodies = bodies;\n    this.colliders = colliders;\n    this.queries = queries;\n    this._chassis = chassis;\n  }\n  /** @internal */\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n  }\n  /**\n   * Updates the vehicle’s velocity based on its suspension, engine force, and brake.\n   *\n   * This directly updates the velocity of its chassis rigid-body.\n   *\n   * @param dt - Time increment used to integrate forces.\n   * @param filterFlags - Flag to exclude categories of objects from the wheels’ ray-cast.\n   * @param filterGroups - Only colliders compatible with these groups will be hit by the wheels’ ray-casts.\n   * @param filterPredicate - Callback to filter out which collider will be hit by the wheels’ ray-casts.\n   */\n  updateVehicle(dt, filterFlags, filterGroups, filterPredicate) {\n    this.raw.update_vehicle(dt, this.bodies.raw, this.colliders.raw, this.queries.raw, filterFlags, filterGroups, this.colliders.castClosure(filterPredicate));\n  }\n  /**\n   * The current forward speed of the vehicle.\n   */\n  currentVehicleSpeed() {\n    return this.raw.current_vehicle_speed();\n  }\n  /**\n   * The rigid-body used as the chassis.\n   */\n  chassis() {\n    return this._chassis;\n  }\n  /**\n   * The chassis’ local _up_ direction (`0 = x, 1 = y, 2 = z`).\n   */\n  get indexUpAxis() {\n    return this.raw.index_up_axis();\n  }\n  /**\n   * Sets the chassis’ local _up_ direction (`0 = x, 1 = y, 2 = z`).\n   */\n  set indexUpAxis(axis) {\n    this.raw.set_index_up_axis(axis);\n  }\n  /**\n   * The chassis’ local _forward_ direction (`0 = x, 1 = y, 2 = z`).\n   */\n  get indexForwardAxis() {\n    return this.raw.index_forward_axis();\n  }\n  /**\n   * Sets the chassis’ local _forward_ direction (`0 = x, 1 = y, 2 = z`).\n   */\n  set setIndexForwardAxis(axis) {\n    this.raw.set_index_forward_axis(axis);\n  }\n  /**\n   * Adds a new wheel attached to this vehicle.\n   * @param chassisConnectionCs  - The position of the wheel relative to the chassis.\n   * @param directionCs - The direction of the wheel’s suspension, relative to the chassis. The ray-casting will\n   *                      happen following this direction to detect the ground.\n   * @param axleCs - The wheel’s axle axis, relative to the chassis.\n   * @param suspensionRestLength - The rest length of the wheel’s suspension spring.\n   * @param radius - The wheel’s radius.\n   */\n  addWheel(chassisConnectionCs, directionCs, axleCs, suspensionRestLength, radius) {\n    let rawChassisConnectionCs = _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].intoRaw(chassisConnectionCs);\n    let rawDirectionCs = _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].intoRaw(directionCs);\n    let rawAxleCs = _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].intoRaw(axleCs);\n    this.raw.add_wheel(rawChassisConnectionCs, rawDirectionCs, rawAxleCs, suspensionRestLength, radius);\n    rawChassisConnectionCs.free();\n    rawDirectionCs.free();\n    rawAxleCs.free();\n  }\n  /**\n   * The number of wheels attached to this vehicle.\n   */\n  numWheels() {\n    return this.raw.num_wheels();\n  }\n  /*\n   *\n   * Access to wheel properties.\n   *\n   */\n  /*\n   * Getters + setters\n   */\n  /**\n   * The position of the i-th wheel, relative to the chassis.\n   */\n  wheelChassisConnectionPointCs(i) {\n    return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(this.raw.wheel_chassis_connection_point_cs(i));\n  }\n  /**\n   * Sets the position of the i-th wheel, relative to the chassis.\n   */\n  setWheelChassisConnectionPointCs(i, value) {\n    let rawValue = _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].intoRaw(value);\n    this.raw.set_wheel_chassis_connection_point_cs(i, rawValue);\n    rawValue.free();\n  }\n  /**\n   * The rest length of the i-th wheel’s suspension spring.\n   */\n  wheelSuspensionRestLength(i) {\n    return this.raw.wheel_suspension_rest_length(i);\n  }\n  /**\n   * Sets the rest length of the i-th wheel’s suspension spring.\n   */\n  setWheelSuspensionRestLength(i, value) {\n    this.raw.set_wheel_suspension_rest_length(i, value);\n  }\n  /**\n   * The maximum distance the i-th wheel suspension can travel before and after its resting length.\n   */\n  wheelMaxSuspensionTravel(i) {\n    return this.raw.wheel_max_suspension_travel(i);\n  }\n  /**\n   * Sets the maximum distance the i-th wheel suspension can travel before and after its resting length.\n   */\n  setWheelMaxSuspensionTravel(i, value) {\n    this.raw.set_wheel_max_suspension_travel(i, value);\n  }\n  /**\n   * The i-th wheel’s radius.\n   */\n  wheelRadius(i) {\n    return this.raw.wheel_radius(i);\n  }\n  /**\n   * Sets the i-th wheel’s radius.\n   */\n  setWheelRadius(i, value) {\n    this.raw.set_wheel_radius(i, value);\n  }\n  /**\n   * The i-th wheel’s suspension stiffness.\n   *\n   * Increase this value if the suspension appears to not push the vehicle strong enough.\n   */\n  wheelSuspensionStiffness(i) {\n    return this.raw.wheel_suspension_stiffness(i);\n  }\n  /**\n   * Sets the i-th wheel’s suspension stiffness.\n   *\n   * Increase this value if the suspension appears to not push the vehicle strong enough.\n   */\n  setWheelSuspensionStiffness(i, value) {\n    this.raw.set_wheel_suspension_stiffness(i, value);\n  }\n  /**\n   * The i-th wheel’s suspension’s damping when it is being compressed.\n   */\n  wheelSuspensionCompression(i) {\n    return this.raw.wheel_suspension_compression(i);\n  }\n  /**\n   * The i-th wheel’s suspension’s damping when it is being compressed.\n   */\n  setWheelSuspensionCompression(i, value) {\n    this.raw.set_wheel_suspension_compression(i, value);\n  }\n  /**\n   * The i-th wheel’s suspension’s damping when it is being released.\n   *\n   * Increase this value if the suspension appears to overshoot.\n   */\n  wheelSuspensionRelaxation(i) {\n    return this.raw.wheel_suspension_relaxation(i);\n  }\n  /**\n   * Sets the i-th wheel’s suspension’s damping when it is being released.\n   *\n   * Increase this value if the suspension appears to overshoot.\n   */\n  setWheelSuspensionRelaxation(i, value) {\n    this.raw.set_wheel_suspension_relaxation(i, value);\n  }\n  /**\n   * The maximum force applied by the i-th wheel’s suspension.\n   */\n  wheelMaxSuspensionForce(i) {\n    return this.raw.wheel_max_suspension_force(i);\n  }\n  /**\n   * Sets the maximum force applied by the i-th wheel’s suspension.\n   */\n  setWheelMaxSuspensionForce(i, value) {\n    this.raw.set_wheel_max_suspension_force(i, value);\n  }\n  /**\n   * The maximum amount of braking impulse applied on the i-th wheel to slow down the vehicle.\n   */\n  wheelBrake(i) {\n    return this.raw.wheel_brake(i);\n  }\n  /**\n   * Set the maximum amount of braking impulse applied on the i-th wheel to slow down the vehicle.\n   */\n  setWheelBrake(i, value) {\n    this.raw.set_wheel_brake(i, value);\n  }\n  /**\n   * The steering angle (radians) for the i-th wheel.\n   */\n  wheelSteering(i) {\n    return this.raw.wheel_steering(i);\n  }\n  /**\n   * Sets the steering angle (radians) for the i-th wheel.\n   */\n  setWheelSteering(i, value) {\n    this.raw.set_wheel_steering(i, value);\n  }\n  /**\n   * The forward force applied by the i-th wheel on the chassis.\n   */\n  wheelEngineForce(i) {\n    return this.raw.wheel_engine_force(i);\n  }\n  /**\n   * Sets the forward force applied by the i-th wheel on the chassis.\n   */\n  setWheelEngineForce(i, value) {\n    this.raw.set_wheel_engine_force(i, value);\n  }\n  /**\n   * The direction of the i-th wheel’s suspension, relative to the chassis.\n   *\n   * The ray-casting will happen following this direction to detect the ground.\n   */\n  wheelDirectionCs(i) {\n    return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(this.raw.wheel_direction_cs(i));\n  }\n  /**\n   * Sets the direction of the i-th wheel’s suspension, relative to the chassis.\n   *\n   * The ray-casting will happen following this direction to detect the ground.\n   */\n  setWheelDirectionCs(i, value) {\n    let rawValue = _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].intoRaw(value);\n    this.raw.set_wheel_direction_cs(i, rawValue);\n    rawValue.free();\n  }\n  /**\n   * The i-th wheel’s axle axis, relative to the chassis.\n   *\n   * The axis index defined as 0 = X, 1 = Y, 2 = Z.\n   */\n  wheelAxleCs(i) {\n    return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(this.raw.wheel_axle_cs(i));\n  }\n  /**\n   * Sets the i-th wheel’s axle axis, relative to the chassis.\n   *\n   * The axis index defined as 0 = X, 1 = Y, 2 = Z.\n   */\n  setWheelAxleCs(i, value) {\n    let rawValue = _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].intoRaw(value);\n    this.raw.set_wheel_axle_cs(i, rawValue);\n    rawValue.free();\n  }\n  /**\n   * Parameter controlling how much traction the tire has.\n   *\n   * The larger the value, the more instantaneous braking will happen (with the risk of\n   * causing the vehicle to flip if it’s too strong).\n   */\n  wheelFrictionSlip(i) {\n    return this.raw.wheel_friction_slip(i);\n  }\n  /**\n   * Sets the parameter controlling how much traction the tire has.\n   *\n   * The larger the value, the more instantaneous braking will happen (with the risk of\n   * causing the vehicle to flip if it’s too strong).\n   */\n  setWheelFrictionSlip(i, value) {\n    this.raw.set_wheel_friction_slip(i, value);\n  }\n  /**\n   * The multiplier of friction between a tire and the collider it’s on top of.\n   *\n   * The larger the value, the stronger side friction will be.\n   */\n  wheelSideFrictionStiffness(i) {\n    return this.raw.wheel_side_friction_stiffness(i);\n  }\n  /**\n   * The multiplier of friction between a tire and the collider it’s on top of.\n   *\n   * The larger the value, the stronger side friction will be.\n   */\n  setWheelSideFrictionStiffness(i, value) {\n    this.raw.set_wheel_side_friction_stiffness(i, value);\n  }\n  /*\n   * Getters only.\n   */\n  /**\n   *  The i-th wheel’s current rotation angle (radians) on its axle.\n   */\n  wheelRotation(i) {\n    return this.raw.wheel_rotation(i);\n  }\n  /**\n   *  The forward impulses applied by the i-th wheel on the chassis.\n   */\n  wheelForwardImpulse(i) {\n    return this.raw.wheel_forward_impulse(i);\n  }\n  /**\n   *  The side impulses applied by the i-th wheel on the chassis.\n   */\n  wheelSideImpulse(i) {\n    return this.raw.wheel_side_impulse(i);\n  }\n  /**\n   *  The force applied by the i-th wheel suspension.\n   */\n  wheelSuspensionForce(i) {\n    return this.raw.wheel_suspension_force(i);\n  }\n  /**\n   *  The (world-space) contact normal between the i-th wheel and the floor.\n   */\n  wheelContactNormal(i) {\n    return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(this.raw.wheel_contact_normal_ws(i));\n  }\n  /**\n   *  The (world-space) point hit by the wheel’s ray-cast for the i-th wheel.\n   */\n  wheelContactPoint(i) {\n    return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(this.raw.wheel_contact_point_ws(i));\n  }\n  /**\n   *  The suspension length for the i-th wheel.\n   */\n  wheelSuspensionLength(i) {\n    return this.raw.wheel_suspension_length(i);\n  }\n  /**\n   *  The (world-space) starting point of the ray-cast for the i-th wheel.\n   */\n  wheelHardPoint(i) {\n    return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(this.raw.wheel_hard_point_ws(i));\n  }\n  /**\n   *  Is the i-th wheel in contact with the ground?\n   */\n  wheelIsInContact(i) {\n    return this.raw.wheel_is_in_contact(i);\n  }\n  /**\n   *  The collider hit by the ray-cast for the i-th wheel.\n   */\n  wheelGroundObject(i) {\n    return this.colliders.get(this.raw.wheel_ground_object(i));\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/control/ray_cast_vehicle_controller.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/dynamics/ccd_solver.js":
/*!*******************************************************!*\
  !*** ./lib/@dimforge/rapier3d/dynamics/ccd_solver.js ***!
  \*******************************************************/
/*! exports provided: CCDSolver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CCDSolver\", function() { return CCDSolver; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n\n/**\n * The CCD solver responsible for resolving Continuous Collision Detection.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `ccdSolver.free()`\n * once you are done using it.\n */\nclass CCDSolver {\n  constructor(raw) {\n    this.raw = raw || new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawCCDSolver\"]();\n  }\n  /**\n   * Release the WASM memory occupied by this narrow-phase.\n   */\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2R5bmFtaWNzL2NjZF9zb2x2ZXIudHM/YTY2YiJdLCJuYW1lcyI6WyJDQ0RTb2x2ZXIiLCJjb25zdHJ1Y3RvciIsInJhdyIsIlJhd0NDRFNvbHZlciIsImZyZWUiLCJ1bmRlZmluZWQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFtQztBQUVuQzs7Ozs7O0FBTU0sTUFBT0EsU0FBUztFQWFsQkMsWUFBWUMsR0FBa0I7SUFDMUIsSUFBSSxDQUFDQSxHQUFHLEdBQUdBLEdBQUcsSUFBSSxJQUFJQyxpREFBWSxFQUFFO0VBQ3hDO0VBWkE7OztFQUdPQyxJQUFJQSxDQUFBO0lBQ1AsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDRixHQUFHLEVBQUU7TUFDWixJQUFJLENBQUNBLEdBQUcsQ0FBQ0UsSUFBSSxFQUFFOztJQUVuQixJQUFJLENBQUNGLEdBQUcsR0FBR0csU0FBUztFQUN4QiIsImZpbGUiOiIuL2xpYi9AZGltZm9yZ2UvcmFwaWVyM2QvZHluYW1pY3MvY2NkX3NvbHZlci5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/dynamics/ccd_solver.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/dynamics/coefficient_combine_rule.js":
/*!*********************************************************************!*\
  !*** ./lib/@dimforge/rapier3d/dynamics/coefficient_combine_rule.js ***!
  \*********************************************************************/
/*! exports provided: CoefficientCombineRule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CoefficientCombineRule\", function() { return CoefficientCombineRule; });\n/**\n * A rule applied to combine coefficients.\n *\n * Use this when configuring the `ColliderDesc` to specify\n * how friction and restitution coefficient should be combined\n * in a contact.\n */\nvar CoefficientCombineRule;\n(function (CoefficientCombineRule) {\n  CoefficientCombineRule[CoefficientCombineRule[\"Average\"] = 0] = \"Average\";\n  CoefficientCombineRule[CoefficientCombineRule[\"Min\"] = 1] = \"Min\";\n  CoefficientCombineRule[CoefficientCombineRule[\"Multiply\"] = 2] = \"Multiply\";\n  CoefficientCombineRule[CoefficientCombineRule[\"Max\"] = 3] = \"Max\";\n})(CoefficientCombineRule || (CoefficientCombineRule = {}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2R5bmFtaWNzL2NvZWZmaWNpZW50X2NvbWJpbmVfcnVsZS50cz9lYTM2Il0sIm5hbWVzIjpbIkNvZWZmaWNpZW50Q29tYmluZVJ1bGUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTs7Ozs7OztBQU9BLElBQVlBLHNCQUtYO0FBTEQsV0FBWUEsc0JBQXNCO0VBQzlCQSxzQkFBQSxDQUFBQSxzQkFBQSw0QkFBVztFQUNYQSxzQkFBQSxDQUFBQSxzQkFBQSxvQkFBTztFQUNQQSxzQkFBQSxDQUFBQSxzQkFBQSw4QkFBWTtFQUNaQSxzQkFBQSxDQUFBQSxzQkFBQSxvQkFBTztBQUNYLENBQUMsRUFMV0Esc0JBQXNCLEtBQXRCQSxzQkFBc0IiLCJmaWxlIjoiLi9saWIvQGRpbWZvcmdlL3JhcGllcjNkL2R5bmFtaWNzL2NvZWZmaWNpZW50X2NvbWJpbmVfcnVsZS5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/dynamics/coefficient_combine_rule.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/dynamics/impulse_joint.js":
/*!**********************************************************!*\
  !*** ./lib/@dimforge/rapier3d/dynamics/impulse_joint.js ***!
  \**********************************************************/
/*! exports provided: JointType, MotorModel, JointAxesMask, ImpulseJoint, UnitImpulseJoint, FixedImpulseJoint, RopeImpulseJoint, SpringImpulseJoint, PrismaticImpulseJoint, RevoluteImpulseJoint, GenericImpulseJoint, SphericalImpulseJoint, JointData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JointType\", function() { return JointType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MotorModel\", function() { return MotorModel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JointAxesMask\", function() { return JointAxesMask; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImpulseJoint\", function() { return ImpulseJoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UnitImpulseJoint\", function() { return UnitImpulseJoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FixedImpulseJoint\", function() { return FixedImpulseJoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RopeImpulseJoint\", function() { return RopeImpulseJoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SpringImpulseJoint\", function() { return SpringImpulseJoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PrismaticImpulseJoint\", function() { return PrismaticImpulseJoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RevoluteImpulseJoint\", function() { return RevoluteImpulseJoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GenericImpulseJoint\", function() { return GenericImpulseJoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SphericalImpulseJoint\", function() { return SphericalImpulseJoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JointData\", function() { return JointData; });\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n\n\n/**\n * An enum grouping all possible types of joints:\n *\n * - `Revolute`: A revolute joint that removes all degrees of freedom between the affected\n *               bodies except for the rotation along one axis.\n * - `Fixed`: A fixed joint that removes all relative degrees of freedom between the affected bodies.\n * - `Prismatic`: A prismatic joint that removes all degrees of freedom between the affected\n *                bodies except for the translation along one axis.\n * - `Spherical`: (3D only) A spherical joint that removes all relative linear degrees of freedom between the affected bodies.\n * - `Generic`: (3D only) A joint with customizable degrees of freedom, allowing any of the 6 axes to be locked.\n */\nvar JointType;\n(function (JointType) {\n  JointType[JointType[\"Revolute\"] = 0] = \"Revolute\";\n  JointType[JointType[\"Fixed\"] = 1] = \"Fixed\";\n  JointType[JointType[\"Prismatic\"] = 2] = \"Prismatic\";\n  JointType[JointType[\"Rope\"] = 3] = \"Rope\";\n  JointType[JointType[\"Spring\"] = 4] = \"Spring\";\n  // #if DIM3\n  JointType[JointType[\"Spherical\"] = 5] = \"Spherical\";\n  JointType[JointType[\"Generic\"] = 6] = \"Generic\";\n  // #endif\n})(JointType || (JointType = {}));\nvar MotorModel;\n(function (MotorModel) {\n  MotorModel[MotorModel[\"AccelerationBased\"] = 0] = \"AccelerationBased\";\n  MotorModel[MotorModel[\"ForceBased\"] = 1] = \"ForceBased\";\n})(MotorModel || (MotorModel = {}));\n/**\n * An enum representing the possible joint axes of a generic joint.\n * They can be ORed together, like:\n * JointAxesMask.X || JointAxesMask.Y\n * to get a joint that is only free in the X and Y translational (positional) axes.\n *\n * Possible free axes are:\n *\n * - `X`: X translation axis\n * - `Y`: Y translation axis\n * - `Z`: Z translation axis\n * - `AngX`: X angular rotation axis\n * - `AngY`: Y angular rotations axis\n * - `AngZ`: Z angular rotation axis\n */\nvar JointAxesMask;\n(function (JointAxesMask) {\n  JointAxesMask[JointAxesMask[\"X\"] = 1] = \"X\";\n  JointAxesMask[JointAxesMask[\"Y\"] = 2] = \"Y\";\n  JointAxesMask[JointAxesMask[\"Z\"] = 4] = \"Z\";\n  JointAxesMask[JointAxesMask[\"AngX\"] = 8] = \"AngX\";\n  JointAxesMask[JointAxesMask[\"AngY\"] = 16] = \"AngY\";\n  JointAxesMask[JointAxesMask[\"AngZ\"] = 32] = \"AngZ\";\n})(JointAxesMask || (JointAxesMask = {}));\nclass ImpulseJoint {\n  constructor(rawSet, bodySet, handle) {\n    this.rawSet = rawSet;\n    this.bodySet = bodySet;\n    this.handle = handle;\n  }\n  static newTyped(rawSet, bodySet, handle) {\n    switch (rawSet.jointType(handle)) {\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawJointType\"].Revolute:\n        return new RevoluteImpulseJoint(rawSet, bodySet, handle);\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawJointType\"].Prismatic:\n        return new PrismaticImpulseJoint(rawSet, bodySet, handle);\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawJointType\"].Fixed:\n        return new FixedImpulseJoint(rawSet, bodySet, handle);\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawJointType\"].Spring:\n        return new SpringImpulseJoint(rawSet, bodySet, handle);\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawJointType\"].Rope:\n        return new RopeImpulseJoint(rawSet, bodySet, handle);\n      // #if DIM3\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawJointType\"].Spherical:\n        return new SphericalImpulseJoint(rawSet, bodySet, handle);\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawJointType\"].Generic:\n        return new GenericImpulseJoint(rawSet, bodySet, handle);\n      // #endif\n      default:\n        return new ImpulseJoint(rawSet, bodySet, handle);\n    }\n  }\n  /** @internal */\n  finalizeDeserialization(bodySet) {\n    this.bodySet = bodySet;\n  }\n  /**\n   * Checks if this joint is still valid (i.e. that it has\n   * not been deleted from the joint set yet).\n   */\n  isValid() {\n    return this.rawSet.contains(this.handle);\n  }\n  /**\n   * The first rigid-body this joint it attached to.\n   */\n  body1() {\n    return this.bodySet.get(this.rawSet.jointBodyHandle1(this.handle));\n  }\n  /**\n   * The second rigid-body this joint is attached to.\n   */\n  body2() {\n    return this.bodySet.get(this.rawSet.jointBodyHandle2(this.handle));\n  }\n  /**\n   * The type of this joint given as a string.\n   */\n  type() {\n    return this.rawSet.jointType(this.handle);\n  }\n  // #if DIM3\n  /**\n   * The rotation quaternion that aligns this joint's first local axis to the `x` axis.\n   */\n  frameX1() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].fromRaw(this.rawSet.jointFrameX1(this.handle));\n  }\n  // #endif\n  // #if DIM3\n  /**\n   * The rotation matrix that aligns this joint's second local axis to the `x` axis.\n   */\n  frameX2() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].fromRaw(this.rawSet.jointFrameX2(this.handle));\n  }\n  // #endif\n  /**\n   * The position of the first anchor of this joint.\n   *\n   * The first anchor gives the position of the application point on the\n   * local frame of the first rigid-body it is attached to.\n   */\n  anchor1() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(this.rawSet.jointAnchor1(this.handle));\n  }\n  /**\n   * The position of the second anchor of this joint.\n   *\n   * The second anchor gives the position of the application point on the\n   * local frame of the second rigid-body it is attached to.\n   */\n  anchor2() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(this.rawSet.jointAnchor2(this.handle));\n  }\n  /**\n   * Sets the position of the first anchor of this joint.\n   *\n   * The first anchor gives the position of the application point on the\n   * local frame of the first rigid-body it is attached to.\n   */\n  setAnchor1(newPos) {\n    const rawPoint = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(newPos);\n    this.rawSet.jointSetAnchor1(this.handle, rawPoint);\n    rawPoint.free();\n  }\n  /**\n   * Sets the position of the second anchor of this joint.\n   *\n   * The second anchor gives the position of the application point on the\n   * local frame of the second rigid-body it is attached to.\n   */\n  setAnchor2(newPos) {\n    const rawPoint = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(newPos);\n    this.rawSet.jointSetAnchor2(this.handle, rawPoint);\n    rawPoint.free();\n  }\n  /**\n   * Controls whether contacts are computed between colliders attached\n   * to the rigid-bodies linked by this joint.\n   */\n  setContactsEnabled(enabled) {\n    this.rawSet.jointSetContactsEnabled(this.handle, enabled);\n  }\n  /**\n   * Indicates if contacts are enabled between colliders attached\n   * to the rigid-bodies linked by this joint.\n   */\n  contactsEnabled() {\n    return this.rawSet.jointContactsEnabled(this.handle);\n  }\n}\nclass UnitImpulseJoint extends ImpulseJoint {\n  /**\n   * Are the limits enabled for this joint?\n   */\n  limitsEnabled() {\n    return this.rawSet.jointLimitsEnabled(this.handle, this.rawAxis());\n  }\n  /**\n   * The min limit of this joint.\n   */\n  limitsMin() {\n    return this.rawSet.jointLimitsMin(this.handle, this.rawAxis());\n  }\n  /**\n   * The max limit of this joint.\n   */\n  limitsMax() {\n    return this.rawSet.jointLimitsMax(this.handle, this.rawAxis());\n  }\n  /**\n   * Sets the limits of this joint.\n   *\n   * @param min - The minimum bound of this joint’s free coordinate.\n   * @param max - The maximum bound of this joint’s free coordinate.\n   */\n  setLimits(min, max) {\n    this.rawSet.jointSetLimits(this.handle, this.rawAxis(), min, max);\n  }\n  configureMotorModel(model) {\n    this.rawSet.jointConfigureMotorModel(this.handle, this.rawAxis(), model);\n  }\n  configureMotorVelocity(targetVel, factor) {\n    this.rawSet.jointConfigureMotorVelocity(this.handle, this.rawAxis(), targetVel, factor);\n  }\n  configureMotorPosition(targetPos, stiffness, damping) {\n    this.rawSet.jointConfigureMotorPosition(this.handle, this.rawAxis(), targetPos, stiffness, damping);\n  }\n  configureMotor(targetPos, targetVel, stiffness, damping) {\n    this.rawSet.jointConfigureMotor(this.handle, this.rawAxis(), targetPos, targetVel, stiffness, damping);\n  }\n}\nclass FixedImpulseJoint extends ImpulseJoint {}\nclass RopeImpulseJoint extends ImpulseJoint {}\nclass SpringImpulseJoint extends ImpulseJoint {}\nclass PrismaticImpulseJoint extends UnitImpulseJoint {\n  rawAxis() {\n    return _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawJointAxis\"].X;\n  }\n}\nclass RevoluteImpulseJoint extends UnitImpulseJoint {\n  rawAxis() {\n    return _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawJointAxis\"].AngX;\n  }\n}\n// #if DIM3\nclass GenericImpulseJoint extends ImpulseJoint {}\nclass SphericalImpulseJoint extends ImpulseJoint {}\n// #endif\nclass JointData {\n  constructor() {}\n  /**\n   * Creates a new joint descriptor that builds a Fixed joint.\n   *\n   * A fixed joint removes all the degrees of freedom between the affected bodies, ensuring their\n   * anchor and local frames coincide in world-space.\n   *\n   * @param anchor1 - Point where the joint is attached on the first rigid-body affected by this joint. Expressed in the\n   *                  local-space of the rigid-body.\n   * @param frame1 - The reference orientation of the joint wrt. the first rigid-body.\n   * @param anchor2 - Point where the joint is attached on the second rigid-body affected by this joint. Expressed in the\n   *                  local-space of the rigid-body.\n   * @param frame2 - The reference orientation of the joint wrt. the second rigid-body.\n   */\n  static fixed(anchor1, frame1, anchor2, frame2) {\n    let res = new JointData();\n    res.anchor1 = anchor1;\n    res.anchor2 = anchor2;\n    res.frame1 = frame1;\n    res.frame2 = frame2;\n    res.jointType = JointType.Fixed;\n    return res;\n  }\n  static spring(rest_length, stiffness, damping, anchor1, anchor2) {\n    let res = new JointData();\n    res.anchor1 = anchor1;\n    res.anchor2 = anchor2;\n    res.length = rest_length;\n    res.stiffness = stiffness;\n    res.damping = damping;\n    res.jointType = JointType.Spring;\n    return res;\n  }\n  static rope(length, anchor1, anchor2) {\n    let res = new JointData();\n    res.anchor1 = anchor1;\n    res.anchor2 = anchor2;\n    res.length = length;\n    res.jointType = JointType.Rope;\n    return res;\n  }\n  // #if DIM3\n  /**\n   * Create a new joint descriptor that builds generic joints.\n   *\n   * A generic joint allows customizing its degrees of freedom\n   * by supplying a mask of the joint axes that should remain locked.\n   *\n   * @param anchor1 - Point where the joint is attached on the first rigid-body affected by this joint. Expressed in the\n   *                  local-space of the rigid-body.\n   * @param anchor2 - Point where the joint is attached on the second rigid-body affected by this joint. Expressed in the\n   *                  local-space of the rigid-body.\n   * @param axis - The X axis of the joint, expressed in the local-space of the rigid-bodies it is attached to.\n   * @param axesMask - Mask representing the locked axes of the joint. You can use logical OR to select these from\n   *                   the JointAxesMask enum. For example, passing (JointAxesMask.AngX || JointAxesMask.AngY) will\n   *                   create a joint locked in the X and Y rotational axes.\n   */\n  static generic(anchor1, anchor2, axis, axesMask) {\n    let res = new JointData();\n    res.anchor1 = anchor1;\n    res.anchor2 = anchor2;\n    res.axis = axis;\n    res.axesMask = axesMask;\n    res.jointType = JointType.Generic;\n    return res;\n  }\n  /**\n   * Create a new joint descriptor that builds spherical joints.\n   *\n   * A spherical joint allows three relative rotational degrees of freedom\n   * by preventing any relative translation between the anchors of the\n   * two attached rigid-bodies.\n   *\n   * @param anchor1 - Point where the joint is attached on the first rigid-body affected by this joint. Expressed in the\n   *                  local-space of the rigid-body.\n   * @param anchor2 - Point where the joint is attached on the second rigid-body affected by this joint. Expressed in the\n   *                  local-space of the rigid-body.\n   */\n  static spherical(anchor1, anchor2) {\n    let res = new JointData();\n    res.anchor1 = anchor1;\n    res.anchor2 = anchor2;\n    res.jointType = JointType.Spherical;\n    return res;\n  }\n  /**\n   * Creates a new joint descriptor that builds a Prismatic joint.\n   *\n   * A prismatic joint removes all the degrees of freedom between the\n   * affected bodies, except for the translation along one axis.\n   *\n   * @param anchor1 - Point where the joint is attached on the first rigid-body affected by this joint. Expressed in the\n   *                  local-space of the rigid-body.\n   * @param anchor2 - Point where the joint is attached on the second rigid-body affected by this joint. Expressed in the\n   *                  local-space of the rigid-body.\n   * @param axis - Axis of the joint, expressed in the local-space of the rigid-bodies it is attached to.\n   */\n  static prismatic(anchor1, anchor2, axis) {\n    let res = new JointData();\n    res.anchor1 = anchor1;\n    res.anchor2 = anchor2;\n    res.axis = axis;\n    res.jointType = JointType.Prismatic;\n    return res;\n  }\n  /**\n   * Create a new joint descriptor that builds Revolute joints.\n   *\n   * A revolute joint removes all degrees of freedom between the affected\n   * bodies except for the rotation along one axis.\n   *\n   * @param anchor1 - Point where the joint is attached on the first rigid-body affected by this joint. Expressed in the\n   *                  local-space of the rigid-body.\n   * @param anchor2 - Point where the joint is attached on the second rigid-body affected by this joint. Expressed in the\n   *                  local-space of the rigid-body.\n   * @param axis - Axis of the joint, expressed in the local-space of the rigid-bodies it is attached to.\n   */\n  static revolute(anchor1, anchor2, axis) {\n    let res = new JointData();\n    res.anchor1 = anchor1;\n    res.anchor2 = anchor2;\n    res.axis = axis;\n    res.jointType = JointType.Revolute;\n    return res;\n  }\n  // #endif\n  intoRaw() {\n    let rawA1 = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(this.anchor1);\n    let rawA2 = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(this.anchor2);\n    let rawAx;\n    let result;\n    let limitsEnabled = false;\n    let limitsMin = 0.0;\n    let limitsMax = 0.0;\n    switch (this.jointType) {\n      case JointType.Fixed:\n        let rawFra1 = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(this.frame1);\n        let rawFra2 = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(this.frame2);\n        result = _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawGenericJoint\"].fixed(rawA1, rawFra1, rawA2, rawFra2);\n        rawFra1.free();\n        rawFra2.free();\n        break;\n      case JointType.Spring:\n        result = _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawGenericJoint\"].spring(this.length, this.stiffness, this.damping, rawA1, rawA2);\n        break;\n      case JointType.Rope:\n        result = _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawGenericJoint\"].rope(this.length, rawA1, rawA2);\n        break;\n      case JointType.Prismatic:\n        rawAx = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(this.axis);\n        if (!!this.limitsEnabled) {\n          limitsEnabled = true;\n          limitsMin = this.limits[0];\n          limitsMax = this.limits[1];\n        }\n        // #if DIM3\n        result = _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawGenericJoint\"].prismatic(rawA1, rawA2, rawAx, limitsEnabled, limitsMin, limitsMax);\n        // #endif\n        rawAx.free();\n        break;\n      // #if DIM3\n      case JointType.Generic:\n        rawAx = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(this.axis);\n        // implicit type cast: axesMask is a JointAxesMask bitflag enum,\n        // we're treating it as a u8 on the Rust side\n        let rawAxesMask = this.axesMask;\n        result = _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawGenericJoint\"].generic(rawA1, rawA2, rawAx, rawAxesMask);\n        break;\n      case JointType.Spherical:\n        result = _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawGenericJoint\"].spherical(rawA1, rawA2);\n        break;\n      case JointType.Revolute:\n        rawAx = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(this.axis);\n        result = _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawGenericJoint\"].revolute(rawA1, rawA2, rawAx);\n        rawAx.free();\n        break;\n      // #endif\n    }\n    rawA1.free();\n    rawA2.free();\n    return result;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/dynamics/impulse_joint.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/dynamics/impulse_joint_set.js":
/*!**************************************************************!*\
  !*** ./lib/@dimforge/rapier3d/dynamics/impulse_joint_set.js ***!
  \**************************************************************/
/*! exports provided: ImpulseJointSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImpulseJointSet\", function() { return ImpulseJointSet; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n/* harmony import */ var _coarena__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../coarena */ \"./lib/@dimforge/rapier3d/coarena.js\");\n/* harmony import */ var _impulse_joint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./impulse_joint */ \"./lib/@dimforge/rapier3d/dynamics/impulse_joint.js\");\n\n\n\n/**\n * A set of joints.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `jointSet.free()`\n * once you are done using it (and all the joints it created).\n */\nclass ImpulseJointSet {\n  constructor(raw) {\n    this.raw = raw || new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawImpulseJointSet\"]();\n    this.map = new _coarena__WEBPACK_IMPORTED_MODULE_1__[\"Coarena\"]();\n    // Initialize the map with the existing elements, if any.\n    if (raw) {\n      raw.forEachJointHandle(handle => {\n        this.map.set(handle, _impulse_joint__WEBPACK_IMPORTED_MODULE_2__[\"ImpulseJoint\"].newTyped(raw, null, handle));\n      });\n    }\n  }\n  /**\n   * Release the WASM memory occupied by this joint set.\n   */\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n    if (!!this.map) {\n      this.map.clear();\n    }\n    this.map = undefined;\n  }\n  /** @internal */\n  finalizeDeserialization(bodies) {\n    this.map.forEach(joint => joint.finalizeDeserialization(bodies));\n  }\n  /**\n   * Creates a new joint and return its integer handle.\n   *\n   * @param bodies - The set of rigid-bodies containing the bodies the joint is attached to.\n   * @param desc - The joint's parameters.\n   * @param parent1 - The handle of the first rigid-body this joint is attached to.\n   * @param parent2 - The handle of the second rigid-body this joint is attached to.\n   * @param wakeUp - Should the attached rigid-bodies be awakened?\n   */\n  createJoint(bodies, desc, parent1, parent2, wakeUp) {\n    const rawParams = desc.intoRaw();\n    const handle = this.raw.createJoint(rawParams, parent1, parent2, wakeUp);\n    rawParams.free();\n    let joint = _impulse_joint__WEBPACK_IMPORTED_MODULE_2__[\"ImpulseJoint\"].newTyped(this.raw, bodies, handle);\n    this.map.set(handle, joint);\n    return joint;\n  }\n  /**\n   * Remove a joint from this set.\n   *\n   * @param handle - The integer handle of the joint.\n   * @param wakeUp - If `true`, the rigid-bodies attached by the removed joint will be woken-up automatically.\n   */\n  remove(handle, wakeUp) {\n    this.raw.remove(handle, wakeUp);\n    this.unmap(handle);\n  }\n  /**\n   * Calls the given closure with the integer handle of each impulse joint attached to this rigid-body.\n   *\n   * @param f - The closure called with the integer handle of each impulse joint attached to the rigid-body.\n   */\n  forEachJointHandleAttachedToRigidBody(handle, f) {\n    this.raw.forEachJointAttachedToRigidBody(handle, f);\n  }\n  /**\n   * Internal function, do not call directly.\n   * @param handle\n   */\n  unmap(handle) {\n    this.map.delete(handle);\n  }\n  /**\n   * The number of joints on this set.\n   */\n  len() {\n    return this.map.len();\n  }\n  /**\n   * Does this set contain a joint with the given handle?\n   *\n   * @param handle - The joint handle to check.\n   */\n  contains(handle) {\n    return this.get(handle) != null;\n  }\n  /**\n   * Gets the joint with the given handle.\n   *\n   * Returns `null` if no joint with the specified handle exists.\n   *\n   * @param handle - The integer handle of the joint to retrieve.\n   */\n  get(handle) {\n    return this.map.get(handle);\n  }\n  /**\n   * Applies the given closure to each joint contained by this set.\n   *\n   * @param f - The closure to apply.\n   */\n  forEach(f) {\n    this.map.forEach(f);\n  }\n  /**\n   * Gets all joints in the list.\n   *\n   * @returns joint list.\n   */\n  getAll() {\n    return this.map.getAll();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2R5bmFtaWNzL2ltcHVsc2Vfam9pbnRfc2V0LnRzP2JkMzgiXSwibmFtZXMiOlsiSW1wdWxzZUpvaW50U2V0IiwiY29uc3RydWN0b3IiLCJyYXciLCJSYXdJbXB1bHNlSm9pbnRTZXQiLCJtYXAiLCJDb2FyZW5hIiwiZm9yRWFjaEpvaW50SGFuZGxlIiwiaGFuZGxlIiwic2V0IiwiSW1wdWxzZUpvaW50IiwibmV3VHlwZWQiLCJmcmVlIiwidW5kZWZpbmVkIiwiY2xlYXIiLCJmaW5hbGl6ZURlc2VyaWFsaXphdGlvbiIsImJvZGllcyIsImZvckVhY2giLCJqb2ludCIsImNyZWF0ZUpvaW50IiwiZGVzYyIsInBhcmVudDEiLCJwYXJlbnQyIiwid2FrZVVwIiwicmF3UGFyYW1zIiwiaW50b1JhdyIsInJlbW92ZSIsInVubWFwIiwiZm9yRWFjaEpvaW50SGFuZGxlQXR0YWNoZWRUb1JpZ2lkQm9keSIsImYiLCJmb3JFYWNoSm9pbnRBdHRhY2hlZFRvUmlnaWRCb2R5IiwiZGVsZXRlIiwibGVuIiwiY29udGFpbnMiLCJnZXQiLCJnZXRBbGwiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBeUM7QUFDUDtBQWFWO0FBS3hCOzs7Ozs7QUFNTSxNQUFPQSxlQUFlO0VBbUJ4QkMsWUFBWUMsR0FBd0I7SUFDaEMsSUFBSSxDQUFDQSxHQUFHLEdBQUdBLEdBQUcsSUFBSSxJQUFJQyx1REFBa0IsRUFBRTtJQUMxQyxJQUFJLENBQUNDLEdBQUcsR0FBRyxJQUFJQyxnREFBTyxFQUFnQjtJQUN0QztJQUNBLElBQUlILEdBQUcsRUFBRTtNQUNMQSxHQUFHLENBQUNJLGtCQUFrQixDQUFFQyxNQUEwQixJQUFJO1FBQ2xELElBQUksQ0FBQ0gsR0FBRyxDQUFDSSxHQUFHLENBQUNELE1BQU0sRUFBRUUsMkRBQVksQ0FBQ0MsUUFBUSxDQUFDUixHQUFHLEVBQUUsSUFBSSxFQUFFSyxNQUFNLENBQUMsQ0FBQztNQUNsRSxDQUFDLENBQUM7O0VBRVY7RUF4QkE7OztFQUdPSSxJQUFJQSxDQUFBO0lBQ1AsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDVCxHQUFHLEVBQUU7TUFDWixJQUFJLENBQUNBLEdBQUcsQ0FBQ1MsSUFBSSxFQUFFOztJQUVuQixJQUFJLENBQUNULEdBQUcsR0FBR1UsU0FBUztJQUVwQixJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUNSLEdBQUcsRUFBRTtNQUNaLElBQUksQ0FBQ0EsR0FBRyxDQUFDUyxLQUFLLEVBQUU7O0lBRXBCLElBQUksQ0FBQ1QsR0FBRyxHQUFHUSxTQUFTO0VBQ3hCO0VBYUE7RUFDT0UsdUJBQXVCQSxDQUFDQyxNQUFvQjtJQUMvQyxJQUFJLENBQUNYLEdBQUcsQ0FBQ1ksT0FBTyxDQUFFQyxLQUFLLElBQUtBLEtBQUssQ0FBQ0gsdUJBQXVCLENBQUNDLE1BQU0sQ0FBQyxDQUFDO0VBQ3RFO0VBRUE7Ozs7Ozs7OztFQVNPRyxXQUFXQSxDQUNkSCxNQUFvQixFQUNwQkksSUFBZSxFQUNmQyxPQUF3QixFQUN4QkMsT0FBd0IsRUFDeEJDLE1BQWU7SUFFZixNQUFNQyxTQUFTLEdBQUdKLElBQUksQ0FBQ0ssT0FBTyxFQUFFO0lBQ2hDLE1BQU1qQixNQUFNLEdBQUcsSUFBSSxDQUFDTCxHQUFHLENBQUNnQixXQUFXLENBQy9CSyxTQUFTLEVBQ1RILE9BQU8sRUFDUEMsT0FBTyxFQUNQQyxNQUFNLENBQ1Q7SUFDREMsU0FBUyxDQUFDWixJQUFJLEVBQUU7SUFDaEIsSUFBSU0sS0FBSyxHQUFHUiwyREFBWSxDQUFDQyxRQUFRLENBQUMsSUFBSSxDQUFDUixHQUFHLEVBQUVhLE1BQU0sRUFBRVIsTUFBTSxDQUFDO0lBQzNELElBQUksQ0FBQ0gsR0FBRyxDQUFDSSxHQUFHLENBQUNELE1BQU0sRUFBRVUsS0FBSyxDQUFDO0lBQzNCLE9BQU9BLEtBQUs7RUFDaEI7RUFFQTs7Ozs7O0VBTU9RLE1BQU1BLENBQUNsQixNQUEwQixFQUFFZSxNQUFlO0lBQ3JELElBQUksQ0FBQ3BCLEdBQUcsQ0FBQ3VCLE1BQU0sQ0FBQ2xCLE1BQU0sRUFBRWUsTUFBTSxDQUFDO0lBQy9CLElBQUksQ0FBQ0ksS0FBSyxDQUFDbkIsTUFBTSxDQUFDO0VBQ3RCO0VBRUE7Ozs7O0VBS09vQixxQ0FBcUNBLENBQ3hDcEIsTUFBdUIsRUFDdkJxQixDQUF1QztJQUV2QyxJQUFJLENBQUMxQixHQUFHLENBQUMyQiwrQkFBK0IsQ0FBQ3RCLE1BQU0sRUFBRXFCLENBQUMsQ0FBQztFQUN2RDtFQUVBOzs7O0VBSU9GLEtBQUtBLENBQUNuQixNQUEwQjtJQUNuQyxJQUFJLENBQUNILEdBQUcsQ0FBQzBCLE1BQU0sQ0FBQ3ZCLE1BQU0sQ0FBQztFQUMzQjtFQUVBOzs7RUFHT3dCLEdBQUdBLENBQUE7SUFDTixPQUFPLElBQUksQ0FBQzNCLEdBQUcsQ0FBQzJCLEdBQUcsRUFBRTtFQUN6QjtFQUVBOzs7OztFQUtPQyxRQUFRQSxDQUFDekIsTUFBMEI7SUFDdEMsT0FBTyxJQUFJLENBQUMwQixHQUFHLENBQUMxQixNQUFNLENBQUMsSUFBSSxJQUFJO0VBQ25DO0VBRUE7Ozs7Ozs7RUFPTzBCLEdBQUdBLENBQUMxQixNQUEwQjtJQUNqQyxPQUFPLElBQUksQ0FBQ0gsR0FBRyxDQUFDNkIsR0FBRyxDQUFDMUIsTUFBTSxDQUFDO0VBQy9CO0VBRUE7Ozs7O0VBS09TLE9BQU9BLENBQUNZLENBQWdDO0lBQzNDLElBQUksQ0FBQ3hCLEdBQUcsQ0FBQ1ksT0FBTyxDQUFDWSxDQUFDLENBQUM7RUFDdkI7RUFFQTs7Ozs7RUFLT00sTUFBTUEsQ0FBQTtJQUNULE9BQU8sSUFBSSxDQUFDOUIsR0FBRyxDQUFDOEIsTUFBTSxFQUFFO0VBQzVCIiwiZmlsZSI6Ii4vbGliL0BkaW1mb3JnZS9yYXBpZXIzZC9keW5hbWljcy9pbXB1bHNlX2pvaW50X3NldC5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/dynamics/impulse_joint_set.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/dynamics/index.js":
/*!**************************************************!*\
  !*** ./lib/@dimforge/rapier3d/dynamics/index.js ***!
  \**************************************************/
/*! exports provided: RigidBodyType, RigidBody, RigidBodyDesc, RigidBodySet, IntegrationParameters, JointType, MotorModel, JointAxesMask, ImpulseJoint, UnitImpulseJoint, FixedImpulseJoint, RopeImpulseJoint, SpringImpulseJoint, PrismaticImpulseJoint, RevoluteImpulseJoint, GenericImpulseJoint, SphericalImpulseJoint, JointData, ImpulseJointSet, MultibodyJoint, UnitMultibodyJoint, FixedMultibodyJoint, PrismaticMultibodyJoint, RevoluteMultibodyJoint, SphericalMultibodyJoint, MultibodyJointSet, CoefficientCombineRule, CCDSolver, IslandManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _rigid_body__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rigid_body */ \"./lib/@dimforge/rapier3d/dynamics/rigid_body.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RigidBodyType\", function() { return _rigid_body__WEBPACK_IMPORTED_MODULE_0__[\"RigidBodyType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RigidBody\", function() { return _rigid_body__WEBPACK_IMPORTED_MODULE_0__[\"RigidBody\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RigidBodyDesc\", function() { return _rigid_body__WEBPACK_IMPORTED_MODULE_0__[\"RigidBodyDesc\"]; });\n\n/* harmony import */ var _rigid_body_set__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rigid_body_set */ \"./lib/@dimforge/rapier3d/dynamics/rigid_body_set.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RigidBodySet\", function() { return _rigid_body_set__WEBPACK_IMPORTED_MODULE_1__[\"RigidBodySet\"]; });\n\n/* harmony import */ var _integration_parameters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./integration_parameters */ \"./lib/@dimforge/rapier3d/dynamics/integration_parameters.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IntegrationParameters\", function() { return _integration_parameters__WEBPACK_IMPORTED_MODULE_2__[\"IntegrationParameters\"]; });\n\n/* harmony import */ var _impulse_joint__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./impulse_joint */ \"./lib/@dimforge/rapier3d/dynamics/impulse_joint.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"JointType\", function() { return _impulse_joint__WEBPACK_IMPORTED_MODULE_3__[\"JointType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MotorModel\", function() { return _impulse_joint__WEBPACK_IMPORTED_MODULE_3__[\"MotorModel\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"JointAxesMask\", function() { return _impulse_joint__WEBPACK_IMPORTED_MODULE_3__[\"JointAxesMask\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImpulseJoint\", function() { return _impulse_joint__WEBPACK_IMPORTED_MODULE_3__[\"ImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UnitImpulseJoint\", function() { return _impulse_joint__WEBPACK_IMPORTED_MODULE_3__[\"UnitImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FixedImpulseJoint\", function() { return _impulse_joint__WEBPACK_IMPORTED_MODULE_3__[\"FixedImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RopeImpulseJoint\", function() { return _impulse_joint__WEBPACK_IMPORTED_MODULE_3__[\"RopeImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SpringImpulseJoint\", function() { return _impulse_joint__WEBPACK_IMPORTED_MODULE_3__[\"SpringImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PrismaticImpulseJoint\", function() { return _impulse_joint__WEBPACK_IMPORTED_MODULE_3__[\"PrismaticImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RevoluteImpulseJoint\", function() { return _impulse_joint__WEBPACK_IMPORTED_MODULE_3__[\"RevoluteImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"GenericImpulseJoint\", function() { return _impulse_joint__WEBPACK_IMPORTED_MODULE_3__[\"GenericImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SphericalImpulseJoint\", function() { return _impulse_joint__WEBPACK_IMPORTED_MODULE_3__[\"SphericalImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"JointData\", function() { return _impulse_joint__WEBPACK_IMPORTED_MODULE_3__[\"JointData\"]; });\n\n/* harmony import */ var _impulse_joint_set__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./impulse_joint_set */ \"./lib/@dimforge/rapier3d/dynamics/impulse_joint_set.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImpulseJointSet\", function() { return _impulse_joint_set__WEBPACK_IMPORTED_MODULE_4__[\"ImpulseJointSet\"]; });\n\n/* harmony import */ var _multibody_joint__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./multibody_joint */ \"./lib/@dimforge/rapier3d/dynamics/multibody_joint.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MultibodyJoint\", function() { return _multibody_joint__WEBPACK_IMPORTED_MODULE_5__[\"MultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UnitMultibodyJoint\", function() { return _multibody_joint__WEBPACK_IMPORTED_MODULE_5__[\"UnitMultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FixedMultibodyJoint\", function() { return _multibody_joint__WEBPACK_IMPORTED_MODULE_5__[\"FixedMultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PrismaticMultibodyJoint\", function() { return _multibody_joint__WEBPACK_IMPORTED_MODULE_5__[\"PrismaticMultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RevoluteMultibodyJoint\", function() { return _multibody_joint__WEBPACK_IMPORTED_MODULE_5__[\"RevoluteMultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SphericalMultibodyJoint\", function() { return _multibody_joint__WEBPACK_IMPORTED_MODULE_5__[\"SphericalMultibodyJoint\"]; });\n\n/* harmony import */ var _multibody_joint_set__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./multibody_joint_set */ \"./lib/@dimforge/rapier3d/dynamics/multibody_joint_set.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MultibodyJointSet\", function() { return _multibody_joint_set__WEBPACK_IMPORTED_MODULE_6__[\"MultibodyJointSet\"]; });\n\n/* harmony import */ var _coefficient_combine_rule__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./coefficient_combine_rule */ \"./lib/@dimforge/rapier3d/dynamics/coefficient_combine_rule.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CoefficientCombineRule\", function() { return _coefficient_combine_rule__WEBPACK_IMPORTED_MODULE_7__[\"CoefficientCombineRule\"]; });\n\n/* harmony import */ var _ccd_solver__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ccd_solver */ \"./lib/@dimforge/rapier3d/dynamics/ccd_solver.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CCDSolver\", function() { return _ccd_solver__WEBPACK_IMPORTED_MODULE_8__[\"CCDSolver\"]; });\n\n/* harmony import */ var _island_manager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./island_manager */ \"./lib/@dimforge/rapier3d/dynamics/island_manager.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IslandManager\", function() { return _island_manager__WEBPACK_IMPORTED_MODULE_9__[\"IslandManager\"]; });\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2R5bmFtaWNzL2luZGV4LnRzPzdmMTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTRCO0FBQ0k7QUFDUTtBQUNUO0FBQ0k7QUFDRjtBQUNJO0FBQ0s7QUFDZCIsImZpbGUiOiIuL2xpYi9AZGltZm9yZ2UvcmFwaWVyM2QvZHluYW1pY3MvaW5kZXguanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/dynamics/index.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/dynamics/integration_parameters.js":
/*!*******************************************************************!*\
  !*** ./lib/@dimforge/rapier3d/dynamics/integration_parameters.js ***!
  \*******************************************************************/
/*! exports provided: IntegrationParameters */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IntegrationParameters\", function() { return IntegrationParameters; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n\nclass IntegrationParameters {\n  constructor(raw) {\n    this.raw = raw || new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawIntegrationParameters\"]();\n  }\n  /**\n   * Free the WASM memory used by these integration parameters.\n   */\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n  }\n  /**\n   * The timestep length (default: `1.0 / 60.0`)\n   */\n  get dt() {\n    return this.raw.dt;\n  }\n  /**\n   * The Error Reduction Parameter in `[0, 1]` is the proportion of\n   * the positional error to be corrected at each time step (default: `0.2`).\n   */\n  get erp() {\n    return this.raw.erp;\n  }\n  get lengthUnit() {\n    return this.raw.lengthUnit;\n  }\n  /**\n   * Normalized amount of penetration the engine won’t attempt to correct (default: `0.001m`).\n   *\n   * This threshold considered by the physics engine is this value multiplied by the `lengthUnit`.\n   */\n  get normalizedAllowedLinearError() {\n    return this.raw.normalizedAllowedLinearError;\n  }\n  /**\n   * The maximal normalized distance separating two objects that will generate predictive contacts (default: `0.002`).\n   *\n   * This threshold considered by the physics engine is this value multiplied by the `lengthUnit`.\n   */\n  get normalizedPredictionDistance() {\n    return this.raw.normalizedPredictionDistance;\n  }\n  /**\n   * The number of solver iterations run by the constraints solver for calculating forces (default: `4`).\n   */\n  get numSolverIterations() {\n    return this.raw.numSolverIterations;\n  }\n  /**\n   * Number of addition friction resolution iteration run during the last solver sub-step (default: `4`).\n   */\n  get numAdditionalFrictionIterations() {\n    return this.raw.numAdditionalFrictionIterations;\n  }\n  /**\n   * Number of internal Project Gauss Seidel (PGS) iterations run at each solver iteration (default: `1`).\n   */\n  get numInternalPgsIterations() {\n    return this.raw.numInternalPgsIterations;\n  }\n  /**\n   * Minimum number of dynamic bodies in each active island (default: `128`).\n   */\n  get minIslandSize() {\n    return this.raw.minIslandSize;\n  }\n  /**\n   * Maximum number of substeps performed by the  solver (default: `1`).\n   */\n  get maxCcdSubsteps() {\n    return this.raw.maxCcdSubsteps;\n  }\n  set dt(value) {\n    this.raw.dt = value;\n  }\n  set erp(value) {\n    this.raw.erp = value;\n  }\n  set lengthUnit(value) {\n    this.raw.lengthUnit = value;\n  }\n  set normalizedAllowedLinearError(value) {\n    this.raw.normalizedAllowedLinearError = value;\n  }\n  set normalizedPredictionDistance(value) {\n    this.raw.normalizedPredictionDistance = value;\n  }\n  /**\n   * Sets the number of solver iterations run by the constraints solver for calculating forces (default: `4`).\n   */\n  set numSolverIterations(value) {\n    this.raw.numSolverIterations = value;\n  }\n  /**\n   * Sets the number of addition friction resolution iteration run during the last solver sub-step (default: `4`).\n   */\n  set numAdditionalFrictionIterations(value) {\n    this.raw.numAdditionalFrictionIterations = value;\n  }\n  /**\n   * Sets the number of internal Project Gauss Seidel (PGS) iterations run at each solver iteration (default: `1`).\n   */\n  set numInternalPgsIterations(value) {\n    this.raw.numInternalPgsIterations = value;\n  }\n  set minIslandSize(value) {\n    this.raw.minIslandSize = value;\n  }\n  set maxCcdSubsteps(value) {\n    this.raw.maxCcdSubsteps = value;\n  }\n  switchToStandardPgsSolver() {\n    this.raw.switchToStandardPgsSolver();\n  }\n  switchToSmallStepsPgsSolver() {\n    this.raw.switchToSmallStepsPgsSolver();\n  }\n  switchToSmallStepsPgsSolverWithoutWarmstart() {\n    this.raw.switchToSmallStepsPgsSolverWithoutWarmstart();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2R5bmFtaWNzL2ludGVncmF0aW9uX3BhcmFtZXRlcnMudHM/OTNlMyJdLCJuYW1lcyI6WyJJbnRlZ3JhdGlvblBhcmFtZXRlcnMiLCJjb25zdHJ1Y3RvciIsInJhdyIsIlJhd0ludGVncmF0aW9uUGFyYW1ldGVycyIsImZyZWUiLCJ1bmRlZmluZWQiLCJkdCIsImVycCIsImxlbmd0aFVuaXQiLCJub3JtYWxpemVkQWxsb3dlZExpbmVhckVycm9yIiwibm9ybWFsaXplZFByZWRpY3Rpb25EaXN0YW5jZSIsIm51bVNvbHZlckl0ZXJhdGlvbnMiLCJudW1BZGRpdGlvbmFsRnJpY3Rpb25JdGVyYXRpb25zIiwibnVtSW50ZXJuYWxQZ3NJdGVyYXRpb25zIiwibWluSXNsYW5kU2l6ZSIsIm1heENjZFN1YnN0ZXBzIiwidmFsdWUiLCJzd2l0Y2hUb1N0YW5kYXJkUGdzU29sdmVyIiwic3dpdGNoVG9TbWFsbFN0ZXBzUGdzU29sdmVyIiwic3dpdGNoVG9TbWFsbFN0ZXBzUGdzU29sdmVyV2l0aG91dFdhcm1zdGFydCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQStDO0FBRXpDLE1BQU9BLHFCQUFxQjtFQUc5QkMsWUFBWUMsR0FBOEI7SUFDdEMsSUFBSSxDQUFDQSxHQUFHLEdBQUdBLEdBQUcsSUFBSSxJQUFJQyw2REFBd0IsRUFBRTtFQUNwRDtFQUVBOzs7RUFHT0MsSUFBSUEsQ0FBQTtJQUNQLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQ0YsR0FBRyxFQUFFO01BQ1osSUFBSSxDQUFDQSxHQUFHLENBQUNFLElBQUksRUFBRTs7SUFFbkIsSUFBSSxDQUFDRixHQUFHLEdBQUdHLFNBQVM7RUFDeEI7RUFFQTs7O0VBR0EsSUFBSUMsRUFBRUEsQ0FBQTtJQUNGLE9BQU8sSUFBSSxDQUFDSixHQUFHLENBQUNJLEVBQUU7RUFDdEI7RUFFQTs7OztFQUlBLElBQUlDLEdBQUdBLENBQUE7SUFDSCxPQUFPLElBQUksQ0FBQ0wsR0FBRyxDQUFDSyxHQUFHO0VBQ3ZCO0VBRUEsSUFBSUMsVUFBVUEsQ0FBQTtJQUNWLE9BQU8sSUFBSSxDQUFDTixHQUFHLENBQUNNLFVBQVU7RUFDOUI7RUFFQTs7Ozs7RUFLQSxJQUFJQyw0QkFBNEJBLENBQUE7SUFDNUIsT0FBTyxJQUFJLENBQUNQLEdBQUcsQ0FBQ08sNEJBQTRCO0VBQ2hEO0VBRUE7Ozs7O0VBS0EsSUFBSUMsNEJBQTRCQSxDQUFBO0lBQzVCLE9BQU8sSUFBSSxDQUFDUixHQUFHLENBQUNRLDRCQUE0QjtFQUNoRDtFQUVBOzs7RUFHQSxJQUFJQyxtQkFBbUJBLENBQUE7SUFDbkIsT0FBTyxJQUFJLENBQUNULEdBQUcsQ0FBQ1MsbUJBQW1CO0VBQ3ZDO0VBRUE7OztFQUdBLElBQUlDLCtCQUErQkEsQ0FBQTtJQUMvQixPQUFPLElBQUksQ0FBQ1YsR0FBRyxDQUFDVSwrQkFBK0I7RUFDbkQ7RUFFQTs7O0VBR0EsSUFBSUMsd0JBQXdCQSxDQUFBO0lBQ3hCLE9BQU8sSUFBSSxDQUFDWCxHQUFHLENBQUNXLHdCQUF3QjtFQUM1QztFQUVBOzs7RUFHQSxJQUFJQyxhQUFhQSxDQUFBO0lBQ2IsT0FBTyxJQUFJLENBQUNaLEdBQUcsQ0FBQ1ksYUFBYTtFQUNqQztFQUVBOzs7RUFHQSxJQUFJQyxjQUFjQSxDQUFBO0lBQ2QsT0FBTyxJQUFJLENBQUNiLEdBQUcsQ0FBQ2EsY0FBYztFQUNsQztFQUVBLElBQUlULEVBQUVBLENBQUNVLEtBQWE7SUFDaEIsSUFBSSxDQUFDZCxHQUFHLENBQUNJLEVBQUUsR0FBR1UsS0FBSztFQUN2QjtFQUVBLElBQUlULEdBQUdBLENBQUNTLEtBQWE7SUFDakIsSUFBSSxDQUFDZCxHQUFHLENBQUNLLEdBQUcsR0FBR1MsS0FBSztFQUN4QjtFQUVBLElBQUlSLFVBQVVBLENBQUNRLEtBQWE7SUFDeEIsSUFBSSxDQUFDZCxHQUFHLENBQUNNLFVBQVUsR0FBR1EsS0FBSztFQUMvQjtFQUVBLElBQUlQLDRCQUE0QkEsQ0FBQ08sS0FBYTtJQUMxQyxJQUFJLENBQUNkLEdBQUcsQ0FBQ08sNEJBQTRCLEdBQUdPLEtBQUs7RUFDakQ7RUFFQSxJQUFJTiw0QkFBNEJBLENBQUNNLEtBQWE7SUFDMUMsSUFBSSxDQUFDZCxHQUFHLENBQUNRLDRCQUE0QixHQUFHTSxLQUFLO0VBQ2pEO0VBRUE7OztFQUdBLElBQUlMLG1CQUFtQkEsQ0FBQ0ssS0FBYTtJQUNqQyxJQUFJLENBQUNkLEdBQUcsQ0FBQ1MsbUJBQW1CLEdBQUdLLEtBQUs7RUFDeEM7RUFFQTs7O0VBR0EsSUFBSUosK0JBQStCQSxDQUFDSSxLQUFhO0lBQzdDLElBQUksQ0FBQ2QsR0FBRyxDQUFDVSwrQkFBK0IsR0FBR0ksS0FBSztFQUNwRDtFQUVBOzs7RUFHQSxJQUFJSCx3QkFBd0JBLENBQUNHLEtBQWE7SUFDdEMsSUFBSSxDQUFDZCxHQUFHLENBQUNXLHdCQUF3QixHQUFHRyxLQUFLO0VBQzdDO0VBRUEsSUFBSUYsYUFBYUEsQ0FBQ0UsS0FBYTtJQUMzQixJQUFJLENBQUNkLEdBQUcsQ0FBQ1ksYUFBYSxHQUFHRSxLQUFLO0VBQ2xDO0VBRUEsSUFBSUQsY0FBY0EsQ0FBQ0MsS0FBYTtJQUM1QixJQUFJLENBQUNkLEdBQUcsQ0FBQ2EsY0FBYyxHQUFHQyxLQUFLO0VBQ25DO0VBRU9DLHlCQUF5QkEsQ0FBQTtJQUM1QixJQUFJLENBQUNmLEdBQUcsQ0FBQ2UseUJBQXlCLEVBQUU7RUFDeEM7RUFFT0MsMkJBQTJCQSxDQUFBO0lBQzlCLElBQUksQ0FBQ2hCLEdBQUcsQ0FBQ2dCLDJCQUEyQixFQUFFO0VBQzFDO0VBRU9DLDJDQUEyQ0EsQ0FBQTtJQUM5QyxJQUFJLENBQUNqQixHQUFHLENBQUNpQiwyQ0FBMkMsRUFBRTtFQUMxRCIsImZpbGUiOiIuL2xpYi9AZGltZm9yZ2UvcmFwaWVyM2QvZHluYW1pY3MvaW50ZWdyYXRpb25fcGFyYW1ldGVycy5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/dynamics/integration_parameters.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/dynamics/island_manager.js":
/*!***********************************************************!*\
  !*** ./lib/@dimforge/rapier3d/dynamics/island_manager.js ***!
  \***********************************************************/
/*! exports provided: IslandManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IslandManager\", function() { return IslandManager; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n\n/**\n * The CCD solver responsible for resolving Continuous Collision Detection.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `ccdSolver.free()`\n * once you are done using it.\n */\nclass IslandManager {\n  constructor(raw) {\n    this.raw = raw || new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawIslandManager\"]();\n  }\n  /**\n   * Release the WASM memory occupied by this narrow-phase.\n   */\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n  }\n  /**\n   * Applies the given closure to the handle of each active rigid-bodies contained by this set.\n   *\n   * A rigid-body is active if it is not sleeping, i.e., if it moved recently.\n   *\n   * @param f - The closure to apply.\n   */\n  forEachActiveRigidBodyHandle(f) {\n    this.raw.forEachActiveRigidBodyHandle(f);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2R5bmFtaWNzL2lzbGFuZF9tYW5hZ2VyLnRzPzFkMDgiXSwibmFtZXMiOlsiSXNsYW5kTWFuYWdlciIsImNvbnN0cnVjdG9yIiwicmF3IiwiUmF3SXNsYW5kTWFuYWdlciIsImZyZWUiLCJ1bmRlZmluZWQiLCJmb3JFYWNoQWN0aXZlUmlnaWRCb2R5SGFuZGxlIiwiZiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQXVDO0FBR3ZDOzs7Ozs7QUFNTSxNQUFPQSxhQUFhO0VBYXRCQyxZQUFZQyxHQUFzQjtJQUM5QixJQUFJLENBQUNBLEdBQUcsR0FBR0EsR0FBRyxJQUFJLElBQUlDLHFEQUFnQixFQUFFO0VBQzVDO0VBWkE7OztFQUdPQyxJQUFJQSxDQUFBO0lBQ1AsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDRixHQUFHLEVBQUU7TUFDWixJQUFJLENBQUNBLEdBQUcsQ0FBQ0UsSUFBSSxFQUFFOztJQUVuQixJQUFJLENBQUNGLEdBQUcsR0FBR0csU0FBUztFQUN4QjtFQU1BOzs7Ozs7O0VBT09DLDRCQUE0QkEsQ0FBQ0MsQ0FBb0M7SUFDcEUsSUFBSSxDQUFDTCxHQUFHLENBQUNJLDRCQUE0QixDQUFDQyxDQUFDLENBQUM7RUFDNUMiLCJmaWxlIjoiLi9saWIvQGRpbWZvcmdlL3JhcGllcjNkL2R5bmFtaWNzL2lzbGFuZF9tYW5hZ2VyLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/dynamics/island_manager.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/dynamics/multibody_joint.js":
/*!************************************************************!*\
  !*** ./lib/@dimforge/rapier3d/dynamics/multibody_joint.js ***!
  \************************************************************/
/*! exports provided: MultibodyJoint, UnitMultibodyJoint, FixedMultibodyJoint, PrismaticMultibodyJoint, RevoluteMultibodyJoint, SphericalMultibodyJoint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MultibodyJoint\", function() { return MultibodyJoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UnitMultibodyJoint\", function() { return UnitMultibodyJoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FixedMultibodyJoint\", function() { return FixedMultibodyJoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PrismaticMultibodyJoint\", function() { return PrismaticMultibodyJoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RevoluteMultibodyJoint\", function() { return RevoluteMultibodyJoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SphericalMultibodyJoint\", function() { return SphericalMultibodyJoint; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n\nclass MultibodyJoint {\n  constructor(rawSet, handle) {\n    this.rawSet = rawSet;\n    this.handle = handle;\n  }\n  static newTyped(rawSet, handle) {\n    switch (rawSet.jointType(handle)) {\n      case _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawJointType\"].Revolute:\n        return new RevoluteMultibodyJoint(rawSet, handle);\n      case _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawJointType\"].Prismatic:\n        return new PrismaticMultibodyJoint(rawSet, handle);\n      case _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawJointType\"].Fixed:\n        return new FixedMultibodyJoint(rawSet, handle);\n      // #if DIM3\n      case _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawJointType\"].Spherical:\n        return new SphericalMultibodyJoint(rawSet, handle);\n      // #endif\n      default:\n        return new MultibodyJoint(rawSet, handle);\n    }\n  }\n  /**\n   * Checks if this joint is still valid (i.e. that it has\n   * not been deleted from the joint set yet).\n   */\n  isValid() {\n    return this.rawSet.contains(this.handle);\n  }\n  // /**\n  //  * The unique integer identifier of the first rigid-body this joint it attached to.\n  //  */\n  // public bodyHandle1(): RigidBodyHandle {\n  //     return this.rawSet.jointBodyHandle1(this.handle);\n  // }\n  //\n  // /**\n  //  * The unique integer identifier of the second rigid-body this joint is attached to.\n  //  */\n  // public bodyHandle2(): RigidBodyHandle {\n  //     return this.rawSet.jointBodyHandle2(this.handle);\n  // }\n  //\n  // /**\n  //  * The type of this joint given as a string.\n  //  */\n  // public type(): JointType {\n  //     return this.rawSet.jointType(this.handle);\n  // }\n  //\n  // // #if DIM3\n  // /**\n  //  * The rotation quaternion that aligns this joint's first local axis to the `x` axis.\n  //  */\n  // public frameX1(): Rotation {\n  //     return RotationOps.fromRaw(this.rawSet.jointFrameX1(this.handle));\n  // }\n  //\n  // // #endif\n  //\n  // // #if DIM3\n  // /**\n  //  * The rotation matrix that aligns this joint's second local axis to the `x` axis.\n  //  */\n  // public frameX2(): Rotation {\n  //     return RotationOps.fromRaw(this.rawSet.jointFrameX2(this.handle));\n  // }\n  //\n  // // #endif\n  //\n  // /**\n  //  * The position of the first anchor of this joint.\n  //  *\n  //  * The first anchor gives the position of the points application point on the\n  //  * local frame of the first rigid-body it is attached to.\n  //  */\n  // public anchor1(): Vector {\n  //     return VectorOps.fromRaw(this.rawSet.jointAnchor1(this.handle));\n  // }\n  //\n  // /**\n  //  * The position of the second anchor of this joint.\n  //  *\n  //  * The second anchor gives the position of the points application point on the\n  //  * local frame of the second rigid-body it is attached to.\n  //  */\n  // public anchor2(): Vector {\n  //     return VectorOps.fromRaw(this.rawSet.jointAnchor2(this.handle));\n  // }\n  /**\n   * Controls whether contacts are computed between colliders attached\n   * to the rigid-bodies linked by this joint.\n   */\n  setContactsEnabled(enabled) {\n    this.rawSet.jointSetContactsEnabled(this.handle, enabled);\n  }\n  /**\n   * Indicates if contacts are enabled between colliders attached\n   * to the rigid-bodies linked by this joint.\n   */\n  contactsEnabled() {\n    return this.rawSet.jointContactsEnabled(this.handle);\n  }\n}\nclass UnitMultibodyJoint extends MultibodyJoint {}\nclass FixedMultibodyJoint extends MultibodyJoint {}\nclass PrismaticMultibodyJoint extends UnitMultibodyJoint {\n  rawAxis() {\n    return _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawJointAxis\"].X;\n  }\n}\nclass RevoluteMultibodyJoint extends UnitMultibodyJoint {\n  rawAxis() {\n    return _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawJointAxis\"].AngX;\n  }\n}\n// #if DIM3\nclass SphericalMultibodyJoint extends MultibodyJoint {}\n// #endif//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2R5bmFtaWNzL211bHRpYm9keV9qb2ludC50cz8yOTJhIl0sIm5hbWVzIjpbIk11bHRpYm9keUpvaW50IiwiY29uc3RydWN0b3IiLCJyYXdTZXQiLCJoYW5kbGUiLCJuZXdUeXBlZCIsImpvaW50VHlwZSIsIlJhd0pvaW50VHlwZSIsIlJldm9sdXRlIiwiUmV2b2x1dGVNdWx0aWJvZHlKb2ludCIsIlByaXNtYXRpYyIsIlByaXNtYXRpY011bHRpYm9keUpvaW50IiwiRml4ZWQiLCJGaXhlZE11bHRpYm9keUpvaW50IiwiU3BoZXJpY2FsIiwiU3BoZXJpY2FsTXVsdGlib2R5Sm9pbnQiLCJpc1ZhbGlkIiwiY29udGFpbnMiLCJzZXRDb250YWN0c0VuYWJsZWQiLCJlbmFibGVkIiwiam9pbnRTZXRDb250YWN0c0VuYWJsZWQiLCJjb250YWN0c0VuYWJsZWQiLCJqb2ludENvbnRhY3RzRW5hYmxlZCIsIlVuaXRNdWx0aWJvZHlKb2ludCIsInJhd0F4aXMiLCJSYXdKb2ludEF4aXMiLCJYIiwiQW5nWCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUtlO0FBb0JULE1BQU9BLGNBQWM7RUFJdkJDLFlBQVlDLE1BQTRCLEVBQUVDLE1BQTRCO0lBQ2xFLElBQUksQ0FBQ0QsTUFBTSxHQUFHQSxNQUFNO0lBQ3BCLElBQUksQ0FBQ0MsTUFBTSxHQUFHQSxNQUFNO0VBQ3hCO0VBRU8sT0FBT0MsUUFBUUEsQ0FDbEJGLE1BQTRCLEVBQzVCQyxNQUE0QjtJQUU1QixRQUFRRCxNQUFNLENBQUNHLFNBQVMsQ0FBQ0YsTUFBTSxDQUFDO01BQzVCLEtBQUtHLGlEQUFZLENBQUNDLFFBQVE7UUFDdEIsT0FBTyxJQUFJQyxzQkFBc0IsQ0FBQ04sTUFBTSxFQUFFQyxNQUFNLENBQUM7TUFDckQsS0FBS0csaURBQVksQ0FBQ0csU0FBUztRQUN2QixPQUFPLElBQUlDLHVCQUF1QixDQUFDUixNQUFNLEVBQUVDLE1BQU0sQ0FBQztNQUN0RCxLQUFLRyxpREFBWSxDQUFDSyxLQUFLO1FBQ25CLE9BQU8sSUFBSUMsbUJBQW1CLENBQUNWLE1BQU0sRUFBRUMsTUFBTSxDQUFDO01BQ2xEO01BQ0EsS0FBS0csaURBQVksQ0FBQ08sU0FBUztRQUN2QixPQUFPLElBQUlDLHVCQUF1QixDQUFDWixNQUFNLEVBQUVDLE1BQU0sQ0FBQztNQUN0RDtNQUNBO1FBQ0ksT0FBTyxJQUFJSCxjQUFjLENBQUNFLE1BQU0sRUFBRUMsTUFBTSxDQUFDOztFQUVyRDtFQUVBOzs7O0VBSU9ZLE9BQU9BLENBQUE7SUFDVixPQUFPLElBQUksQ0FBQ2IsTUFBTSxDQUFDYyxRQUFRLENBQUMsSUFBSSxDQUFDYixNQUFNLENBQUM7RUFDNUM7RUFFQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFFQTs7OztFQUlPYyxrQkFBa0JBLENBQUNDLE9BQWdCO0lBQ3RDLElBQUksQ0FBQ2hCLE1BQU0sQ0FBQ2lCLHVCQUF1QixDQUFDLElBQUksQ0FBQ2hCLE1BQU0sRUFBRWUsT0FBTyxDQUFDO0VBQzdEO0VBRUE7Ozs7RUFJT0UsZUFBZUEsQ0FBQTtJQUNsQixPQUFPLElBQUksQ0FBQ2xCLE1BQU0sQ0FBQ21CLG9CQUFvQixDQUFDLElBQUksQ0FBQ2xCLE1BQU0sQ0FBQztFQUN4RDs7QUFHRSxNQUFPbUIsa0JBQW1CLFNBQVF0QixjQUFjO0FBNENoRCxNQUFPWSxtQkFBb0IsU0FBUVosY0FBYztBQUVqRCxNQUFPVSx1QkFBd0IsU0FBUVksa0JBQWtCO0VBQ3BEQyxPQUFPQSxDQUFBO0lBQ1YsT0FBT0MsaURBQVksQ0FBQ0MsQ0FBQztFQUN6Qjs7QUFHRSxNQUFPakIsc0JBQXVCLFNBQVFjLGtCQUFrQjtFQUNuREMsT0FBT0EsQ0FBQTtJQUNWLE9BQU9DLGlEQUFZLENBQUNFLElBQUk7RUFDNUI7O0FBR0o7QUFDTSxNQUFPWix1QkFBd0IsU0FBUWQsY0FBYztBQXNCM0QiLCJmaWxlIjoiLi9saWIvQGRpbWZvcmdlL3JhcGllcjNkL2R5bmFtaWNzL211bHRpYm9keV9qb2ludC5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/dynamics/multibody_joint.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/dynamics/multibody_joint_set.js":
/*!****************************************************************!*\
  !*** ./lib/@dimforge/rapier3d/dynamics/multibody_joint_set.js ***!
  \****************************************************************/
/*! exports provided: MultibodyJointSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MultibodyJointSet\", function() { return MultibodyJointSet; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n/* harmony import */ var _coarena__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../coarena */ \"./lib/@dimforge/rapier3d/coarena.js\");\n/* harmony import */ var _multibody_joint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./multibody_joint */ \"./lib/@dimforge/rapier3d/dynamics/multibody_joint.js\");\n\n\n\n/**\n * A set of joints.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `jointSet.free()`\n * once you are done using it (and all the joints it created).\n */\nclass MultibodyJointSet {\n  constructor(raw) {\n    this.raw = raw || new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawMultibodyJointSet\"]();\n    this.map = new _coarena__WEBPACK_IMPORTED_MODULE_1__[\"Coarena\"]();\n    // Initialize the map with the existing elements, if any.\n    if (raw) {\n      raw.forEachJointHandle(handle => {\n        this.map.set(handle, _multibody_joint__WEBPACK_IMPORTED_MODULE_2__[\"MultibodyJoint\"].newTyped(this.raw, handle));\n      });\n    }\n  }\n  /**\n   * Release the WASM memory occupied by this joint set.\n   */\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n    if (!!this.map) {\n      this.map.clear();\n    }\n    this.map = undefined;\n  }\n  /**\n   * Creates a new joint and return its integer handle.\n   *\n   * @param desc - The joint's parameters.\n   * @param parent1 - The handle of the first rigid-body this joint is attached to.\n   * @param parent2 - The handle of the second rigid-body this joint is attached to.\n   * @param wakeUp - Should the attached rigid-bodies be awakened?\n   */\n  createJoint(desc, parent1, parent2, wakeUp) {\n    const rawParams = desc.intoRaw();\n    const handle = this.raw.createJoint(rawParams, parent1, parent2, wakeUp);\n    rawParams.free();\n    let joint = _multibody_joint__WEBPACK_IMPORTED_MODULE_2__[\"MultibodyJoint\"].newTyped(this.raw, handle);\n    this.map.set(handle, joint);\n    return joint;\n  }\n  /**\n   * Remove a joint from this set.\n   *\n   * @param handle - The integer handle of the joint.\n   * @param wake_up - If `true`, the rigid-bodies attached by the removed joint will be woken-up automatically.\n   */\n  remove(handle, wake_up) {\n    this.raw.remove(handle, wake_up);\n    this.map.delete(handle);\n  }\n  /**\n   * Internal function, do not call directly.\n   * @param handle\n   */\n  unmap(handle) {\n    this.map.delete(handle);\n  }\n  /**\n   * The number of joints on this set.\n   */\n  len() {\n    return this.map.len();\n  }\n  /**\n   * Does this set contain a joint with the given handle?\n   *\n   * @param handle - The joint handle to check.\n   */\n  contains(handle) {\n    return this.get(handle) != null;\n  }\n  /**\n   * Gets the joint with the given handle.\n   *\n   * Returns `null` if no joint with the specified handle exists.\n   *\n   * @param handle - The integer handle of the joint to retrieve.\n   */\n  get(handle) {\n    return this.map.get(handle);\n  }\n  /**\n   * Applies the given closure to each joint contained by this set.\n   *\n   * @param f - The closure to apply.\n   */\n  forEach(f) {\n    this.map.forEach(f);\n  }\n  /**\n   * Calls the given closure with the integer handle of each multibody joint attached to this rigid-body.\n   *\n   * @param f - The closure called with the integer handle of each multibody joint attached to the rigid-body.\n   */\n  forEachJointHandleAttachedToRigidBody(handle, f) {\n    this.raw.forEachJointAttachedToRigidBody(handle, f);\n  }\n  /**\n   * Gets all joints in the list.\n   *\n   * @returns joint list.\n   */\n  getAll() {\n    return this.map.getAll();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2R5bmFtaWNzL211bHRpYm9keV9qb2ludF9zZXQudHM/MWYyNSJdLCJuYW1lcyI6WyJNdWx0aWJvZHlKb2ludFNldCIsImNvbnN0cnVjdG9yIiwicmF3IiwiUmF3TXVsdGlib2R5Sm9pbnRTZXQiLCJtYXAiLCJDb2FyZW5hIiwiZm9yRWFjaEpvaW50SGFuZGxlIiwiaGFuZGxlIiwic2V0IiwiTXVsdGlib2R5Sm9pbnQiLCJuZXdUeXBlZCIsImZyZWUiLCJ1bmRlZmluZWQiLCJjbGVhciIsImNyZWF0ZUpvaW50IiwiZGVzYyIsInBhcmVudDEiLCJwYXJlbnQyIiwid2FrZVVwIiwicmF3UGFyYW1zIiwiaW50b1JhdyIsImpvaW50IiwicmVtb3ZlIiwid2FrZV91cCIsImRlbGV0ZSIsInVubWFwIiwibGVuIiwiY29udGFpbnMiLCJnZXQiLCJmb3JFYWNoIiwiZiIsImZvckVhY2hKb2ludEhhbmRsZUF0dGFjaGVkVG9SaWdpZEJvZHkiLCJmb3JFYWNoSm9pbnRBdHRhY2hlZFRvUmlnaWRCb2R5IiwiZ2V0QWxsIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTJDO0FBQ1Q7QUFXUjtBQU0xQjs7Ozs7O0FBTU0sTUFBT0EsaUJBQWlCO0VBbUIxQkMsWUFBWUMsR0FBMEI7SUFDbEMsSUFBSSxDQUFDQSxHQUFHLEdBQUdBLEdBQUcsSUFBSSxJQUFJQyx5REFBb0IsRUFBRTtJQUM1QyxJQUFJLENBQUNDLEdBQUcsR0FBRyxJQUFJQyxnREFBTyxFQUFrQjtJQUN4QztJQUNBLElBQUlILEdBQUcsRUFBRTtNQUNMQSxHQUFHLENBQUNJLGtCQUFrQixDQUFFQyxNQUE0QixJQUFJO1FBQ3BELElBQUksQ0FBQ0gsR0FBRyxDQUFDSSxHQUFHLENBQUNELE1BQU0sRUFBRUUsK0RBQWMsQ0FBQ0MsUUFBUSxDQUFDLElBQUksQ0FBQ1IsR0FBRyxFQUFFSyxNQUFNLENBQUMsQ0FBQztNQUNuRSxDQUFDLENBQUM7O0VBRVY7RUF4QkE7OztFQUdPSSxJQUFJQSxDQUFBO0lBQ1AsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDVCxHQUFHLEVBQUU7TUFDWixJQUFJLENBQUNBLEdBQUcsQ0FBQ1MsSUFBSSxFQUFFOztJQUVuQixJQUFJLENBQUNULEdBQUcsR0FBR1UsU0FBUztJQUVwQixJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUNSLEdBQUcsRUFBRTtNQUNaLElBQUksQ0FBQ0EsR0FBRyxDQUFDUyxLQUFLLEVBQUU7O0lBRXBCLElBQUksQ0FBQ1QsR0FBRyxHQUFHUSxTQUFTO0VBQ3hCO0VBYUE7Ozs7Ozs7O0VBUU9FLFdBQVdBLENBQ2RDLElBQWUsRUFDZkMsT0FBd0IsRUFDeEJDLE9BQXdCLEVBQ3hCQyxNQUFlO0lBRWYsTUFBTUMsU0FBUyxHQUFHSixJQUFJLENBQUNLLE9BQU8sRUFBRTtJQUNoQyxNQUFNYixNQUFNLEdBQUcsSUFBSSxDQUFDTCxHQUFHLENBQUNZLFdBQVcsQ0FDL0JLLFNBQVMsRUFDVEgsT0FBTyxFQUNQQyxPQUFPLEVBQ1BDLE1BQU0sQ0FDVDtJQUNEQyxTQUFTLENBQUNSLElBQUksRUFBRTtJQUNoQixJQUFJVSxLQUFLLEdBQUdaLCtEQUFjLENBQUNDLFFBQVEsQ0FBQyxJQUFJLENBQUNSLEdBQUcsRUFBRUssTUFBTSxDQUFDO0lBQ3JELElBQUksQ0FBQ0gsR0FBRyxDQUFDSSxHQUFHLENBQUNELE1BQU0sRUFBRWMsS0FBSyxDQUFDO0lBQzNCLE9BQU9BLEtBQUs7RUFDaEI7RUFFQTs7Ozs7O0VBTU9DLE1BQU1BLENBQUNmLE1BQTRCLEVBQUVnQixPQUFnQjtJQUN4RCxJQUFJLENBQUNyQixHQUFHLENBQUNvQixNQUFNLENBQUNmLE1BQU0sRUFBRWdCLE9BQU8sQ0FBQztJQUNoQyxJQUFJLENBQUNuQixHQUFHLENBQUNvQixNQUFNLENBQUNqQixNQUFNLENBQUM7RUFDM0I7RUFFQTs7OztFQUlPa0IsS0FBS0EsQ0FBQ2xCLE1BQTRCO0lBQ3JDLElBQUksQ0FBQ0gsR0FBRyxDQUFDb0IsTUFBTSxDQUFDakIsTUFBTSxDQUFDO0VBQzNCO0VBRUE7OztFQUdPbUIsR0FBR0EsQ0FBQTtJQUNOLE9BQU8sSUFBSSxDQUFDdEIsR0FBRyxDQUFDc0IsR0FBRyxFQUFFO0VBQ3pCO0VBRUE7Ozs7O0VBS09DLFFBQVFBLENBQUNwQixNQUE0QjtJQUN4QyxPQUFPLElBQUksQ0FBQ3FCLEdBQUcsQ0FBQ3JCLE1BQU0sQ0FBQyxJQUFJLElBQUk7RUFDbkM7RUFFQTs7Ozs7OztFQU9PcUIsR0FBR0EsQ0FBQ3JCLE1BQTRCO0lBQ25DLE9BQU8sSUFBSSxDQUFDSCxHQUFHLENBQUN3QixHQUFHLENBQUNyQixNQUFNLENBQUM7RUFDL0I7RUFFQTs7Ozs7RUFLT3NCLE9BQU9BLENBQUNDLENBQWtDO0lBQzdDLElBQUksQ0FBQzFCLEdBQUcsQ0FBQ3lCLE9BQU8sQ0FBQ0MsQ0FBQyxDQUFDO0VBQ3ZCO0VBRUE7Ozs7O0VBS09DLHFDQUFxQ0EsQ0FDeEN4QixNQUF1QixFQUN2QnVCLENBQXlDO0lBRXpDLElBQUksQ0FBQzVCLEdBQUcsQ0FBQzhCLCtCQUErQixDQUFDekIsTUFBTSxFQUFFdUIsQ0FBQyxDQUFDO0VBQ3ZEO0VBRUE7Ozs7O0VBS09HLE1BQU1BLENBQUE7SUFDVCxPQUFPLElBQUksQ0FBQzdCLEdBQUcsQ0FBQzZCLE1BQU0sRUFBRTtFQUM1QiIsImZpbGUiOiIuL2xpYi9AZGltZm9yZ2UvcmFwaWVyM2QvZHluYW1pY3MvbXVsdGlib2R5X2pvaW50X3NldC5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/dynamics/multibody_joint_set.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/dynamics/rigid_body.js":
/*!*******************************************************!*\
  !*** ./lib/@dimforge/rapier3d/dynamics/rigid_body.js ***!
  \*******************************************************/
/*! exports provided: RigidBodyType, RigidBody, RigidBodyDesc */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RigidBodyType\", function() { return RigidBodyType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RigidBody\", function() { return RigidBody; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RigidBodyDesc\", function() { return RigidBodyDesc; });\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n\n// #if DIM3\n\n/**\n * The simulation status of a rigid-body.\n */\n// TODO: rename this to RigidBodyType\nvar RigidBodyType;\n(function (RigidBodyType) {\n  /**\n   * A `RigidBodyType::Dynamic` body can be affected by all external forces.\n   */\n  RigidBodyType[RigidBodyType[\"Dynamic\"] = 0] = \"Dynamic\";\n  /**\n   * A `RigidBodyType::Fixed` body cannot be affected by external forces.\n   */\n  RigidBodyType[RigidBodyType[\"Fixed\"] = 1] = \"Fixed\";\n  /**\n   * A `RigidBodyType::KinematicPositionBased` body cannot be affected by any external forces but can be controlled\n   * by the user at the position level while keeping realistic one-way interaction with dynamic bodies.\n   *\n   * One-way interaction means that a kinematic body can push a dynamic body, but a kinematic body\n   * cannot be pushed by anything. In other words, the trajectory of a kinematic body can only be\n   * modified by the user and is independent from any contact or joint it is involved in.\n   */\n  RigidBodyType[RigidBodyType[\"KinematicPositionBased\"] = 2] = \"KinematicPositionBased\";\n  /**\n   * A `RigidBodyType::KinematicVelocityBased` body cannot be affected by any external forces but can be controlled\n   * by the user at the velocity level while keeping realistic one-way interaction with dynamic bodies.\n   *\n   * One-way interaction means that a kinematic body can push a dynamic body, but a kinematic body\n   * cannot be pushed by anything. In other words, the trajectory of a kinematic body can only be\n   * modified by the user and is independent from any contact or joint it is involved in.\n   */\n  RigidBodyType[RigidBodyType[\"KinematicVelocityBased\"] = 3] = \"KinematicVelocityBased\";\n})(RigidBodyType || (RigidBodyType = {}));\n/**\n * A rigid-body.\n */\nclass RigidBody {\n  constructor(rawSet, colliderSet, handle) {\n    this.rawSet = rawSet;\n    this.colliderSet = colliderSet;\n    this.handle = handle;\n  }\n  /** @internal */\n  finalizeDeserialization(colliderSet) {\n    this.colliderSet = colliderSet;\n  }\n  /**\n   * Checks if this rigid-body is still valid (i.e. that it has\n   * not been deleted from the rigid-body set yet.\n   */\n  isValid() {\n    return this.rawSet.contains(this.handle);\n  }\n  /**\n   * Locks or unlocks the ability of this rigid-body to translate.\n   *\n   * @param locked - If `true`, this rigid-body will no longer translate due to forces and impulses.\n   * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n   */\n  lockTranslations(locked, wakeUp) {\n    return this.rawSet.rbLockTranslations(this.handle, locked, wakeUp);\n  }\n  /**\n   * Locks or unlocks the ability of this rigid-body to rotate.\n   *\n   * @param locked - If `true`, this rigid-body will no longer rotate due to torques and impulses.\n   * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n   */\n  lockRotations(locked, wakeUp) {\n    return this.rawSet.rbLockRotations(this.handle, locked, wakeUp);\n  }\n  // #if DIM3\n  /**\n   * Locks or unlocks the ability of this rigid-body to translate along individual coordinate axes.\n   *\n   * @param enableX - If `false`, this rigid-body will no longer translate due to torques and impulses, along the X coordinate axis.\n   * @param enableY - If `false`, this rigid-body will no longer translate due to torques and impulses, along the Y coordinate axis.\n   * @param enableZ - If `false`, this rigid-body will no longer translate due to torques and impulses, along the Z coordinate axis.\n   * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n   */\n  setEnabledTranslations(enableX, enableY, enableZ, wakeUp) {\n    return this.rawSet.rbSetEnabledTranslations(this.handle, enableX, enableY, enableZ, wakeUp);\n  }\n  /**\n   * Locks or unlocks the ability of this rigid-body to translate along individual coordinate axes.\n   *\n   * @param enableX - If `false`, this rigid-body will no longer translate due to torques and impulses, along the X coordinate axis.\n   * @param enableY - If `false`, this rigid-body will no longer translate due to torques and impulses, along the Y coordinate axis.\n   * @param enableZ - If `false`, this rigid-body will no longer translate due to torques and impulses, along the Z coordinate axis.\n   * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n   * @deprecated use `this.setEnabledTranslations` with the same arguments instead.\n   */\n  restrictTranslations(enableX, enableY, enableZ, wakeUp) {\n    this.setEnabledTranslations(enableX, enableY, enableZ, wakeUp);\n  }\n  /**\n   * Locks or unlocks the ability of this rigid-body to rotate along individual coordinate axes.\n   *\n   * @param enableX - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the X coordinate axis.\n   * @param enableY - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the Y coordinate axis.\n   * @param enableZ - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the Z coordinate axis.\n   * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n   */\n  setEnabledRotations(enableX, enableY, enableZ, wakeUp) {\n    return this.rawSet.rbSetEnabledRotations(this.handle, enableX, enableY, enableZ, wakeUp);\n  }\n  /**\n   * Locks or unlocks the ability of this rigid-body to rotate along individual coordinate axes.\n   *\n   * @param enableX - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the X coordinate axis.\n   * @param enableY - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the Y coordinate axis.\n   * @param enableZ - If `false`, this rigid-body will no longer rotate due to torques and impulses, along the Z coordinate axis.\n   * @param wakeUp - If `true`, this rigid-body will be automatically awaken if it is currently asleep.\n   * @deprecated use `this.setEnabledRotations` with the same arguments instead.\n   */\n  restrictRotations(enableX, enableY, enableZ, wakeUp) {\n    this.setEnabledRotations(enableX, enableY, enableZ, wakeUp);\n  }\n  // #endif\n  /**\n   * The dominance group, in [-127, +127] this rigid-body is part of.\n   */\n  dominanceGroup() {\n    return this.rawSet.rbDominanceGroup(this.handle);\n  }\n  /**\n   * Sets the dominance group of this rigid-body.\n   *\n   * @param group - The dominance group of this rigid-body. Must be a signed integer in the range [-127, +127].\n   */\n  setDominanceGroup(group) {\n    this.rawSet.rbSetDominanceGroup(this.handle, group);\n  }\n  /**\n   * The number of additional solver iterations that will be run for this\n   * rigid-body and everything that interacts with it directly or indirectly\n   * through contacts or joints.\n   */\n  additionalSolverIterations() {\n    return this.rawSet.rbAdditionalSolverIterations(this.handle);\n  }\n  /**\n   * Sets the number of additional solver iterations that will be run for this\n   * rigid-body and everything that interacts with it directly or indirectly\n   * through contacts or joints.\n   *\n   * Compared to increasing the global `World.numSolverIteration`, setting this\n   * value lets you increase accuracy on only a subset of the scene, resulting in reduced\n   * performance loss.\n   *\n   * @param iters - The new number of additional solver iterations (default: 0).\n   */\n  setAdditionalSolverIterations(iters) {\n    this.rawSet.rbSetAdditionalSolverIterations(this.handle, iters);\n  }\n  /**\n   * Enable or disable CCD (Continuous Collision Detection) for this rigid-body.\n   *\n   * @param enabled - If `true`, CCD will be enabled for this rigid-body.\n   */\n  enableCcd(enabled) {\n    this.rawSet.rbEnableCcd(this.handle, enabled);\n  }\n  /**\n   * Sets the soft-CCD prediction distance for this rigid-body.\n   *\n   * See the documentation of `RigidBodyDesc.setSoftCcdPrediction` for\n   * additional details.\n   */\n  setSoftCcdPrediction(distance) {\n    this.rawSet.rbSetSoftCcdPrediction(this.handle, distance);\n  }\n  /**\n   * Gets the soft-CCD prediction distance for this rigid-body.\n   *\n   * See the documentation of `RigidBodyDesc.setSoftCcdPrediction` for\n   * additional details.\n   */\n  softCcdPrediction() {\n    return this.rawSet.rbSoftCcdPrediction(this.handle);\n  }\n  /**\n   * The world-space translation of this rigid-body.\n   */\n  translation() {\n    let res = this.rawSet.rbTranslation(this.handle);\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(res);\n  }\n  /**\n   * The world-space orientation of this rigid-body.\n   */\n  rotation() {\n    let res = this.rawSet.rbRotation(this.handle);\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].fromRaw(res);\n  }\n  /**\n   * The world-space next translation of this rigid-body.\n   *\n   * If this rigid-body is kinematic this value is set by the `setNextKinematicTranslation`\n   * method and is used for estimating the kinematic body velocity at the next timestep.\n   * For non-kinematic bodies, this value is currently unspecified.\n   */\n  nextTranslation() {\n    let res = this.rawSet.rbNextTranslation(this.handle);\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(res);\n  }\n  /**\n   * The world-space next orientation of this rigid-body.\n   *\n   * If this rigid-body is kinematic this value is set by the `setNextKinematicRotation`\n   * method and is used for estimating the kinematic body velocity at the next timestep.\n   * For non-kinematic bodies, this value is currently unspecified.\n   */\n  nextRotation() {\n    let res = this.rawSet.rbNextRotation(this.handle);\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].fromRaw(res);\n  }\n  /**\n   * Sets the translation of this rigid-body.\n   *\n   * @param tra - The world-space position of the rigid-body.\n   * @param wakeUp - Forces the rigid-body to wake-up so it is properly affected by forces if it\n   *                 wasn't moving before modifying its position.\n   */\n  setTranslation(tra, wakeUp) {\n    // #if DIM3\n    this.rawSet.rbSetTranslation(this.handle, tra.x, tra.y, tra.z, wakeUp);\n    // #endif\n  }\n  /**\n   * Sets the linear velocity of this rigid-body.\n   *\n   * @param vel - The linear velocity to set.\n   * @param wakeUp - Forces the rigid-body to wake-up if it was asleep.\n   */\n  setLinvel(vel, wakeUp) {\n    let rawVel = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(vel);\n    this.rawSet.rbSetLinvel(this.handle, rawVel, wakeUp);\n    rawVel.free();\n  }\n  /**\n   * The scale factor applied to the gravity affecting\n   * this rigid-body.\n   */\n  gravityScale() {\n    return this.rawSet.rbGravityScale(this.handle);\n  }\n  /**\n   * Sets the scale factor applied to the gravity affecting\n   * this rigid-body.\n   *\n   * @param factor - The scale factor to set. A value of 0.0 means\n   *   that this rigid-body will on longer be affected by gravity.\n   * @param wakeUp - Forces the rigid-body to wake-up if it was asleep.\n   */\n  setGravityScale(factor, wakeUp) {\n    this.rawSet.rbSetGravityScale(this.handle, factor, wakeUp);\n  }\n  // #if DIM3\n  /**\n   * Sets the rotation quaternion of this rigid-body.\n   *\n   * This does nothing if a zero quaternion is provided.\n   *\n   * @param rotation - The rotation to set.\n   * @param wakeUp - Forces the rigid-body to wake-up so it is properly affected by forces if it\n   * wasn't moving before modifying its position.\n   */\n  setRotation(rot, wakeUp) {\n    this.rawSet.rbSetRotation(this.handle, rot.x, rot.y, rot.z, rot.w, wakeUp);\n  }\n  /**\n   * Sets the angular velocity fo this rigid-body.\n   *\n   * @param vel - The angular velocity to set.\n   * @param wakeUp - Forces the rigid-body to wake-up if it was asleep.\n   */\n  setAngvel(vel, wakeUp) {\n    let rawVel = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(vel);\n    this.rawSet.rbSetAngvel(this.handle, rawVel, wakeUp);\n    rawVel.free();\n  }\n  // #endif\n  /**\n   * If this rigid body is kinematic, sets its future translation after the next timestep integration.\n   *\n   * This should be used instead of `rigidBody.setTranslation` to make the dynamic object\n   * interacting with this kinematic body behave as expected. Internally, Rapier will compute\n   * an artificial velocity for this rigid-body from its current position and its next kinematic\n   * position. This velocity will be used to compute forces on dynamic bodies interacting with\n   * this body.\n   *\n   * @param t - The kinematic translation to set.\n   */\n  setNextKinematicTranslation(t) {\n    // #if DIM3\n    this.rawSet.rbSetNextKinematicTranslation(this.handle, t.x, t.y, t.z);\n    // #endif\n  }\n  // #if DIM3\n  /**\n   * If this rigid body is kinematic, sets its future rotation after the next timestep integration.\n   *\n   * This should be used instead of `rigidBody.setRotation` to make the dynamic object\n   * interacting with this kinematic body behave as expected. Internally, Rapier will compute\n   * an artificial velocity for this rigid-body from its current position and its next kinematic\n   * position. This velocity will be used to compute forces on dynamic bodies interacting with\n   * this body.\n   *\n   * @param rot - The kinematic rotation to set.\n   */\n  setNextKinematicRotation(rot) {\n    this.rawSet.rbSetNextKinematicRotation(this.handle, rot.x, rot.y, rot.z, rot.w);\n  }\n  // #endif\n  /**\n   * The linear velocity of this rigid-body.\n   */\n  linvel() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(this.rawSet.rbLinvel(this.handle));\n  }\n  // #if DIM3\n  /**\n   * The angular velocity of this rigid-body.\n   */\n  angvel() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(this.rawSet.rbAngvel(this.handle));\n  }\n  // #endif\n  /**\n   * The mass of this rigid-body.\n   */\n  mass() {\n    return this.rawSet.rbMass(this.handle);\n  }\n  /**\n   * The inverse mass taking into account translation locking.\n   */\n  effectiveInvMass() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(this.rawSet.rbEffectiveInvMass(this.handle));\n  }\n  /**\n   * The inverse of the mass of a rigid-body.\n   *\n   * If this is zero, the rigid-body is assumed to have infinite mass.\n   */\n  invMass() {\n    return this.rawSet.rbInvMass(this.handle);\n  }\n  /**\n   * The center of mass of a rigid-body expressed in its local-space.\n   */\n  localCom() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(this.rawSet.rbLocalCom(this.handle));\n  }\n  /**\n   * The world-space center of mass of the rigid-body.\n   */\n  worldCom() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(this.rawSet.rbWorldCom(this.handle));\n  }\n  // #if DIM3\n  /**\n   * The inverse of the principal angular inertia of the rigid-body.\n   *\n   * Components set to zero are assumed to be infinite along the corresponding principal axis.\n   */\n  invPrincipalInertiaSqrt() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(this.rawSet.rbInvPrincipalInertiaSqrt(this.handle));\n  }\n  // #endif\n  // #if DIM3\n  /**\n   * The angular inertia along the principal inertia axes of the rigid-body.\n   */\n  principalInertia() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(this.rawSet.rbPrincipalInertia(this.handle));\n  }\n  // #endif\n  // #if DIM3\n  /**\n   * The principal vectors of the local angular inertia tensor of the rigid-body.\n   */\n  principalInertiaLocalFrame() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].fromRaw(this.rawSet.rbPrincipalInertiaLocalFrame(this.handle));\n  }\n  // #endif\n  // #if DIM3\n  /**\n   * The square-root of the world-space inverse angular inertia tensor of the rigid-body,\n   * taking into account rotation locking.\n   */\n  effectiveWorldInvInertiaSqrt() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"SdpMatrix3Ops\"].fromRaw(this.rawSet.rbEffectiveWorldInvInertiaSqrt(this.handle));\n  }\n  // #endif\n  // #if DIM3\n  /**\n   * The effective world-space angular inertia (that takes the potential rotation locking into account) of\n   * this rigid-body.\n   */\n  effectiveAngularInertia() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"SdpMatrix3Ops\"].fromRaw(this.rawSet.rbEffectiveAngularInertia(this.handle));\n  }\n  // #endif\n  /**\n   * Put this rigid body to sleep.\n   *\n   * A sleeping body no longer moves and is no longer simulated by the physics engine unless\n   * it is waken up. It can be woken manually with `this.wakeUp()` or automatically due to\n   * external forces like contacts.\n   */\n  sleep() {\n    this.rawSet.rbSleep(this.handle);\n  }\n  /**\n   * Wakes this rigid-body up.\n   *\n   * A dynamic rigid-body that does not move during several consecutive frames will\n   * be put to sleep by the physics engine, i.e., it will stop being simulated in order\n   * to avoid useless computations.\n   * This methods forces a sleeping rigid-body to wake-up. This is useful, e.g., before modifying\n   * the position of a dynamic body so that it is properly simulated afterwards.\n   */\n  wakeUp() {\n    this.rawSet.rbWakeUp(this.handle);\n  }\n  /**\n   * Is CCD enabled for this rigid-body?\n   */\n  isCcdEnabled() {\n    return this.rawSet.rbIsCcdEnabled(this.handle);\n  }\n  /**\n   * The number of colliders attached to this rigid-body.\n   */\n  numColliders() {\n    return this.rawSet.rbNumColliders(this.handle);\n  }\n  /**\n   * Retrieves the `i-th` collider attached to this rigid-body.\n   *\n   * @param i - The index of the collider to retrieve. Must be a number in `[0, this.numColliders()[`.\n   *         This index is **not** the same as the unique identifier of the collider.\n   */\n  collider(i) {\n    return this.colliderSet.get(this.rawSet.rbCollider(this.handle, i));\n  }\n  /**\n   * Sets whether this rigid-body is enabled or not.\n   *\n   * @param enabled - Set to `false` to disable this rigid-body and all its attached colliders.\n   */\n  setEnabled(enabled) {\n    this.rawSet.rbSetEnabled(this.handle, enabled);\n  }\n  /**\n   * Is this rigid-body enabled?\n   */\n  isEnabled() {\n    return this.rawSet.rbIsEnabled(this.handle);\n  }\n  /**\n   * The status of this rigid-body: static, dynamic, or kinematic.\n   */\n  bodyType() {\n    return this.rawSet.rbBodyType(this.handle);\n  }\n  /**\n   * Set a new status for this rigid-body: static, dynamic, or kinematic.\n   */\n  setBodyType(type, wakeUp) {\n    return this.rawSet.rbSetBodyType(this.handle, type, wakeUp);\n  }\n  /**\n   * Is this rigid-body sleeping?\n   */\n  isSleeping() {\n    return this.rawSet.rbIsSleeping(this.handle);\n  }\n  /**\n   * Is the velocity of this rigid-body not zero?\n   */\n  isMoving() {\n    return this.rawSet.rbIsMoving(this.handle);\n  }\n  /**\n   * Is this rigid-body static?\n   */\n  isFixed() {\n    return this.rawSet.rbIsFixed(this.handle);\n  }\n  /**\n   * Is this rigid-body kinematic?\n   */\n  isKinematic() {\n    return this.rawSet.rbIsKinematic(this.handle);\n  }\n  /**\n   * Is this rigid-body dynamic?\n   */\n  isDynamic() {\n    return this.rawSet.rbIsDynamic(this.handle);\n  }\n  /**\n   * The linear damping coefficient of this rigid-body.\n   */\n  linearDamping() {\n    return this.rawSet.rbLinearDamping(this.handle);\n  }\n  /**\n   * The angular damping coefficient of this rigid-body.\n   */\n  angularDamping() {\n    return this.rawSet.rbAngularDamping(this.handle);\n  }\n  /**\n   * Sets the linear damping factor applied to this rigid-body.\n   *\n   * @param factor - The damping factor to set.\n   */\n  setLinearDamping(factor) {\n    this.rawSet.rbSetLinearDamping(this.handle, factor);\n  }\n  /**\n   * Recompute the mass-properties of this rigid-bodies based on its currently attached colliders.\n   */\n  recomputeMassPropertiesFromColliders() {\n    this.rawSet.rbRecomputeMassPropertiesFromColliders(this.handle, this.colliderSet.raw);\n  }\n  /**\n   * Sets the rigid-body's additional mass.\n   *\n   * The total angular inertia of the rigid-body will be scaled automatically based on this additional mass. If this\n   * scaling effect isn’t desired, use Self::additional_mass_properties instead of this method.\n   *\n   * This is only the \"additional\" mass because the total mass of the rigid-body is equal to the sum of this\n   * additional mass and the mass computed from the colliders (with non-zero densities) attached to this rigid-body.\n   *\n   * That total mass (which includes the attached colliders’ contributions) will be updated at the name physics step,\n   * or can be updated manually with `this.recomputeMassPropertiesFromColliders`.\n   *\n   * This will override any previous additional mass-properties set by `this.setAdditionalMass`,\n   * `this.setAdditionalMassProperties`, `RigidBodyDesc::setAdditionalMass`, or\n   * `RigidBodyDesc.setAdditionalMassfProperties` for this rigid-body.\n   *\n   * @param mass - The additional mass to set.\n   * @param wakeUp - If `true` then the rigid-body will be woken up if it was put to sleep because it did not move for a while.\n   */\n  setAdditionalMass(mass, wakeUp) {\n    this.rawSet.rbSetAdditionalMass(this.handle, mass, wakeUp);\n  }\n  // #if DIM3\n  /**\n   * Sets the rigid-body's additional mass-properties.\n   *\n   * This is only the \"additional\" mass-properties because the total mass-properties of the rigid-body is equal to the\n   * sum of this additional mass-properties and the mass computed from the colliders (with non-zero densities) attached\n   * to this rigid-body.\n   *\n   * That total mass-properties (which include the attached colliders’ contributions) will be updated at the name\n   * physics step, or can be updated manually with `this.recomputeMassPropertiesFromColliders`.\n   *\n   * This will override any previous mass-properties set by `this.setAdditionalMass`,\n   * `this.setAdditionalMassProperties`, `RigidBodyDesc.setAdditionalMass`, or `RigidBodyDesc.setAdditionalMassProperties`\n   * for this rigid-body.\n   *\n   * If `wake_up` is true then the rigid-body will be woken up if it was put to sleep because it did not move for a while.\n   */\n  setAdditionalMassProperties(mass, centerOfMass, principalAngularInertia, angularInertiaLocalFrame, wakeUp) {\n    let rawCom = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(centerOfMass);\n    let rawPrincipalInertia = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(principalAngularInertia);\n    let rawInertiaFrame = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(angularInertiaLocalFrame);\n    this.rawSet.rbSetAdditionalMassProperties(this.handle, mass, rawCom, rawPrincipalInertia, rawInertiaFrame, wakeUp);\n    rawCom.free();\n    rawPrincipalInertia.free();\n    rawInertiaFrame.free();\n  }\n  // #endif\n  /**\n   * Sets the linear damping factor applied to this rigid-body.\n   *\n   * @param factor - The damping factor to set.\n   */\n  setAngularDamping(factor) {\n    this.rawSet.rbSetAngularDamping(this.handle, factor);\n  }\n  /**\n   * Resets to zero the user forces (but not torques) applied to this rigid-body.\n   *\n   * @param wakeUp - should the rigid-body be automatically woken-up?\n   */\n  resetForces(wakeUp) {\n    this.rawSet.rbResetForces(this.handle, wakeUp);\n  }\n  /**\n   * Resets to zero the user torques applied to this rigid-body.\n   *\n   * @param wakeUp - should the rigid-body be automatically woken-up?\n   */\n  resetTorques(wakeUp) {\n    this.rawSet.rbResetTorques(this.handle, wakeUp);\n  }\n  /**\n   * Adds a force at the center-of-mass of this rigid-body.\n   *\n   * @param force - the world-space force to add to the rigid-body.\n   * @param wakeUp - should the rigid-body be automatically woken-up?\n   */\n  addForce(force, wakeUp) {\n    const rawForce = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(force);\n    this.rawSet.rbAddForce(this.handle, rawForce, wakeUp);\n    rawForce.free();\n  }\n  /**\n   * Applies an impulse at the center-of-mass of this rigid-body.\n   *\n   * @param impulse - the world-space impulse to apply on the rigid-body.\n   * @param wakeUp - should the rigid-body be automatically woken-up?\n   */\n  applyImpulse(impulse, wakeUp) {\n    const rawImpulse = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(impulse);\n    this.rawSet.rbApplyImpulse(this.handle, rawImpulse, wakeUp);\n    rawImpulse.free();\n  }\n  // #if DIM3\n  /**\n   * Adds a torque at the center-of-mass of this rigid-body.\n   *\n   * @param torque - the world-space torque to add to the rigid-body.\n   * @param wakeUp - should the rigid-body be automatically woken-up?\n   */\n  addTorque(torque, wakeUp) {\n    const rawTorque = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(torque);\n    this.rawSet.rbAddTorque(this.handle, rawTorque, wakeUp);\n    rawTorque.free();\n  }\n  // #endif\n  // #if DIM3\n  /**\n   * Applies an impulsive torque at the center-of-mass of this rigid-body.\n   *\n   * @param torqueImpulse - the world-space torque impulse to apply on the rigid-body.\n   * @param wakeUp - should the rigid-body be automatically woken-up?\n   */\n  applyTorqueImpulse(torqueImpulse, wakeUp) {\n    const rawTorqueImpulse = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(torqueImpulse);\n    this.rawSet.rbApplyTorqueImpulse(this.handle, rawTorqueImpulse, wakeUp);\n    rawTorqueImpulse.free();\n  }\n  // #endif\n  /**\n   * Adds a force at the given world-space point of this rigid-body.\n   *\n   * @param force - the world-space force to add to the rigid-body.\n   * @param point - the world-space point where the impulse is to be applied on the rigid-body.\n   * @param wakeUp - should the rigid-body be automatically woken-up?\n   */\n  addForceAtPoint(force, point, wakeUp) {\n    const rawForce = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(force);\n    const rawPoint = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(point);\n    this.rawSet.rbAddForceAtPoint(this.handle, rawForce, rawPoint, wakeUp);\n    rawForce.free();\n    rawPoint.free();\n  }\n  /**\n   * Applies an impulse at the given world-space point of this rigid-body.\n   *\n   * @param impulse - the world-space impulse to apply on the rigid-body.\n   * @param point - the world-space point where the impulse is to be applied on the rigid-body.\n   * @param wakeUp - should the rigid-body be automatically woken-up?\n   */\n  applyImpulseAtPoint(impulse, point, wakeUp) {\n    const rawImpulse = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(impulse);\n    const rawPoint = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(point);\n    this.rawSet.rbApplyImpulseAtPoint(this.handle, rawImpulse, rawPoint, wakeUp);\n    rawImpulse.free();\n    rawPoint.free();\n  }\n}\nclass RigidBodyDesc {\n  constructor(status) {\n    this.enabled = true;\n    this.status = status;\n    this.translation = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].zeros();\n    this.rotation = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].identity();\n    this.gravityScale = 1.0;\n    this.linvel = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].zeros();\n    this.mass = 0.0;\n    this.massOnly = false;\n    this.centerOfMass = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].zeros();\n    this.translationsEnabledX = true;\n    this.translationsEnabledY = true;\n    // #if DIM3\n    this.angvel = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].zeros();\n    this.principalAngularInertia = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].zeros();\n    this.angularInertiaLocalFrame = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].identity();\n    this.translationsEnabledZ = true;\n    this.rotationsEnabledX = true;\n    this.rotationsEnabledY = true;\n    this.rotationsEnabledZ = true;\n    // #endif\n    this.linearDamping = 0.0;\n    this.angularDamping = 0.0;\n    this.canSleep = true;\n    this.sleeping = false;\n    this.ccdEnabled = false;\n    this.softCcdPrediction = 0.0;\n    this.dominanceGroup = 0;\n    this.additionalSolverIterations = 0;\n  }\n  /**\n   * A rigid-body descriptor used to build a dynamic rigid-body.\n   */\n  static dynamic() {\n    return new RigidBodyDesc(RigidBodyType.Dynamic);\n  }\n  /**\n   * A rigid-body descriptor used to build a position-based kinematic rigid-body.\n   */\n  static kinematicPositionBased() {\n    return new RigidBodyDesc(RigidBodyType.KinematicPositionBased);\n  }\n  /**\n   * A rigid-body descriptor used to build a velocity-based kinematic rigid-body.\n   */\n  static kinematicVelocityBased() {\n    return new RigidBodyDesc(RigidBodyType.KinematicVelocityBased);\n  }\n  /**\n   * A rigid-body descriptor used to build a fixed rigid-body.\n   */\n  static fixed() {\n    return new RigidBodyDesc(RigidBodyType.Fixed);\n  }\n  /**\n   * A rigid-body descriptor used to build a dynamic rigid-body.\n   *\n   * @deprecated The method has been renamed to `.dynamic()`.\n   */\n  static newDynamic() {\n    return new RigidBodyDesc(RigidBodyType.Dynamic);\n  }\n  /**\n   * A rigid-body descriptor used to build a position-based kinematic rigid-body.\n   *\n   * @deprecated The method has been renamed to `.kinematicPositionBased()`.\n   */\n  static newKinematicPositionBased() {\n    return new RigidBodyDesc(RigidBodyType.KinematicPositionBased);\n  }\n  /**\n   * A rigid-body descriptor used to build a velocity-based kinematic rigid-body.\n   *\n   * @deprecated The method has been renamed to `.kinematicVelocityBased()`.\n   */\n  static newKinematicVelocityBased() {\n    return new RigidBodyDesc(RigidBodyType.KinematicVelocityBased);\n  }\n  /**\n   * A rigid-body descriptor used to build a fixed rigid-body.\n   *\n   * @deprecated The method has been renamed to `.fixed()`.\n   */\n  static newStatic() {\n    return new RigidBodyDesc(RigidBodyType.Fixed);\n  }\n  setDominanceGroup(group) {\n    this.dominanceGroup = group;\n    return this;\n  }\n  /**\n   * Sets the number of additional solver iterations that will be run for this\n   * rigid-body and everything that interacts with it directly or indirectly\n   * through contacts or joints.\n   *\n   * Compared to increasing the global `World.numSolverIteration`, setting this\n   * value lets you increase accuracy on only a subset of the scene, resulting in reduced\n   * performance loss.\n   *\n   * @param iters - The new number of additional solver iterations (default: 0).\n   */\n  setAdditionalSolverIterations(iters) {\n    this.additionalSolverIterations = iters;\n    return this;\n  }\n  /**\n   * Sets whether the created rigid-body will be enabled or disabled.\n   * @param enabled − If set to `false` the rigid-body will be disabled at creation.\n   */\n  setEnabled(enabled) {\n    this.enabled = enabled;\n    return this;\n  }\n  // #if DIM3\n  /**\n   * Sets the initial translation of the rigid-body to create.\n   *\n   * @param tra - The translation to set.\n   */\n  setTranslation(x, y, z) {\n    if (typeof x != \"number\" || typeof y != \"number\" || typeof z != \"number\") throw TypeError(\"The translation components must be numbers.\");\n    this.translation = {\n      x: x,\n      y: y,\n      z: z\n    };\n    return this;\n  }\n  // #endif\n  /**\n   * Sets the initial rotation of the rigid-body to create.\n   *\n   * @param rot - The rotation to set.\n   */\n  setRotation(rot) {\n    // #if DIM3\n    _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].copy(this.rotation, rot);\n    // #endif\n    return this;\n  }\n  /**\n   * Sets the scale factor applied to the gravity affecting\n   * the rigid-body being built.\n   *\n   * @param scale - The scale factor. Set this to `0.0` if the rigid-body\n   *   needs to ignore gravity.\n   */\n  setGravityScale(scale) {\n    this.gravityScale = scale;\n    return this;\n  }\n  /**\n   * Sets the initial mass of the rigid-body being built, before adding colliders' contributions.\n   *\n   * @param mass − The initial mass of the rigid-body to create.\n   */\n  setAdditionalMass(mass) {\n    this.mass = mass;\n    this.massOnly = true;\n    return this;\n  }\n  // #if DIM3\n  /**\n   * Sets the initial linear velocity of the rigid-body to create.\n   *\n   * @param x - The linear velocity to set along the `x` axis.\n   * @param y - The linear velocity to set along the `y` axis.\n   * @param z - The linear velocity to set along the `z` axis.\n   */\n  setLinvel(x, y, z) {\n    if (typeof x != \"number\" || typeof y != \"number\" || typeof z != \"number\") throw TypeError(\"The linvel components must be numbers.\");\n    this.linvel = {\n      x: x,\n      y: y,\n      z: z\n    };\n    return this;\n  }\n  /**\n   * Sets the initial angular velocity of the rigid-body to create.\n   *\n   * @param vel - The angular velocity to set.\n   */\n  setAngvel(vel) {\n    _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].copy(this.angvel, vel);\n    return this;\n  }\n  /**\n   * Sets the mass properties of the rigid-body being built.\n   *\n   * Note that the final mass properties of the rigid-bodies depends\n   * on the initial mass-properties of the rigid-body (set by this method)\n   * to which is added the contributions of all the colliders with non-zero density\n   * attached to this rigid-body.\n   *\n   * Therefore, if you want your provided mass properties to be the final\n   * mass properties of your rigid-body, don't attach colliders to it, or\n   * only attach colliders with densities equal to zero.\n   *\n   * @param mass − The initial mass of the rigid-body to create.\n   * @param centerOfMass − The initial center-of-mass of the rigid-body to create.\n   * @param principalAngularInertia − The initial principal angular inertia of the rigid-body to create.\n   *                                  These are the eigenvalues of the angular inertia matrix.\n   * @param angularInertiaLocalFrame − The initial local angular inertia frame of the rigid-body to create.\n   *                                   These are the eigenvectors of the angular inertia matrix.\n   */\n  setAdditionalMassProperties(mass, centerOfMass, principalAngularInertia, angularInertiaLocalFrame) {\n    this.mass = mass;\n    _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].copy(this.centerOfMass, centerOfMass);\n    _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].copy(this.principalAngularInertia, principalAngularInertia);\n    _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].copy(this.angularInertiaLocalFrame, angularInertiaLocalFrame);\n    this.massOnly = false;\n    return this;\n  }\n  /**\n   * Allow translation of this rigid-body only along specific axes.\n   * @param translationsEnabledX - Are translations along the X axis enabled?\n   * @param translationsEnabledY - Are translations along the y axis enabled?\n   * @param translationsEnabledZ - Are translations along the Z axis enabled?\n   */\n  enabledTranslations(translationsEnabledX, translationsEnabledY, translationsEnabledZ) {\n    this.translationsEnabledX = translationsEnabledX;\n    this.translationsEnabledY = translationsEnabledY;\n    this.translationsEnabledZ = translationsEnabledZ;\n    return this;\n  }\n  /**\n   * Allow translation of this rigid-body only along specific axes.\n   * @param translationsEnabledX - Are translations along the X axis enabled?\n   * @param translationsEnabledY - Are translations along the y axis enabled?\n   * @param translationsEnabledZ - Are translations along the Z axis enabled?\n   * @deprecated use `this.enabledTranslations` with the same arguments instead.\n   */\n  restrictTranslations(translationsEnabledX, translationsEnabledY, translationsEnabledZ) {\n    return this.enabledTranslations(translationsEnabledX, translationsEnabledY, translationsEnabledZ);\n  }\n  /**\n   * Locks all translations that would have resulted from forces on\n   * the created rigid-body.\n   */\n  lockTranslations() {\n    return this.enabledTranslations(false, false, false);\n  }\n  /**\n   * Allow rotation of this rigid-body only along specific axes.\n   * @param rotationsEnabledX - Are rotations along the X axis enabled?\n   * @param rotationsEnabledY - Are rotations along the y axis enabled?\n   * @param rotationsEnabledZ - Are rotations along the Z axis enabled?\n   */\n  enabledRotations(rotationsEnabledX, rotationsEnabledY, rotationsEnabledZ) {\n    this.rotationsEnabledX = rotationsEnabledX;\n    this.rotationsEnabledY = rotationsEnabledY;\n    this.rotationsEnabledZ = rotationsEnabledZ;\n    return this;\n  }\n  /**\n   * Allow rotation of this rigid-body only along specific axes.\n   * @param rotationsEnabledX - Are rotations along the X axis enabled?\n   * @param rotationsEnabledY - Are rotations along the y axis enabled?\n   * @param rotationsEnabledZ - Are rotations along the Z axis enabled?\n   * @deprecated use `this.enabledRotations` with the same arguments instead.\n   */\n  restrictRotations(rotationsEnabledX, rotationsEnabledY, rotationsEnabledZ) {\n    return this.enabledRotations(rotationsEnabledX, rotationsEnabledY, rotationsEnabledZ);\n  }\n  /**\n   * Locks all rotations that would have resulted from forces on\n   * the created rigid-body.\n   */\n  lockRotations() {\n    return this.restrictRotations(false, false, false);\n  }\n  // #endif\n  /**\n   * Sets the linear damping of the rigid-body to create.\n   *\n   * This will progressively slowdown the translational movement of the rigid-body.\n   *\n   * @param damping - The angular damping coefficient. Should be >= 0. The higher this\n   *                  value is, the stronger the translational slowdown will be.\n   */\n  setLinearDamping(damping) {\n    this.linearDamping = damping;\n    return this;\n  }\n  /**\n   * Sets the angular damping of the rigid-body to create.\n   *\n   * This will progressively slowdown the rotational movement of the rigid-body.\n   *\n   * @param damping - The angular damping coefficient. Should be >= 0. The higher this\n   *                  value is, the stronger the rotational slowdown will be.\n   */\n  setAngularDamping(damping) {\n    this.angularDamping = damping;\n    return this;\n  }\n  /**\n   * Sets whether or not the rigid-body to create can sleep.\n   *\n   * @param can - true if the rigid-body can sleep, false if it can't.\n   */\n  setCanSleep(can) {\n    this.canSleep = can;\n    return this;\n  }\n  /**\n   * Sets whether or not the rigid-body is to be created asleep.\n   *\n   * @param can - true if the rigid-body should be in sleep, default false.\n   */\n  setSleeping(sleeping) {\n    this.sleeping = sleeping;\n    return this;\n  }\n  /**\n   * Sets whether Continuous Collision Detection (CCD) is enabled for this rigid-body.\n   *\n   * @param enabled - true if the rigid-body has CCD enabled.\n   */\n  setCcdEnabled(enabled) {\n    this.ccdEnabled = enabled;\n    return this;\n  }\n  /**\n   * Sets the maximum prediction distance Soft Continuous Collision-Detection.\n   *\n   * When set to 0, soft-CCD is disabled. Soft-CCD helps prevent tunneling especially of\n   * slow-but-thin to moderately fast objects. The soft CCD prediction distance indicates how\n   * far in the object’s path the CCD algorithm is allowed to inspect. Large values can impact\n   * performance badly by increasing the work needed from the broad-phase.\n   *\n   * It is a generally cheaper variant of regular CCD (that can be enabled with\n   * `RigidBodyDesc::setCcdEnabled` since it relies on predictive constraints instead of\n   * shape-cast and substeps.\n   */\n  setSoftCcdPrediction(distance) {\n    this.softCcdPrediction = distance;\n    return this;\n  }\n  /**\n   * Sets the user-defined object of this rigid-body.\n   *\n   * @param userData - The user-defined object to set.\n   */\n  setUserData(data) {\n    this.userData = data;\n    return this;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/dynamics/rigid_body.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/dynamics/rigid_body_set.js":
/*!***********************************************************!*\
  !*** ./lib/@dimforge/rapier3d/dynamics/rigid_body_set.js ***!
  \***********************************************************/
/*! exports provided: RigidBodySet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RigidBodySet\", function() { return RigidBodySet; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n/* harmony import */ var _coarena__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../coarena */ \"./lib/@dimforge/rapier3d/coarena.js\");\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n/* harmony import */ var _rigid_body__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rigid_body */ \"./lib/@dimforge/rapier3d/dynamics/rigid_body.js\");\n\n\n\n\n/**\n * A set of rigid bodies that can be handled by a physics pipeline.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `rigidBodySet.free()`\n * once you are done using it (and all the rigid-bodies it created).\n */\nclass RigidBodySet {\n  constructor(raw) {\n    this.raw = raw || new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawRigidBodySet\"]();\n    this.map = new _coarena__WEBPACK_IMPORTED_MODULE_1__[\"Coarena\"]();\n    // deserialize\n    if (raw) {\n      raw.forEachRigidBodyHandle(handle => {\n        this.map.set(handle, new _rigid_body__WEBPACK_IMPORTED_MODULE_3__[\"RigidBody\"](raw, null, handle));\n      });\n    }\n  }\n  /**\n   * Release the WASM memory occupied by this rigid-body set.\n   */\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n    if (!!this.map) {\n      this.map.clear();\n    }\n    this.map = undefined;\n  }\n  /**\n   * Internal method, do not call this explicitly.\n   */\n  finalizeDeserialization(colliderSet) {\n    this.map.forEach(rb => rb.finalizeDeserialization(colliderSet));\n  }\n  /**\n   * Creates a new rigid-body and return its integer handle.\n   *\n   * @param desc - The description of the rigid-body to create.\n   */\n  createRigidBody(colliderSet, desc) {\n    let rawTra = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(desc.translation);\n    let rawRot = _math__WEBPACK_IMPORTED_MODULE_2__[\"RotationOps\"].intoRaw(desc.rotation);\n    let rawLv = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(desc.linvel);\n    let rawCom = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(desc.centerOfMass);\n    // #if DIM3\n    let rawAv = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(desc.angvel);\n    let rawPrincipalInertia = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(desc.principalAngularInertia);\n    let rawInertiaFrame = _math__WEBPACK_IMPORTED_MODULE_2__[\"RotationOps\"].intoRaw(desc.angularInertiaLocalFrame);\n    // #endif\n    let handle = this.raw.createRigidBody(desc.enabled, rawTra, rawRot, desc.gravityScale, desc.mass, desc.massOnly, rawCom, rawLv,\n    // #if DIM3\n    rawAv, rawPrincipalInertia, rawInertiaFrame, desc.translationsEnabledX, desc.translationsEnabledY, desc.translationsEnabledZ, desc.rotationsEnabledX, desc.rotationsEnabledY, desc.rotationsEnabledZ,\n    // #endif\n    desc.linearDamping, desc.angularDamping, desc.status, desc.canSleep, desc.sleeping, desc.softCcdPrediction, desc.ccdEnabled, desc.dominanceGroup, desc.additionalSolverIterations);\n    rawTra.free();\n    rawRot.free();\n    rawLv.free();\n    rawCom.free();\n    // #if DIM3\n    rawAv.free();\n    rawPrincipalInertia.free();\n    rawInertiaFrame.free();\n    // #endif\n    const body = new _rigid_body__WEBPACK_IMPORTED_MODULE_3__[\"RigidBody\"](this.raw, colliderSet, handle);\n    body.userData = desc.userData;\n    this.map.set(handle, body);\n    return body;\n  }\n  /**\n   * Removes a rigid-body from this set.\n   *\n   * This will also remove all the colliders and joints attached to the rigid-body.\n   *\n   * @param handle - The integer handle of the rigid-body to remove.\n   * @param colliders - The set of colliders that may contain colliders attached to the removed rigid-body.\n   * @param impulseJoints - The set of impulse joints that may contain joints attached to the removed rigid-body.\n   * @param multibodyJoints - The set of multibody joints that may contain joints attached to the removed rigid-body.\n   */\n  remove(handle, islands, colliders, impulseJoints, multibodyJoints) {\n    // Unmap the entities that will be removed automatically because of the rigid-body removals.\n    for (let i = 0; i < this.raw.rbNumColliders(handle); i += 1) {\n      colliders.unmap(this.raw.rbCollider(handle, i));\n    }\n    impulseJoints.forEachJointHandleAttachedToRigidBody(handle, handle => impulseJoints.unmap(handle));\n    multibodyJoints.forEachJointHandleAttachedToRigidBody(handle, handle => multibodyJoints.unmap(handle));\n    // Remove the rigid-body.\n    this.raw.remove(handle, islands.raw, colliders.raw, impulseJoints.raw, multibodyJoints.raw);\n    this.map.delete(handle);\n  }\n  /**\n   * The number of rigid-bodies on this set.\n   */\n  len() {\n    return this.map.len();\n  }\n  /**\n   * Does this set contain a rigid-body with the given handle?\n   *\n   * @param handle - The rigid-body handle to check.\n   */\n  contains(handle) {\n    return this.get(handle) != null;\n  }\n  /**\n   * Gets the rigid-body with the given handle.\n   *\n   * @param handle - The handle of the rigid-body to retrieve.\n   */\n  get(handle) {\n    return this.map.get(handle);\n  }\n  /**\n   * Applies the given closure to each rigid-body contained by this set.\n   *\n   * @param f - The closure to apply.\n   */\n  forEach(f) {\n    this.map.forEach(f);\n  }\n  /**\n   * Applies the given closure to each active rigid-bodies contained by this set.\n   *\n   * A rigid-body is active if it is not sleeping, i.e., if it moved recently.\n   *\n   * @param f - The closure to apply.\n   */\n  forEachActiveRigidBody(islands, f) {\n    islands.forEachActiveRigidBodyHandle(handle => {\n      f(this.get(handle));\n    });\n  }\n  /**\n   * Gets all rigid-bodies in the list.\n   *\n   * @returns rigid-bodies list.\n   */\n  getAll() {\n    return this.map.getAll();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2R5bmFtaWNzL3JpZ2lkX2JvZHlfc2V0LnRzP2U3YTAiXSwibmFtZXMiOlsiUmlnaWRCb2R5U2V0IiwiY29uc3RydWN0b3IiLCJyYXciLCJSYXdSaWdpZEJvZHlTZXQiLCJtYXAiLCJDb2FyZW5hIiwiZm9yRWFjaFJpZ2lkQm9keUhhbmRsZSIsImhhbmRsZSIsInNldCIsIlJpZ2lkQm9keSIsImZyZWUiLCJ1bmRlZmluZWQiLCJjbGVhciIsImZpbmFsaXplRGVzZXJpYWxpemF0aW9uIiwiY29sbGlkZXJTZXQiLCJmb3JFYWNoIiwicmIiLCJjcmVhdGVSaWdpZEJvZHkiLCJkZXNjIiwicmF3VHJhIiwiVmVjdG9yT3BzIiwiaW50b1JhdyIsInRyYW5zbGF0aW9uIiwicmF3Um90IiwiUm90YXRpb25PcHMiLCJyb3RhdGlvbiIsInJhd0x2IiwibGludmVsIiwicmF3Q29tIiwiY2VudGVyT2ZNYXNzIiwicmF3QXYiLCJhbmd2ZWwiLCJyYXdQcmluY2lwYWxJbmVydGlhIiwicHJpbmNpcGFsQW5ndWxhckluZXJ0aWEiLCJyYXdJbmVydGlhRnJhbWUiLCJhbmd1bGFySW5lcnRpYUxvY2FsRnJhbWUiLCJlbmFibGVkIiwiZ3Jhdml0eVNjYWxlIiwibWFzcyIsIm1hc3NPbmx5IiwidHJhbnNsYXRpb25zRW5hYmxlZFgiLCJ0cmFuc2xhdGlvbnNFbmFibGVkWSIsInRyYW5zbGF0aW9uc0VuYWJsZWRaIiwicm90YXRpb25zRW5hYmxlZFgiLCJyb3RhdGlvbnNFbmFibGVkWSIsInJvdGF0aW9uc0VuYWJsZWRaIiwibGluZWFyRGFtcGluZyIsImFuZ3VsYXJEYW1waW5nIiwic3RhdHVzIiwiY2FuU2xlZXAiLCJzbGVlcGluZyIsInNvZnRDY2RQcmVkaWN0aW9uIiwiY2NkRW5hYmxlZCIsImRvbWluYW5jZUdyb3VwIiwiYWRkaXRpb25hbFNvbHZlckl0ZXJhdGlvbnMiLCJib2R5IiwidXNlckRhdGEiLCJyZW1vdmUiLCJpc2xhbmRzIiwiY29sbGlkZXJzIiwiaW1wdWxzZUpvaW50cyIsIm11bHRpYm9keUpvaW50cyIsImkiLCJyYk51bUNvbGxpZGVycyIsInVubWFwIiwicmJDb2xsaWRlciIsImZvckVhY2hKb2ludEhhbmRsZUF0dGFjaGVkVG9SaWdpZEJvZHkiLCJkZWxldGUiLCJsZW4iLCJjb250YWlucyIsImdldCIsImYiLCJmb3JFYWNoQWN0aXZlUmlnaWRCb2R5IiwiZm9yRWFjaEFjdGl2ZVJpZ2lkQm9keUhhbmRsZSIsImdldEFsbCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXdEO0FBQ3RCO0FBQ1k7QUFNekI7QUFNckI7Ozs7OztBQU1NLE1BQU9BLFlBQVk7RUFtQnJCQyxZQUFZQyxHQUFxQjtJQUM3QixJQUFJLENBQUNBLEdBQUcsR0FBR0EsR0FBRyxJQUFJLElBQUlDLG9EQUFlLEVBQUU7SUFDdkMsSUFBSSxDQUFDQyxHQUFHLEdBQUcsSUFBSUMsZ0RBQU8sRUFBYTtJQUNuQztJQUNBLElBQUlILEdBQUcsRUFBRTtNQUNMQSxHQUFHLENBQUNJLHNCQUFzQixDQUFFQyxNQUF1QixJQUFJO1FBQ25ELElBQUksQ0FBQ0gsR0FBRyxDQUFDSSxHQUFHLENBQUNELE1BQU0sRUFBRSxJQUFJRSxxREFBUyxDQUFDUCxHQUFHLEVBQUUsSUFBSSxFQUFFSyxNQUFNLENBQUMsQ0FBQztNQUMxRCxDQUFDLENBQUM7O0VBRVY7RUF4QkE7OztFQUdPRyxJQUFJQSxDQUFBO0lBQ1AsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDUixHQUFHLEVBQUU7TUFDWixJQUFJLENBQUNBLEdBQUcsQ0FBQ1EsSUFBSSxFQUFFOztJQUVuQixJQUFJLENBQUNSLEdBQUcsR0FBR1MsU0FBUztJQUVwQixJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUNQLEdBQUcsRUFBRTtNQUNaLElBQUksQ0FBQ0EsR0FBRyxDQUFDUSxLQUFLLEVBQUU7O0lBRXBCLElBQUksQ0FBQ1IsR0FBRyxHQUFHTyxTQUFTO0VBQ3hCO0VBYUE7OztFQUdPRSx1QkFBdUJBLENBQUNDLFdBQXdCO0lBQ25ELElBQUksQ0FBQ1YsR0FBRyxDQUFDVyxPQUFPLENBQUVDLEVBQUUsSUFBS0EsRUFBRSxDQUFDSCx1QkFBdUIsQ0FBQ0MsV0FBVyxDQUFDLENBQUM7RUFDckU7RUFFQTs7Ozs7RUFLT0csZUFBZUEsQ0FDbEJILFdBQXdCLEVBQ3hCSSxJQUFtQjtJQUVuQixJQUFJQyxNQUFNLEdBQUdDLCtDQUFTLENBQUNDLE9BQU8sQ0FBQ0gsSUFBSSxDQUFDSSxXQUFXLENBQUM7SUFDaEQsSUFBSUMsTUFBTSxHQUFHQyxpREFBVyxDQUFDSCxPQUFPLENBQUNILElBQUksQ0FBQ08sUUFBUSxDQUFDO0lBQy9DLElBQUlDLEtBQUssR0FBR04sK0NBQVMsQ0FBQ0MsT0FBTyxDQUFDSCxJQUFJLENBQUNTLE1BQU0sQ0FBQztJQUMxQyxJQUFJQyxNQUFNLEdBQUdSLCtDQUFTLENBQUNDLE9BQU8sQ0FBQ0gsSUFBSSxDQUFDVyxZQUFZLENBQUM7SUFFakQ7SUFDQSxJQUFJQyxLQUFLLEdBQUdWLCtDQUFTLENBQUNDLE9BQU8sQ0FBQ0gsSUFBSSxDQUFDYSxNQUFNLENBQUM7SUFDMUMsSUFBSUMsbUJBQW1CLEdBQUdaLCtDQUFTLENBQUNDLE9BQU8sQ0FDdkNILElBQUksQ0FBQ2UsdUJBQXVCLENBQy9CO0lBQ0QsSUFBSUMsZUFBZSxHQUFHVixpREFBVyxDQUFDSCxPQUFPLENBQ3JDSCxJQUFJLENBQUNpQix3QkFBd0IsQ0FDaEM7SUFDRDtJQUVBLElBQUk1QixNQUFNLEdBQUcsSUFBSSxDQUFDTCxHQUFHLENBQUNlLGVBQWUsQ0FDakNDLElBQUksQ0FBQ2tCLE9BQU8sRUFDWmpCLE1BQU0sRUFDTkksTUFBTSxFQUNOTCxJQUFJLENBQUNtQixZQUFZLEVBQ2pCbkIsSUFBSSxDQUFDb0IsSUFBSSxFQUNUcEIsSUFBSSxDQUFDcUIsUUFBUSxFQUNiWCxNQUFNLEVBQ05GLEtBQUs7SUFDTDtJQUNBSSxLQUFLLEVBQ0xFLG1CQUFtQixFQUNuQkUsZUFBZSxFQUNmaEIsSUFBSSxDQUFDc0Isb0JBQW9CLEVBQ3pCdEIsSUFBSSxDQUFDdUIsb0JBQW9CLEVBQ3pCdkIsSUFBSSxDQUFDd0Isb0JBQW9CLEVBQ3pCeEIsSUFBSSxDQUFDeUIsaUJBQWlCLEVBQ3RCekIsSUFBSSxDQUFDMEIsaUJBQWlCLEVBQ3RCMUIsSUFBSSxDQUFDMkIsaUJBQWlCO0lBQ3RCO0lBQ0EzQixJQUFJLENBQUM0QixhQUFhLEVBQ2xCNUIsSUFBSSxDQUFDNkIsY0FBYyxFQUNuQjdCLElBQUksQ0FBQzhCLE1BQW9DLEVBQ3pDOUIsSUFBSSxDQUFDK0IsUUFBUSxFQUNiL0IsSUFBSSxDQUFDZ0MsUUFBUSxFQUNiaEMsSUFBSSxDQUFDaUMsaUJBQWlCLEVBQ3RCakMsSUFBSSxDQUFDa0MsVUFBVSxFQUNmbEMsSUFBSSxDQUFDbUMsY0FBYyxFQUNuQm5DLElBQUksQ0FBQ29DLDBCQUEwQixDQUNsQztJQUVEbkMsTUFBTSxDQUFDVCxJQUFJLEVBQUU7SUFDYmEsTUFBTSxDQUFDYixJQUFJLEVBQUU7SUFDYmdCLEtBQUssQ0FBQ2hCLElBQUksRUFBRTtJQUNaa0IsTUFBTSxDQUFDbEIsSUFBSSxFQUFFO0lBRWI7SUFDQW9CLEtBQUssQ0FBQ3BCLElBQUksRUFBRTtJQUNac0IsbUJBQW1CLENBQUN0QixJQUFJLEVBQUU7SUFDMUJ3QixlQUFlLENBQUN4QixJQUFJLEVBQUU7SUFDdEI7SUFFQSxNQUFNNkMsSUFBSSxHQUFHLElBQUk5QyxxREFBUyxDQUFDLElBQUksQ0FBQ1AsR0FBRyxFQUFFWSxXQUFXLEVBQUVQLE1BQU0sQ0FBQztJQUN6RGdELElBQUksQ0FBQ0MsUUFBUSxHQUFHdEMsSUFBSSxDQUFDc0MsUUFBUTtJQUU3QixJQUFJLENBQUNwRCxHQUFHLENBQUNJLEdBQUcsQ0FBQ0QsTUFBTSxFQUFFZ0QsSUFBSSxDQUFDO0lBRTFCLE9BQU9BLElBQUk7RUFDZjtFQUVBOzs7Ozs7Ozs7O0VBVU9FLE1BQU1BLENBQ1RsRCxNQUF1QixFQUN2Qm1ELE9BQXNCLEVBQ3RCQyxTQUFzQixFQUN0QkMsYUFBOEIsRUFDOUJDLGVBQWtDO0lBRWxDO0lBQ0EsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUcsSUFBSSxDQUFDNUQsR0FBRyxDQUFDNkQsY0FBYyxDQUFDeEQsTUFBTSxDQUFDLEVBQUV1RCxDQUFDLElBQUksQ0FBQyxFQUFFO01BQ3pESCxTQUFTLENBQUNLLEtBQUssQ0FBQyxJQUFJLENBQUM5RCxHQUFHLENBQUMrRCxVQUFVLENBQUMxRCxNQUFNLEVBQUV1RCxDQUFDLENBQUMsQ0FBQzs7SUFHbkRGLGFBQWEsQ0FBQ00scUNBQXFDLENBQUMzRCxNQUFNLEVBQUdBLE1BQU0sSUFDL0RxRCxhQUFhLENBQUNJLEtBQUssQ0FBQ3pELE1BQU0sQ0FBQyxDQUM5QjtJQUNEc0QsZUFBZSxDQUFDSyxxQ0FBcUMsQ0FDakQzRCxNQUFNLEVBQ0xBLE1BQU0sSUFBS3NELGVBQWUsQ0FBQ0csS0FBSyxDQUFDekQsTUFBTSxDQUFDLENBQzVDO0lBRUQ7SUFDQSxJQUFJLENBQUNMLEdBQUcsQ0FBQ3VELE1BQU0sQ0FDWGxELE1BQU0sRUFDTm1ELE9BQU8sQ0FBQ3hELEdBQUcsRUFDWHlELFNBQVMsQ0FBQ3pELEdBQUcsRUFDYjBELGFBQWEsQ0FBQzFELEdBQUcsRUFDakIyRCxlQUFlLENBQUMzRCxHQUFHLENBQ3RCO0lBQ0QsSUFBSSxDQUFDRSxHQUFHLENBQUMrRCxNQUFNLENBQUM1RCxNQUFNLENBQUM7RUFDM0I7RUFFQTs7O0VBR082RCxHQUFHQSxDQUFBO0lBQ04sT0FBTyxJQUFJLENBQUNoRSxHQUFHLENBQUNnRSxHQUFHLEVBQUU7RUFDekI7RUFFQTs7Ozs7RUFLT0MsUUFBUUEsQ0FBQzlELE1BQXVCO0lBQ25DLE9BQU8sSUFBSSxDQUFDK0QsR0FBRyxDQUFDL0QsTUFBTSxDQUFDLElBQUksSUFBSTtFQUNuQztFQUVBOzs7OztFQUtPK0QsR0FBR0EsQ0FBQy9ELE1BQXVCO0lBQzlCLE9BQU8sSUFBSSxDQUFDSCxHQUFHLENBQUNrRSxHQUFHLENBQUMvRCxNQUFNLENBQUM7RUFDL0I7RUFFQTs7Ozs7RUFLT1EsT0FBT0EsQ0FBQ3dELENBQTRCO0lBQ3ZDLElBQUksQ0FBQ25FLEdBQUcsQ0FBQ1csT0FBTyxDQUFDd0QsQ0FBQyxDQUFDO0VBQ3ZCO0VBRUE7Ozs7Ozs7RUFPT0Msc0JBQXNCQSxDQUN6QmQsT0FBc0IsRUFDdEJhLENBQTRCO0lBRTVCYixPQUFPLENBQUNlLDRCQUE0QixDQUFFbEUsTUFBTSxJQUFJO01BQzVDZ0UsQ0FBQyxDQUFDLElBQUksQ0FBQ0QsR0FBRyxDQUFDL0QsTUFBTSxDQUFDLENBQUM7SUFDdkIsQ0FBQyxDQUFDO0VBQ047RUFFQTs7Ozs7RUFLT21FLE1BQU1BLENBQUE7SUFDVCxPQUFPLElBQUksQ0FBQ3RFLEdBQUcsQ0FBQ3NFLE1BQU0sRUFBRTtFQUM1QiIsImZpbGUiOiIuL2xpYi9AZGltZm9yZ2UvcmFwaWVyM2QvZHluYW1pY3MvcmlnaWRfYm9keV9zZXQuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/dynamics/rigid_body_set.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/exports.js":
/*!*******************************************!*\
  !*** ./lib/@dimforge/rapier3d/exports.js ***!
  \*******************************************/
/*! exports provided: version, Vector3, VectorOps, Quaternion, RotationOps, SdpMatrix3, SdpMatrix3Ops, RigidBodyType, RigidBody, RigidBodyDesc, RigidBodySet, IntegrationParameters, JointType, MotorModel, JointAxesMask, ImpulseJoint, UnitImpulseJoint, FixedImpulseJoint, RopeImpulseJoint, SpringImpulseJoint, PrismaticImpulseJoint, RevoluteImpulseJoint, GenericImpulseJoint, SphericalImpulseJoint, JointData, ImpulseJointSet, MultibodyJoint, UnitMultibodyJoint, FixedMultibodyJoint, PrismaticMultibodyJoint, RevoluteMultibodyJoint, SphericalMultibodyJoint, MultibodyJointSet, CoefficientCombineRule, CCDSolver, IslandManager, BroadPhase, NarrowPhase, TempContactManifold, Shape, ShapeType, HeightFieldFlags, TriMeshFlags, Ball, HalfSpace, Cuboid, RoundCuboid, Capsule, Segment, Triangle, RoundTriangle, Polyline, TriMesh, ConvexPolyhedron, RoundConvexPolyhedron, Heightfield, Cylinder, RoundCylinder, Cone, RoundCone, ActiveCollisionTypes, Collider, MassPropsMode, ColliderDesc, ColliderSet, FeatureType, Ray, RayIntersection, RayColliderIntersection, RayColliderHit, PointProjection, PointColliderProjection, ShapeCastHit, ColliderShapeCastHit, ShapeContact, World, PhysicsPipeline, SerializationPipeline, ActiveEvents, TempContactForceEvent, EventQueue, ActiveHooks, SolverFlags, DebugRenderBuffers, DebugRenderPipeline, QueryFilterFlags, QueryPipeline, CharacterCollision, KinematicCharacterController, DynamicRayCastVehicleController */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"version\", function() { return version; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math */ \"./lib/@dimforge/rapier3d/math.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Vector3\", function() { return _math__WEBPACK_IMPORTED_MODULE_1__[\"Vector3\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"VectorOps\", function() { return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Quaternion\", function() { return _math__WEBPACK_IMPORTED_MODULE_1__[\"Quaternion\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RotationOps\", function() { return _math__WEBPACK_IMPORTED_MODULE_1__[\"RotationOps\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SdpMatrix3\", function() { return _math__WEBPACK_IMPORTED_MODULE_1__[\"SdpMatrix3\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SdpMatrix3Ops\", function() { return _math__WEBPACK_IMPORTED_MODULE_1__[\"SdpMatrix3Ops\"]; });\n\n/* harmony import */ var _dynamics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dynamics */ \"./lib/@dimforge/rapier3d/dynamics/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RigidBodyType\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"RigidBodyType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RigidBody\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"RigidBody\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RigidBodyDesc\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"RigidBodyDesc\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RigidBodySet\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"RigidBodySet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IntegrationParameters\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"IntegrationParameters\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"JointType\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"JointType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MotorModel\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"MotorModel\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"JointAxesMask\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"JointAxesMask\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImpulseJoint\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"ImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UnitImpulseJoint\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"UnitImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FixedImpulseJoint\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"FixedImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RopeImpulseJoint\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"RopeImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SpringImpulseJoint\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"SpringImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PrismaticImpulseJoint\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"PrismaticImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RevoluteImpulseJoint\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"RevoluteImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"GenericImpulseJoint\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"GenericImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SphericalImpulseJoint\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"SphericalImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"JointData\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"JointData\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImpulseJointSet\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"ImpulseJointSet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MultibodyJoint\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"MultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UnitMultibodyJoint\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"UnitMultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FixedMultibodyJoint\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"FixedMultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PrismaticMultibodyJoint\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"PrismaticMultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RevoluteMultibodyJoint\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"RevoluteMultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SphericalMultibodyJoint\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"SphericalMultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MultibodyJointSet\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"MultibodyJointSet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CoefficientCombineRule\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"CoefficientCombineRule\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CCDSolver\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"CCDSolver\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IslandManager\", function() { return _dynamics__WEBPACK_IMPORTED_MODULE_2__[\"IslandManager\"]; });\n\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./geometry */ \"./lib/@dimforge/rapier3d/geometry/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BroadPhase\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"BroadPhase\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NarrowPhase\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"NarrowPhase\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TempContactManifold\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"TempContactManifold\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Shape\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"Shape\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ShapeType\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"ShapeType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"HeightFieldFlags\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"HeightFieldFlags\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TriMeshFlags\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"TriMeshFlags\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Ball\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"Ball\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"HalfSpace\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"HalfSpace\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Cuboid\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"Cuboid\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RoundCuboid\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"RoundCuboid\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Capsule\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"Capsule\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Segment\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"Segment\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Triangle\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"Triangle\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RoundTriangle\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"RoundTriangle\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Polyline\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"Polyline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TriMesh\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"TriMesh\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ConvexPolyhedron\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"ConvexPolyhedron\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RoundConvexPolyhedron\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"RoundConvexPolyhedron\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Heightfield\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"Heightfield\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Cylinder\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"Cylinder\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RoundCylinder\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"RoundCylinder\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Cone\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"Cone\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RoundCone\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"RoundCone\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ActiveCollisionTypes\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"ActiveCollisionTypes\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Collider\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"Collider\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MassPropsMode\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"MassPropsMode\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColliderDesc\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"ColliderDesc\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColliderSet\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"ColliderSet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FeatureType\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"FeatureType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Ray\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"Ray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RayIntersection\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"RayIntersection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RayColliderIntersection\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"RayColliderIntersection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RayColliderHit\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"RayColliderHit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PointProjection\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"PointProjection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PointColliderProjection\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"PointColliderProjection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ShapeCastHit\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"ShapeCastHit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColliderShapeCastHit\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"ColliderShapeCastHit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ShapeContact\", function() { return _geometry__WEBPACK_IMPORTED_MODULE_3__[\"ShapeContact\"]; });\n\n/* harmony import */ var _pipeline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pipeline */ \"./lib/@dimforge/rapier3d/pipeline/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"World\", function() { return _pipeline__WEBPACK_IMPORTED_MODULE_4__[\"World\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PhysicsPipeline\", function() { return _pipeline__WEBPACK_IMPORTED_MODULE_4__[\"PhysicsPipeline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SerializationPipeline\", function() { return _pipeline__WEBPACK_IMPORTED_MODULE_4__[\"SerializationPipeline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ActiveEvents\", function() { return _pipeline__WEBPACK_IMPORTED_MODULE_4__[\"ActiveEvents\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TempContactForceEvent\", function() { return _pipeline__WEBPACK_IMPORTED_MODULE_4__[\"TempContactForceEvent\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EventQueue\", function() { return _pipeline__WEBPACK_IMPORTED_MODULE_4__[\"EventQueue\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ActiveHooks\", function() { return _pipeline__WEBPACK_IMPORTED_MODULE_4__[\"ActiveHooks\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SolverFlags\", function() { return _pipeline__WEBPACK_IMPORTED_MODULE_4__[\"SolverFlags\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DebugRenderBuffers\", function() { return _pipeline__WEBPACK_IMPORTED_MODULE_4__[\"DebugRenderBuffers\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DebugRenderPipeline\", function() { return _pipeline__WEBPACK_IMPORTED_MODULE_4__[\"DebugRenderPipeline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"QueryFilterFlags\", function() { return _pipeline__WEBPACK_IMPORTED_MODULE_4__[\"QueryFilterFlags\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"QueryPipeline\", function() { return _pipeline__WEBPACK_IMPORTED_MODULE_4__[\"QueryPipeline\"]; });\n\n/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./init */ \"./lib/@dimforge/rapier3d/init.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _control__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./control */ \"./lib/@dimforge/rapier3d/control/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CharacterCollision\", function() { return _control__WEBPACK_IMPORTED_MODULE_6__[\"CharacterCollision\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"KinematicCharacterController\", function() { return _control__WEBPACK_IMPORTED_MODULE_6__[\"KinematicCharacterController\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DynamicRayCastVehicleController\", function() { return _control__WEBPACK_IMPORTED_MODULE_6__[\"DynamicRayCastVehicleController\"]; });\n\n\nfunction version() {\n  return Object(_raw__WEBPACK_IMPORTED_MODULE_0__[\"version\"])();\n}\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2V4cG9ydHMudHM/YzhjMyJdLCJuYW1lcyI6WyJ2ZXJzaW9uIiwidmVycyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBcUM7QUFFL0IsU0FBVUEsT0FBT0EsQ0FBQTtFQUNuQixPQUFPQyxvREFBSSxFQUFFO0FBQ2pCO0FBRXNCO0FBQ0k7QUFDQTtBQUNBO0FBQ0oiLCJmaWxlIjoiLi9saWIvQGRpbWZvcmdlL3JhcGllcjNkL2V4cG9ydHMuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/exports.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/geometry/broad_phase.js":
/*!********************************************************!*\
  !*** ./lib/@dimforge/rapier3d/geometry/broad_phase.js ***!
  \********************************************************/
/*! exports provided: BroadPhase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BroadPhase\", function() { return BroadPhase; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n\n/**\n * The broad-phase used for coarse collision-detection.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `broadPhase.free()`\n * once you are done using it.\n */\nclass BroadPhase {\n  constructor(raw) {\n    this.raw = raw || new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawBroadPhase\"]();\n  }\n  /**\n   * Release the WASM memory occupied by this broad-phase.\n   */\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2dlb21ldHJ5L2Jyb2FkX3BoYXNlLnRzP2EwN2EiXSwibmFtZXMiOlsiQnJvYWRQaGFzZSIsImNvbnN0cnVjdG9yIiwicmF3IiwiUmF3QnJvYWRQaGFzZSIsImZyZWUiLCJ1bmRlZmluZWQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFvQztBQUVwQzs7Ozs7O0FBTU0sTUFBT0EsVUFBVTtFQWFuQkMsWUFBWUMsR0FBbUI7SUFDM0IsSUFBSSxDQUFDQSxHQUFHLEdBQUdBLEdBQUcsSUFBSSxJQUFJQyxrREFBYSxFQUFFO0VBQ3pDO0VBWkE7OztFQUdPQyxJQUFJQSxDQUFBO0lBQ1AsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDRixHQUFHLEVBQUU7TUFDWixJQUFJLENBQUNBLEdBQUcsQ0FBQ0UsSUFBSSxFQUFFOztJQUVuQixJQUFJLENBQUNGLEdBQUcsR0FBR0csU0FBUztFQUN4QiIsImZpbGUiOiIuL2xpYi9AZGltZm9yZ2UvcmFwaWVyM2QvZ2VvbWV0cnkvYnJvYWRfcGhhc2UuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/geometry/broad_phase.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/geometry/collider.js":
/*!*****************************************************!*\
  !*** ./lib/@dimforge/rapier3d/geometry/collider.js ***!
  \*****************************************************/
/*! exports provided: ActiveCollisionTypes, Collider, MassPropsMode, ColliderDesc */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActiveCollisionTypes\", function() { return ActiveCollisionTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Collider\", function() { return Collider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MassPropsMode\", function() { return MassPropsMode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColliderDesc\", function() { return ColliderDesc; });\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n/* harmony import */ var _dynamics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dynamics */ \"./lib/@dimforge/rapier3d/dynamics/index.js\");\n/* harmony import */ var _pipeline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pipeline */ \"./lib/@dimforge/rapier3d/pipeline/index.js\");\n/* harmony import */ var _shape__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shape */ \"./lib/@dimforge/rapier3d/geometry/shape.js\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ray */ \"./lib/@dimforge/rapier3d/geometry/ray.js\");\n/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./point */ \"./lib/@dimforge/rapier3d/geometry/point.js\");\n/* harmony import */ var _toi__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./toi */ \"./lib/@dimforge/rapier3d/geometry/toi.js\");\n/* harmony import */ var _contact__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./contact */ \"./lib/@dimforge/rapier3d/geometry/contact.js\");\n\n\n\n\n\n\n\n\n/**\n * Flags affecting whether collision-detection happens between two colliders\n * depending on the type of rigid-bodies they are attached to.\n */\nvar ActiveCollisionTypes;\n(function (ActiveCollisionTypes) {\n  /**\n   * Enable collision-detection between a collider attached to a dynamic body\n   * and another collider attached to a dynamic body.\n   */\n  ActiveCollisionTypes[ActiveCollisionTypes[\"DYNAMIC_DYNAMIC\"] = 1] = \"DYNAMIC_DYNAMIC\";\n  /**\n   * Enable collision-detection between a collider attached to a dynamic body\n   * and another collider attached to a kinematic body.\n   */\n  ActiveCollisionTypes[ActiveCollisionTypes[\"DYNAMIC_KINEMATIC\"] = 12] = \"DYNAMIC_KINEMATIC\";\n  /**\n   * Enable collision-detection between a collider attached to a dynamic body\n   * and another collider attached to a fixed body (or not attached to any body).\n   */\n  ActiveCollisionTypes[ActiveCollisionTypes[\"DYNAMIC_FIXED\"] = 2] = \"DYNAMIC_FIXED\";\n  /**\n   * Enable collision-detection between a collider attached to a kinematic body\n   * and another collider attached to a kinematic body.\n   */\n  ActiveCollisionTypes[ActiveCollisionTypes[\"KINEMATIC_KINEMATIC\"] = 52224] = \"KINEMATIC_KINEMATIC\";\n  /**\n   * Enable collision-detection between a collider attached to a kinematic body\n   * and another collider attached to a fixed body (or not attached to any body).\n   */\n  ActiveCollisionTypes[ActiveCollisionTypes[\"KINEMATIC_FIXED\"] = 8704] = \"KINEMATIC_FIXED\";\n  /**\n   * Enable collision-detection between a collider attached to a fixed body (or\n   * not attached to any body) and another collider attached to a fixed body (or\n   * not attached to any body).\n   */\n  ActiveCollisionTypes[ActiveCollisionTypes[\"FIXED_FIXED\"] = 32] = \"FIXED_FIXED\";\n  /**\n   * The default active collision types, enabling collisions between a dynamic body\n   * and another body of any type, but not enabling collisions between two non-dynamic bodies.\n   */\n  ActiveCollisionTypes[ActiveCollisionTypes[\"DEFAULT\"] = 15] = \"DEFAULT\";\n  /**\n   * Enable collisions between any kind of rigid-bodies (including between two non-dynamic bodies).\n   */\n  ActiveCollisionTypes[ActiveCollisionTypes[\"ALL\"] = 60943] = \"ALL\";\n})(ActiveCollisionTypes || (ActiveCollisionTypes = {}));\n/**\n * A geometric entity that can be attached to a body so it can be affected\n * by contacts and proximity queries.\n */\nclass Collider {\n  constructor(colliderSet, handle, parent, shape) {\n    this.colliderSet = colliderSet;\n    this.handle = handle;\n    this._parent = parent;\n    this._shape = shape;\n  }\n  /** @internal */\n  finalizeDeserialization(bodies) {\n    if (this.handle != null) {\n      this._parent = bodies.get(this.colliderSet.raw.coParent(this.handle));\n    }\n  }\n  ensureShapeIsCached() {\n    if (!this._shape) this._shape = _shape__WEBPACK_IMPORTED_MODULE_3__[\"Shape\"].fromRaw(this.colliderSet.raw, this.handle);\n  }\n  /**\n   * The shape of this collider.\n   */\n  get shape() {\n    this.ensureShapeIsCached();\n    return this._shape;\n  }\n  /**\n   * Checks if this collider is still valid (i.e. that it has\n   * not been deleted from the collider set yet).\n   */\n  isValid() {\n    return this.colliderSet.raw.contains(this.handle);\n  }\n  /**\n   * The world-space translation of this rigid-body.\n   */\n  translation() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(this.colliderSet.raw.coTranslation(this.handle));\n  }\n  /**\n   * The world-space orientation of this rigid-body.\n   */\n  rotation() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].fromRaw(this.colliderSet.raw.coRotation(this.handle));\n  }\n  /**\n   * Is this collider a sensor?\n   */\n  isSensor() {\n    return this.colliderSet.raw.coIsSensor(this.handle);\n  }\n  /**\n   * Sets whether or not this collider is a sensor.\n   * @param isSensor - If `true`, the collider will be a sensor.\n   */\n  setSensor(isSensor) {\n    this.colliderSet.raw.coSetSensor(this.handle, isSensor);\n  }\n  /**\n   * Sets the new shape of the collider.\n   * @param shape - The collider’s new shape.\n   */\n  setShape(shape) {\n    let rawShape = shape.intoRaw();\n    this.colliderSet.raw.coSetShape(this.handle, rawShape);\n    rawShape.free();\n    this._shape = shape;\n  }\n  /**\n   * Sets whether this collider is enabled or not.\n   *\n   * @param enabled - Set to `false` to disable this collider (its parent rigid-body won’t be disabled automatically by this).\n   */\n  setEnabled(enabled) {\n    this.colliderSet.raw.coSetEnabled(this.handle, enabled);\n  }\n  /**\n   * Is this collider enabled?\n   */\n  isEnabled() {\n    return this.colliderSet.raw.coIsEnabled(this.handle);\n  }\n  /**\n   * Sets the restitution coefficient of the collider to be created.\n   *\n   * @param restitution - The restitution coefficient in `[0, 1]`. A value of 0 (the default) means no bouncing behavior\n   *                   while 1 means perfect bouncing (though energy may still be lost due to numerical errors of the\n   *                   constraints solver).\n   */\n  setRestitution(restitution) {\n    this.colliderSet.raw.coSetRestitution(this.handle, restitution);\n  }\n  /**\n   * Sets the friction coefficient of the collider to be created.\n   *\n   * @param friction - The friction coefficient. Must be greater or equal to 0. This is generally smaller than 1. The\n   *                   higher the coefficient, the stronger friction forces will be for contacts with the collider\n   *                   being built.\n   */\n  setFriction(friction) {\n    this.colliderSet.raw.coSetFriction(this.handle, friction);\n  }\n  /**\n   * Gets the rule used to combine the friction coefficients of two colliders\n   * colliders involved in a contact.\n   */\n  frictionCombineRule() {\n    return this.colliderSet.raw.coFrictionCombineRule(this.handle);\n  }\n  /**\n   * Sets the rule used to combine the friction coefficients of two colliders\n   * colliders involved in a contact.\n   *\n   * @param rule − The combine rule to apply.\n   */\n  setFrictionCombineRule(rule) {\n    this.colliderSet.raw.coSetFrictionCombineRule(this.handle, rule);\n  }\n  /**\n   * Gets the rule used to combine the restitution coefficients of two colliders\n   * colliders involved in a contact.\n   */\n  restitutionCombineRule() {\n    return this.colliderSet.raw.coRestitutionCombineRule(this.handle);\n  }\n  /**\n   * Sets the rule used to combine the restitution coefficients of two colliders\n   * colliders involved in a contact.\n   *\n   * @param rule − The combine rule to apply.\n   */\n  setRestitutionCombineRule(rule) {\n    this.colliderSet.raw.coSetRestitutionCombineRule(this.handle, rule);\n  }\n  /**\n   * Sets the collision groups used by this collider.\n   *\n   * Two colliders will interact iff. their collision groups are compatible.\n   * See the documentation of `InteractionGroups` for details on teh used bit pattern.\n   *\n   * @param groups - The collision groups used for the collider being built.\n   */\n  setCollisionGroups(groups) {\n    this.colliderSet.raw.coSetCollisionGroups(this.handle, groups);\n  }\n  /**\n   * Sets the solver groups used by this collider.\n   *\n   * Forces between two colliders in contact will be computed iff their solver\n   * groups are compatible.\n   * See the documentation of `InteractionGroups` for details on the used bit pattern.\n   *\n   * @param groups - The solver groups used for the collider being built.\n   */\n  setSolverGroups(groups) {\n    this.colliderSet.raw.coSetSolverGroups(this.handle, groups);\n  }\n  /**\n   * Sets the contact skin for this collider.\n   *\n   * See the documentation of `ColliderDesc.setContactSkin` for additional details.\n   */\n  contactSkin() {\n    return this.colliderSet.raw.coContactSkin(this.handle);\n  }\n  /**\n   * Sets the contact skin for this collider.\n   *\n   * See the documentation of `ColliderDesc.setContactSkin` for additional details.\n   *\n   * @param thickness - The contact skin thickness.\n   */\n  setContactSkin(thickness) {\n    return this.colliderSet.raw.coSetContactSkin(this.handle, thickness);\n  }\n  /**\n   * Get the physics hooks active for this collider.\n   */\n  activeHooks() {\n    return this.colliderSet.raw.coActiveHooks(this.handle);\n  }\n  /**\n   * Set the physics hooks active for this collider.\n   *\n   * Use this to enable custom filtering rules for contact/intersecstion pairs involving this collider.\n   *\n   * @param activeHooks - The hooks active for contact/intersection pairs involving this collider.\n   */\n  setActiveHooks(activeHooks) {\n    this.colliderSet.raw.coSetActiveHooks(this.handle, activeHooks);\n  }\n  /**\n   * The events active for this collider.\n   */\n  activeEvents() {\n    return this.colliderSet.raw.coActiveEvents(this.handle);\n  }\n  /**\n   * Set the events active for this collider.\n   *\n   * Use this to enable contact and/or intersection event reporting for this collider.\n   *\n   * @param activeEvents - The events active for contact/intersection pairs involving this collider.\n   */\n  setActiveEvents(activeEvents) {\n    this.colliderSet.raw.coSetActiveEvents(this.handle, activeEvents);\n  }\n  /**\n   * Gets the collision types active for this collider.\n   */\n  activeCollisionTypes() {\n    return this.colliderSet.raw.coActiveCollisionTypes(this.handle);\n  }\n  /**\n   * Sets the total force magnitude beyond which a contact force event can be emitted.\n   *\n   * @param threshold - The new force threshold.\n   */\n  setContactForceEventThreshold(threshold) {\n    return this.colliderSet.raw.coSetContactForceEventThreshold(this.handle, threshold);\n  }\n  /**\n   * The total force magnitude beyond which a contact force event can be emitted.\n   */\n  contactForceEventThreshold() {\n    return this.colliderSet.raw.coContactForceEventThreshold(this.handle);\n  }\n  /**\n   * Set the collision types active for this collider.\n   *\n   * @param activeCollisionTypes - The hooks active for contact/intersection pairs involving this collider.\n   */\n  setActiveCollisionTypes(activeCollisionTypes) {\n    this.colliderSet.raw.coSetActiveCollisionTypes(this.handle, activeCollisionTypes);\n  }\n  /**\n   * Sets the uniform density of this collider.\n   *\n   * This will override any previous mass-properties set by `this.setDensity`,\n   * `this.setMass`, `this.setMassProperties`, `ColliderDesc.density`,\n   * `ColliderDesc.mass`, or `ColliderDesc.massProperties` for this collider.\n   *\n   * The mass and angular inertia of this collider will be computed automatically based on its\n   * shape.\n   */\n  setDensity(density) {\n    this.colliderSet.raw.coSetDensity(this.handle, density);\n  }\n  /**\n   * Sets the mass of this collider.\n   *\n   * This will override any previous mass-properties set by `this.setDensity`,\n   * `this.setMass`, `this.setMassProperties`, `ColliderDesc.density`,\n   * `ColliderDesc.mass`, or `ColliderDesc.massProperties` for this collider.\n   *\n   * The angular inertia of this collider will be computed automatically based on its shape\n   * and this mass value.\n   */\n  setMass(mass) {\n    this.colliderSet.raw.coSetMass(this.handle, mass);\n  }\n  // #if DIM3\n  /**\n   * Sets the mass of this collider.\n   *\n   * This will override any previous mass-properties set by `this.setDensity`,\n   * `this.setMass`, `this.setMassProperties`, `ColliderDesc.density`,\n   * `ColliderDesc.mass`, or `ColliderDesc.massProperties` for this collider.\n   */\n  setMassProperties(mass, centerOfMass, principalAngularInertia, angularInertiaLocalFrame) {\n    let rawCom = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(centerOfMass);\n    let rawPrincipalInertia = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(principalAngularInertia);\n    let rawInertiaFrame = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(angularInertiaLocalFrame);\n    this.colliderSet.raw.coSetMassProperties(this.handle, mass, rawCom, rawPrincipalInertia, rawInertiaFrame);\n    rawCom.free();\n    rawPrincipalInertia.free();\n    rawInertiaFrame.free();\n  }\n  // #endif\n  /**\n   * Sets the translation of this collider.\n   *\n   * @param tra - The world-space position of the collider.\n   */\n  setTranslation(tra) {\n    // #if DIM3\n    this.colliderSet.raw.coSetTranslation(this.handle, tra.x, tra.y, tra.z);\n    // #endif\n  }\n  /**\n   * Sets the translation of this collider relative to its parent rigid-body.\n   *\n   * Does nothing if this collider isn't attached to a rigid-body.\n   *\n   * @param tra - The new translation of the collider relative to its parent.\n   */\n  setTranslationWrtParent(tra) {\n    // #if DIM3\n    this.colliderSet.raw.coSetTranslationWrtParent(this.handle, tra.x, tra.y, tra.z);\n    // #endif\n  }\n  // #if DIM3\n  /**\n   * Sets the rotation quaternion of this collider.\n   *\n   * This does nothing if a zero quaternion is provided.\n   *\n   * @param rotation - The rotation to set.\n   */\n  setRotation(rot) {\n    this.colliderSet.raw.coSetRotation(this.handle, rot.x, rot.y, rot.z, rot.w);\n  }\n  /**\n   * Sets the rotation quaternion of this collider relative to its parent rigid-body.\n   *\n   * This does nothing if a zero quaternion is provided or if this collider isn't\n   * attached to a rigid-body.\n   *\n   * @param rotation - The rotation to set.\n   */\n  setRotationWrtParent(rot) {\n    this.colliderSet.raw.coSetRotationWrtParent(this.handle, rot.x, rot.y, rot.z, rot.w);\n  }\n  // #endif\n  /**\n   * The type of the shape of this collider.\n   * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n   */\n  shapeType() {\n    return this.colliderSet.raw.coShapeType(this.handle);\n  }\n  /**\n   * The half-extents of this collider if it is a cuboid shape.\n   * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n   */\n  halfExtents() {\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(this.colliderSet.raw.coHalfExtents(this.handle));\n  }\n  /**\n   * Sets the half-extents of this collider if it is a cuboid shape.\n   *\n   * @param newHalfExtents - desired half extents.\n   */\n  setHalfExtents(newHalfExtents) {\n    const rawPoint = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(newHalfExtents);\n    this.colliderSet.raw.coSetHalfExtents(this.handle, rawPoint);\n  }\n  /**\n   * The radius of this collider if it is a ball, cylinder, capsule, or cone shape.\n   * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n   */\n  radius() {\n    return this.colliderSet.raw.coRadius(this.handle);\n  }\n  /**\n   * Sets the radius of this collider if it is a ball, cylinder, capsule, or cone shape.\n   *\n   * @param newRadius - desired radius.\n   */\n  setRadius(newRadius) {\n    this.colliderSet.raw.coSetRadius(this.handle, newRadius);\n  }\n  /**\n   * The radius of the round edges of this collider if it is a round cylinder.\n   * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n   */\n  roundRadius() {\n    return this.colliderSet.raw.coRoundRadius(this.handle);\n  }\n  /**\n   * Sets the radius of the round edges of this collider if it has round edges.\n   *\n   * @param newBorderRadius - desired round edge radius.\n   */\n  setRoundRadius(newBorderRadius) {\n    this.colliderSet.raw.coSetRoundRadius(this.handle, newBorderRadius);\n  }\n  /**\n   * The half height of this collider if it is a cylinder, capsule, or cone shape.\n   * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n   */\n  halfHeight() {\n    return this.colliderSet.raw.coHalfHeight(this.handle);\n  }\n  /**\n   * Sets the half height of this collider if it is a cylinder, capsule, or cone shape.\n   *\n   * @param newHalfheight - desired half height.\n   */\n  setHalfHeight(newHalfheight) {\n    this.colliderSet.raw.coSetHalfHeight(this.handle, newHalfheight);\n  }\n  /**\n   * If this collider has a triangle mesh, polyline, convex polygon, or convex polyhedron shape,\n   * this returns the vertex buffer of said shape.\n   * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n   */\n  vertices() {\n    return this.colliderSet.raw.coVertices(this.handle);\n  }\n  /**\n   * If this collider has a triangle mesh, polyline, or convex polyhedron shape,\n   * this returns the index buffer of said shape.\n   * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n   */\n  indices() {\n    return this.colliderSet.raw.coIndices(this.handle);\n  }\n  /**\n   * If this collider has a heightfield shape, this returns the heights buffer of\n   * the heightfield.\n   * In 3D, the returned height matrix is provided in column-major order.\n   * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n   */\n  heightfieldHeights() {\n    return this.colliderSet.raw.coHeightfieldHeights(this.handle);\n  }\n  /**\n   * If this collider has a heightfield shape, this returns the scale\n   * applied to it.\n   * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n   */\n  heightfieldScale() {\n    let scale = this.colliderSet.raw.coHeightfieldScale(this.handle);\n    return _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(scale);\n  }\n  // #if DIM3\n  /**\n   * If this collider has a heightfield shape, this returns the number of\n   * rows of its height matrix.\n   * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n   */\n  heightfieldNRows() {\n    return this.colliderSet.raw.coHeightfieldNRows(this.handle);\n  }\n  /**\n   * If this collider has a heightfield shape, this returns the number of\n   * columns of its height matrix.\n   * @deprecated this field will be removed in the future, please access this field on `shape` member instead.\n   */\n  heightfieldNCols() {\n    return this.colliderSet.raw.coHeightfieldNCols(this.handle);\n  }\n  // #endif\n  /**\n   * The rigid-body this collider is attached to.\n   */\n  parent() {\n    return this._parent;\n  }\n  /**\n   * The friction coefficient of this collider.\n   */\n  friction() {\n    return this.colliderSet.raw.coFriction(this.handle);\n  }\n  /**\n   * The restitution coefficient of this collider.\n   */\n  restitution() {\n    return this.colliderSet.raw.coRestitution(this.handle);\n  }\n  /**\n   * The density of this collider.\n   */\n  density() {\n    return this.colliderSet.raw.coDensity(this.handle);\n  }\n  /**\n   * The mass of this collider.\n   */\n  mass() {\n    return this.colliderSet.raw.coMass(this.handle);\n  }\n  /**\n   * The volume of this collider.\n   */\n  volume() {\n    return this.colliderSet.raw.coVolume(this.handle);\n  }\n  /**\n   * The collision groups of this collider.\n   */\n  collisionGroups() {\n    return this.colliderSet.raw.coCollisionGroups(this.handle);\n  }\n  /**\n   * The solver groups of this collider.\n   */\n  solverGroups() {\n    return this.colliderSet.raw.coSolverGroups(this.handle);\n  }\n  /**\n   * Tests if this collider contains a point.\n   *\n   * @param point - The point to test.\n   */\n  containsPoint(point) {\n    let rawPoint = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(point);\n    let result = this.colliderSet.raw.coContainsPoint(this.handle, rawPoint);\n    rawPoint.free();\n    return result;\n  }\n  /**\n   * Find the projection of a point on this collider.\n   *\n   * @param point - The point to project.\n   * @param solid - If this is set to `true` then the collider shapes are considered to\n   *   be plain (if the point is located inside of a plain shape, its projection is the point\n   *   itself). If it is set to `false` the collider shapes are considered to be hollow\n   *   (if the point is located inside of an hollow shape, it is projected on the shape's\n   *   boundary).\n   */\n  projectPoint(point, solid) {\n    let rawPoint = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(point);\n    let result = _point__WEBPACK_IMPORTED_MODULE_5__[\"PointProjection\"].fromRaw(this.colliderSet.raw.coProjectPoint(this.handle, rawPoint, solid));\n    rawPoint.free();\n    return result;\n  }\n  /**\n   * Tests if this collider intersects the given ray.\n   *\n   * @param ray - The ray to cast.\n   * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n   *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n   */\n  intersectsRay(ray, maxToi) {\n    let rawOrig = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(ray.origin);\n    let rawDir = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(ray.dir);\n    let result = this.colliderSet.raw.coIntersectsRay(this.handle, rawOrig, rawDir, maxToi);\n    rawOrig.free();\n    rawDir.free();\n    return result;\n  }\n  /*\n   * Computes the smallest time between this and the given shape under translational movement are separated by a distance smaller or equal to distance.\n   *\n   * @param collider1Vel - The constant velocity of the current shape to cast (i.e. the cast direction).\n   * @param shape2 - The shape to cast against.\n   * @param shape2Pos - The position of the second shape.\n   * @param shape2Rot - The rotation of the second shape.\n   * @param shape2Vel - The constant velocity of the second shape.\n   * @param targetDistance − If the shape moves closer to this distance from a collider, a hit\n   *                         will be returned.\n   * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n   *   limits the distance traveled by the shape to `collider1Vel.norm() * maxToi`.\n   * @param stopAtPenetration - If set to `false`, the linear shape-cast won’t immediately stop if\n   *   the shape is penetrating another shape at its starting point **and** its trajectory is such\n   *   that it’s on a path to exist that penetration state.\n   */\n  castShape(collider1Vel, shape2, shape2Pos, shape2Rot, shape2Vel, targetDistance, maxToi, stopAtPenetration) {\n    let rawCollider1Vel = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(collider1Vel);\n    let rawShape2Pos = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shape2Pos);\n    let rawShape2Rot = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(shape2Rot);\n    let rawShape2Vel = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shape2Vel);\n    let rawShape2 = shape2.intoRaw();\n    let result = _toi__WEBPACK_IMPORTED_MODULE_6__[\"ShapeCastHit\"].fromRaw(this.colliderSet, this.colliderSet.raw.coCastShape(this.handle, rawCollider1Vel, rawShape2, rawShape2Pos, rawShape2Rot, rawShape2Vel, targetDistance, maxToi, stopAtPenetration));\n    rawCollider1Vel.free();\n    rawShape2Pos.free();\n    rawShape2Rot.free();\n    rawShape2Vel.free();\n    rawShape2.free();\n    return result;\n  }\n  /*\n   * Computes the smallest time between this and the given collider under translational movement are separated by a distance smaller or equal to distance.\n   *\n   * @param collider1Vel - The constant velocity of the current collider to cast (i.e. the cast direction).\n   * @param collider2 - The collider to cast against.\n   * @param collider2Vel - The constant velocity of the second collider.\n   * @param targetDistance − If the shape moves closer to this distance from a collider, a hit\n   *                         will be returned.\n   * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n   *   limits the distance traveled by the shape to `shapeVel.norm() * maxToi`.\n   * @param stopAtPenetration - If set to `false`, the linear shape-cast won’t immediately stop if\n   *   the shape is penetrating another shape at its starting point **and** its trajectory is such\n   *   that it’s on a path to exist that penetration state.\n   */\n  castCollider(collider1Vel, collider2, collider2Vel, targetDistance, maxToi, stopAtPenetration) {\n    let rawCollider1Vel = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(collider1Vel);\n    let rawCollider2Vel = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(collider2Vel);\n    let result = _toi__WEBPACK_IMPORTED_MODULE_6__[\"ColliderShapeCastHit\"].fromRaw(this.colliderSet, this.colliderSet.raw.coCastCollider(this.handle, rawCollider1Vel, collider2.handle, rawCollider2Vel, targetDistance, maxToi, stopAtPenetration));\n    rawCollider1Vel.free();\n    rawCollider2Vel.free();\n    return result;\n  }\n  intersectsShape(shape2, shapePos2, shapeRot2) {\n    let rawPos2 = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shapePos2);\n    let rawRot2 = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(shapeRot2);\n    let rawShape2 = shape2.intoRaw();\n    let result = this.colliderSet.raw.coIntersectsShape(this.handle, rawShape2, rawPos2, rawRot2);\n    rawPos2.free();\n    rawRot2.free();\n    rawShape2.free();\n    return result;\n  }\n  /**\n   * Computes one pair of contact points between the shape owned by this collider and the given shape.\n   *\n   * @param shape2 - The second shape.\n   * @param shape2Pos - The initial position of the second shape.\n   * @param shape2Rot - The rotation of the second shape.\n   * @param prediction - The prediction value, if the shapes are separated by a distance greater than this value, test will fail.\n   * @returns `null` if the shapes are separated by a distance greater than prediction, otherwise contact details. The result is given in world-space.\n   */\n  contactShape(shape2, shape2Pos, shape2Rot, prediction) {\n    let rawPos2 = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shape2Pos);\n    let rawRot2 = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(shape2Rot);\n    let rawShape2 = shape2.intoRaw();\n    let result = _contact__WEBPACK_IMPORTED_MODULE_7__[\"ShapeContact\"].fromRaw(this.colliderSet.raw.coContactShape(this.handle, rawShape2, rawPos2, rawRot2, prediction));\n    rawPos2.free();\n    rawRot2.free();\n    rawShape2.free();\n    return result;\n  }\n  /**\n   * Computes one pair of contact points between the collider and the given collider.\n   *\n   * @param collider2 - The second collider.\n   * @param prediction - The prediction value, if the shapes are separated by a distance greater than this value, test will fail.\n   * @returns `null` if the shapes are separated by a distance greater than prediction, otherwise contact details. The result is given in world-space.\n   */\n  contactCollider(collider2, prediction) {\n    let result = _contact__WEBPACK_IMPORTED_MODULE_7__[\"ShapeContact\"].fromRaw(this.colliderSet.raw.coContactCollider(this.handle, collider2.handle, prediction));\n    return result;\n  }\n  /**\n   * Find the closest intersection between a ray and this collider.\n   *\n   * This also computes the normal at the hit point.\n   * @param ray - The ray to cast.\n   * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n   *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n   * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n   *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n   *   whereas `false` implies that all shapes are hollow for this ray-cast.\n   * @returns The time-of-impact between this collider and the ray, or `-1` if there is no intersection.\n   */\n  castRay(ray, maxToi, solid) {\n    let rawOrig = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(ray.origin);\n    let rawDir = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(ray.dir);\n    let result = this.colliderSet.raw.coCastRay(this.handle, rawOrig, rawDir, maxToi, solid);\n    rawOrig.free();\n    rawDir.free();\n    return result;\n  }\n  /**\n   * Find the closest intersection between a ray and this collider.\n   *\n   * This also computes the normal at the hit point.\n   * @param ray - The ray to cast.\n   * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n   *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n   * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n   *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n   *   whereas `false` implies that all shapes are hollow for this ray-cast.\n   */\n  castRayAndGetNormal(ray, maxToi, solid) {\n    let rawOrig = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(ray.origin);\n    let rawDir = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(ray.dir);\n    let result = _ray__WEBPACK_IMPORTED_MODULE_4__[\"RayIntersection\"].fromRaw(this.colliderSet.raw.coCastRayAndGetNormal(this.handle, rawOrig, rawDir, maxToi, solid));\n    rawOrig.free();\n    rawDir.free();\n    return result;\n  }\n}\nvar MassPropsMode;\n(function (MassPropsMode) {\n  MassPropsMode[MassPropsMode[\"Density\"] = 0] = \"Density\";\n  MassPropsMode[MassPropsMode[\"Mass\"] = 1] = \"Mass\";\n  MassPropsMode[MassPropsMode[\"MassProps\"] = 2] = \"MassProps\";\n})(MassPropsMode || (MassPropsMode = {}));\nclass ColliderDesc {\n  /**\n   * Initializes a collider descriptor from the collision shape.\n   *\n   * @param shape - The shape of the collider being built.\n   */\n  constructor(shape) {\n    this.enabled = true;\n    this.shape = shape;\n    this.massPropsMode = MassPropsMode.Density;\n    this.density = 1.0;\n    this.friction = 0.5;\n    this.restitution = 0.0;\n    this.rotation = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].identity();\n    this.translation = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].zeros();\n    this.isSensor = false;\n    this.collisionGroups = 4294967295;\n    this.solverGroups = 4294967295;\n    this.frictionCombineRule = _dynamics__WEBPACK_IMPORTED_MODULE_1__[\"CoefficientCombineRule\"].Average;\n    this.restitutionCombineRule = _dynamics__WEBPACK_IMPORTED_MODULE_1__[\"CoefficientCombineRule\"].Average;\n    this.activeCollisionTypes = ActiveCollisionTypes.DEFAULT;\n    this.activeEvents = _pipeline__WEBPACK_IMPORTED_MODULE_2__[\"ActiveEvents\"].NONE;\n    this.activeHooks = _pipeline__WEBPACK_IMPORTED_MODULE_2__[\"ActiveHooks\"].NONE;\n    this.mass = 0.0;\n    this.centerOfMass = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].zeros();\n    this.contactForceEventThreshold = 0.0;\n    this.contactSkin = 0.0;\n    // #if DIM3\n    this.principalAngularInertia = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].zeros();\n    this.angularInertiaLocalFrame = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].identity();\n    // #endif\n  }\n  /**\n   * Create a new collider descriptor with a ball shape.\n   *\n   * @param radius - The radius of the ball.\n   */\n  static ball(radius) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"Ball\"](radius);\n    return new ColliderDesc(shape);\n  }\n  /**\n   * Create a new collider descriptor with a capsule shape.\n   *\n   * @param halfHeight - The half-height of the capsule, along the `y` axis.\n   * @param radius - The radius of the capsule basis.\n   */\n  static capsule(halfHeight, radius) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"Capsule\"](halfHeight, radius);\n    return new ColliderDesc(shape);\n  }\n  /**\n   * Creates a new segment shape.\n   *\n   * @param a - The first point of the segment.\n   * @param b - The second point of the segment.\n   */\n  static segment(a, b) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"Segment\"](a, b);\n    return new ColliderDesc(shape);\n  }\n  /**\n   * Creates a new triangle shape.\n   *\n   * @param a - The first point of the triangle.\n   * @param b - The second point of the triangle.\n   * @param c - The third point of the triangle.\n   */\n  static triangle(a, b, c) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"Triangle\"](a, b, c);\n    return new ColliderDesc(shape);\n  }\n  /**\n   * Creates a new triangle shape with round corners.\n   *\n   * @param a - The first point of the triangle.\n   * @param b - The second point of the triangle.\n   * @param c - The third point of the triangle.\n   * @param borderRadius - The radius of the borders of this triangle. In 3D,\n   *   this is also equal to half the thickness of the triangle.\n   */\n  static roundTriangle(a, b, c, borderRadius) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"RoundTriangle\"](a, b, c, borderRadius);\n    return new ColliderDesc(shape);\n  }\n  /**\n   * Creates a new collider descriptor with a polyline shape.\n   *\n   * @param vertices - The coordinates of the polyline's vertices.\n   * @param indices - The indices of the polyline's segments. If this is `undefined` or `null`,\n   *    the vertices are assumed to describe a line strip.\n   */\n  static polyline(vertices, indices) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"Polyline\"](vertices, indices);\n    return new ColliderDesc(shape);\n  }\n  /**\n   * Creates a new collider descriptor with a triangle mesh shape.\n   *\n   * @param vertices - The coordinates of the triangle mesh's vertices.\n   * @param indices - The indices of the triangle mesh's triangles.\n   */\n  static trimesh(vertices, indices, flags) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"TriMesh\"](vertices, indices, flags);\n    return new ColliderDesc(shape);\n  }\n  // #if DIM3\n  /**\n   * Creates a new collider descriptor with a cuboid shape.\n   *\n   * @param hx - The half-width of the rectangle along its local `x` axis.\n   * @param hy - The half-width of the rectangle along its local `y` axis.\n   * @param hz - The half-width of the rectangle along its local `z` axis.\n   */\n  static cuboid(hx, hy, hz) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"Cuboid\"](hx, hy, hz);\n    return new ColliderDesc(shape);\n  }\n  /**\n   * Creates a new collider descriptor with a rectangular shape with round borders.\n   *\n   * @param hx - The half-width of the rectangle along its local `x` axis.\n   * @param hy - The half-width of the rectangle along its local `y` axis.\n   * @param hz - The half-width of the rectangle along its local `z` axis.\n   * @param borderRadius - The radius of the cuboid's borders.\n   */\n  static roundCuboid(hx, hy, hz, borderRadius) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"RoundCuboid\"](hx, hy, hz, borderRadius);\n    return new ColliderDesc(shape);\n  }\n  /**\n   * Creates a new collider descriptor with a heightfield shape.\n   *\n   * @param nrows − The number of rows in the heights matrix.\n   * @param ncols - The number of columns in the heights matrix.\n   * @param heights - The heights of the heightfield along its local `y` axis,\n   *                  provided as a matrix stored in column-major order.\n   * @param scale - The scale factor applied to the heightfield.\n   */\n  static heightfield(nrows, ncols, heights, scale, flags) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"Heightfield\"](nrows, ncols, heights, scale, flags);\n    return new ColliderDesc(shape);\n  }\n  /**\n   * Create a new collider descriptor with a cylinder shape.\n   *\n   * @param halfHeight - The half-height of the cylinder, along the `y` axis.\n   * @param radius - The radius of the cylinder basis.\n   */\n  static cylinder(halfHeight, radius) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"Cylinder\"](halfHeight, radius);\n    return new ColliderDesc(shape);\n  }\n  /**\n   * Create a new collider descriptor with a cylinder shape with rounded corners.\n   *\n   * @param halfHeight - The half-height of the cylinder, along the `y` axis.\n   * @param radius - The radius of the cylinder basis.\n   * @param borderRadius - The radius of the cylinder's rounded edges and vertices.\n   */\n  static roundCylinder(halfHeight, radius, borderRadius) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"RoundCylinder\"](halfHeight, radius, borderRadius);\n    return new ColliderDesc(shape);\n  }\n  /**\n   * Create a new collider descriptor with a cone shape.\n   *\n   * @param halfHeight - The half-height of the cone, along the `y` axis.\n   * @param radius - The radius of the cone basis.\n   */\n  static cone(halfHeight, radius) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"Cone\"](halfHeight, radius);\n    return new ColliderDesc(shape);\n  }\n  /**\n   * Create a new collider descriptor with a cone shape with rounded corners.\n   *\n   * @param halfHeight - The half-height of the cone, along the `y` axis.\n   * @param radius - The radius of the cone basis.\n   * @param borderRadius - The radius of the cone's rounded edges and vertices.\n   */\n  static roundCone(halfHeight, radius, borderRadius) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"RoundCone\"](halfHeight, radius, borderRadius);\n    return new ColliderDesc(shape);\n  }\n  /**\n   * Computes the convex-hull of the given points and use the resulting\n   * convex polyhedron as the shape for this new collider descriptor.\n   *\n   * @param points - The point that will be used to compute the convex-hull.\n   */\n  static convexHull(points) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"ConvexPolyhedron\"](points, null);\n    return new ColliderDesc(shape);\n  }\n  /**\n   * Creates a new collider descriptor that uses the given set of points assumed\n   * to form a convex polyline (no convex-hull computation will be done).\n   *\n   * @param vertices - The vertices of the convex polyline.\n   */\n  static convexMesh(vertices, indices) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"ConvexPolyhedron\"](vertices, indices);\n    return new ColliderDesc(shape);\n  }\n  /**\n   * Computes the convex-hull of the given points and use the resulting\n   * convex polyhedron as the shape for this new collider descriptor. A\n   * border is added to that convex polyhedron to give it round corners.\n   *\n   * @param points - The point that will be used to compute the convex-hull.\n   * @param borderRadius - The radius of the round border added to the convex polyhedron.\n   */\n  static roundConvexHull(points, borderRadius) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"RoundConvexPolyhedron\"](points, null, borderRadius);\n    return new ColliderDesc(shape);\n  }\n  /**\n   * Creates a new collider descriptor that uses the given set of points assumed\n   * to form a round convex polyline (no convex-hull computation will be done).\n   *\n   * @param vertices - The vertices of the convex polyline.\n   * @param borderRadius - The radius of the round border added to the convex polyline.\n   */\n  static roundConvexMesh(vertices, indices, borderRadius) {\n    const shape = new _shape__WEBPACK_IMPORTED_MODULE_3__[\"RoundConvexPolyhedron\"](vertices, indices, borderRadius);\n    return new ColliderDesc(shape);\n  }\n  // #endif\n  // #if DIM3\n  /**\n   * Sets the position of the collider to be created relative to the rigid-body it is attached to.\n   */\n  setTranslation(x, y, z) {\n    if (typeof x != \"number\" || typeof y != \"number\" || typeof z != \"number\") throw TypeError(\"The translation components must be numbers.\");\n    this.translation = {\n      x: x,\n      y: y,\n      z: z\n    };\n    return this;\n  }\n  // #endif\n  /**\n   * Sets the rotation of the collider to be created relative to the rigid-body it is attached to.\n   *\n   * @param rot - The rotation of the collider to be created relative to the rigid-body it is attached to.\n   */\n  setRotation(rot) {\n    // #if DIM3\n    _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].copy(this.rotation, rot);\n    // #endif\n    return this;\n  }\n  /**\n   * Sets whether or not the collider being created is a sensor.\n   *\n   * A sensor collider does not take part of the physics simulation, but generates\n   * proximity events.\n   *\n   * @param sensor - Set to `true` of the collider built is to be a sensor.\n   */\n  setSensor(sensor) {\n    this.isSensor = sensor;\n    return this;\n  }\n  /**\n   * Sets whether the created collider will be enabled or disabled.\n   * @param enabled − If set to `false` the collider will be disabled at creation.\n   */\n  setEnabled(enabled) {\n    this.enabled = enabled;\n    return this;\n  }\n  /**\n   * Sets the contact skin of the collider.\n   *\n   * The contact skin acts as if the collider was enlarged with a skin of width `skin_thickness`\n   * around it, keeping objects further apart when colliding.\n   *\n   * A non-zero contact skin can increase performance, and in some cases, stability. However\n   * it creates a small gap between colliding object (equal to the sum of their skin). If the\n   * skin is sufficiently small, this might not be visually significant or can be hidden by the\n   * rendering assets.\n   */\n  setContactSkin(thickness) {\n    this.contactSkin = thickness;\n    return this;\n  }\n  /**\n   * Sets the density of the collider being built.\n   *\n   * The mass and angular inertia tensor will be computed automatically based on this density and the collider’s shape.\n   *\n   * @param density - The density to set, must be greater or equal to 0. A density of 0 means that this collider\n   *                  will not affect the mass or angular inertia of the rigid-body it is attached to.\n   */\n  setDensity(density) {\n    this.massPropsMode = MassPropsMode.Density;\n    this.density = density;\n    return this;\n  }\n  /**\n   * Sets the mass of the collider being built.\n   *\n   * The angular inertia tensor will be computed automatically based on this mass and the collider’s shape.\n   *\n   * @param mass - The mass to set, must be greater or equal to 0.\n   */\n  setMass(mass) {\n    this.massPropsMode = MassPropsMode.Mass;\n    this.mass = mass;\n    return this;\n  }\n  // #if DIM3\n  /**\n   * Sets the mass properties of the collider being built.\n   *\n   * This replaces the mass-properties automatically computed from the collider's density and shape.\n   * These mass-properties will be added to the mass-properties of the rigid-body this collider will be attached to.\n   *\n   * @param mass − The mass of the collider to create.\n   * @param centerOfMass − The center-of-mass of the collider to create.\n   * @param principalAngularInertia − The initial principal angular inertia of the collider to create.\n   *                                  These are the eigenvalues of the angular inertia matrix.\n   * @param angularInertiaLocalFrame − The initial local angular inertia frame of the collider to create.\n   *                                   These are the eigenvectors of the angular inertia matrix.\n   */\n  setMassProperties(mass, centerOfMass, principalAngularInertia, angularInertiaLocalFrame) {\n    this.massPropsMode = MassPropsMode.MassProps;\n    this.mass = mass;\n    _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].copy(this.centerOfMass, centerOfMass);\n    _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].copy(this.principalAngularInertia, principalAngularInertia);\n    _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].copy(this.angularInertiaLocalFrame, angularInertiaLocalFrame);\n    return this;\n  }\n  // #endif\n  /**\n   * Sets the restitution coefficient of the collider to be created.\n   *\n   * @param restitution - The restitution coefficient in `[0, 1]`. A value of 0 (the default) means no bouncing behavior\n   *                   while 1 means perfect bouncing (though energy may still be lost due to numerical errors of the\n   *                   constraints solver).\n   */\n  setRestitution(restitution) {\n    this.restitution = restitution;\n    return this;\n  }\n  /**\n   * Sets the friction coefficient of the collider to be created.\n   *\n   * @param friction - The friction coefficient. Must be greater or equal to 0. This is generally smaller than 1. The\n   *                   higher the coefficient, the stronger friction forces will be for contacts with the collider\n   *                   being built.\n   */\n  setFriction(friction) {\n    this.friction = friction;\n    return this;\n  }\n  /**\n   * Sets the rule used to combine the friction coefficients of two colliders\n   * colliders involved in a contact.\n   *\n   * @param rule − The combine rule to apply.\n   */\n  setFrictionCombineRule(rule) {\n    this.frictionCombineRule = rule;\n    return this;\n  }\n  /**\n   * Sets the rule used to combine the restitution coefficients of two colliders\n   * colliders involved in a contact.\n   *\n   * @param rule − The combine rule to apply.\n   */\n  setRestitutionCombineRule(rule) {\n    this.restitutionCombineRule = rule;\n    return this;\n  }\n  /**\n   * Sets the collision groups used by this collider.\n   *\n   * Two colliders will interact iff. their collision groups are compatible.\n   * See the documentation of `InteractionGroups` for details on teh used bit pattern.\n   *\n   * @param groups - The collision groups used for the collider being built.\n   */\n  setCollisionGroups(groups) {\n    this.collisionGroups = groups;\n    return this;\n  }\n  /**\n   * Sets the solver groups used by this collider.\n   *\n   * Forces between two colliders in contact will be computed iff their solver\n   * groups are compatible.\n   * See the documentation of `InteractionGroups` for details on the used bit pattern.\n   *\n   * @param groups - The solver groups used for the collider being built.\n   */\n  setSolverGroups(groups) {\n    this.solverGroups = groups;\n    return this;\n  }\n  /**\n   * Set the physics hooks active for this collider.\n   *\n   * Use this to enable custom filtering rules for contact/intersecstion pairs involving this collider.\n   *\n   * @param activeHooks - The hooks active for contact/intersection pairs involving this collider.\n   */\n  setActiveHooks(activeHooks) {\n    this.activeHooks = activeHooks;\n    return this;\n  }\n  /**\n   * Set the events active for this collider.\n   *\n   * Use this to enable contact and/or intersection event reporting for this collider.\n   *\n   * @param activeEvents - The events active for contact/intersection pairs involving this collider.\n   */\n  setActiveEvents(activeEvents) {\n    this.activeEvents = activeEvents;\n    return this;\n  }\n  /**\n   * Set the collision types active for this collider.\n   *\n   * @param activeCollisionTypes - The hooks active for contact/intersection pairs involving this collider.\n   */\n  setActiveCollisionTypes(activeCollisionTypes) {\n    this.activeCollisionTypes = activeCollisionTypes;\n    return this;\n  }\n  /**\n   * Sets the total force magnitude beyond which a contact force event can be emitted.\n   *\n   * @param threshold - The force threshold to set.\n   */\n  setContactForceEventThreshold(threshold) {\n    this.contactForceEventThreshold = threshold;\n    return this;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/geometry/collider.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/geometry/collider_set.js":
/*!*********************************************************!*\
  !*** ./lib/@dimforge/rapier3d/geometry/collider_set.js ***!
  \*********************************************************/
/*! exports provided: ColliderSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColliderSet\", function() { return ColliderSet; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n/* harmony import */ var _coarena__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../coarena */ \"./lib/@dimforge/rapier3d/coarena.js\");\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n/* harmony import */ var _collider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./collider */ \"./lib/@dimforge/rapier3d/geometry/collider.js\");\n\n\n\n\n/**\n * A set of rigid bodies that can be handled by a physics pipeline.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `colliderSet.free()`\n * once you are done using it (and all the rigid-bodies it created).\n */\nclass ColliderSet {\n  constructor(raw) {\n    this.raw = raw || new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawColliderSet\"]();\n    this.map = new _coarena__WEBPACK_IMPORTED_MODULE_1__[\"Coarena\"]();\n    // Initialize the map with the existing elements, if any.\n    if (raw) {\n      raw.forEachColliderHandle(handle => {\n        this.map.set(handle, new _collider__WEBPACK_IMPORTED_MODULE_3__[\"Collider\"](this, handle, null));\n      });\n    }\n  }\n  /**\n   * Release the WASM memory occupied by this collider set.\n   */\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n    if (!!this.map) {\n      this.map.clear();\n    }\n    this.map = undefined;\n  }\n  /** @internal */\n  castClosure(f) {\n    return handle => {\n      if (!!f) {\n        return f(this.get(handle));\n      } else {\n        return undefined;\n      }\n    };\n  }\n  /** @internal */\n  finalizeDeserialization(bodies) {\n    this.map.forEach(collider => collider.finalizeDeserialization(bodies));\n  }\n  /**\n   * Creates a new collider and return its integer handle.\n   *\n   * @param bodies - The set of bodies where the collider's parent can be found.\n   * @param desc - The collider's description.\n   * @param parentHandle - The integer handle of the rigid-body this collider is attached to.\n   */\n  createCollider(bodies, desc, parentHandle) {\n    let hasParent = parentHandle != undefined && parentHandle != null;\n    if (hasParent && isNaN(parentHandle)) throw Error(\"Cannot create a collider with a parent rigid-body handle that is not a number.\");\n    let rawShape = desc.shape.intoRaw();\n    let rawTra = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(desc.translation);\n    let rawRot = _math__WEBPACK_IMPORTED_MODULE_2__[\"RotationOps\"].intoRaw(desc.rotation);\n    let rawCom = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(desc.centerOfMass);\n    // #if DIM3\n    let rawPrincipalInertia = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(desc.principalAngularInertia);\n    let rawInertiaFrame = _math__WEBPACK_IMPORTED_MODULE_2__[\"RotationOps\"].intoRaw(desc.angularInertiaLocalFrame);\n    // #endif\n    let handle = this.raw.createCollider(desc.enabled, rawShape, rawTra, rawRot, desc.massPropsMode, desc.mass, rawCom,\n    // #if DIM3\n    rawPrincipalInertia, rawInertiaFrame,\n    // #endif\n    desc.density, desc.friction, desc.restitution, desc.frictionCombineRule, desc.restitutionCombineRule, desc.isSensor, desc.collisionGroups, desc.solverGroups, desc.activeCollisionTypes, desc.activeHooks, desc.activeEvents, desc.contactForceEventThreshold, desc.contactSkin, hasParent, hasParent ? parentHandle : 0, bodies.raw);\n    rawShape.free();\n    rawTra.free();\n    rawRot.free();\n    rawCom.free();\n    // #if DIM3\n    rawPrincipalInertia.free();\n    rawInertiaFrame.free();\n    // #endif\n    let parent = hasParent ? bodies.get(parentHandle) : null;\n    let collider = new _collider__WEBPACK_IMPORTED_MODULE_3__[\"Collider\"](this, handle, parent, desc.shape);\n    this.map.set(handle, collider);\n    return collider;\n  }\n  /**\n   * Remove a collider from this set.\n   *\n   * @param handle - The integer handle of the collider to remove.\n   * @param bodies - The set of rigid-body containing the rigid-body the collider is attached to.\n   * @param wakeUp - If `true`, the rigid-body the removed collider is attached to will be woken-up automatically.\n   */\n  remove(handle, islands, bodies, wakeUp) {\n    this.raw.remove(handle, islands.raw, bodies.raw, wakeUp);\n    this.unmap(handle);\n  }\n  /**\n   * Internal function, do not call directly.\n   * @param handle\n   */\n  unmap(handle) {\n    this.map.delete(handle);\n  }\n  /**\n   * Gets the rigid-body with the given handle.\n   *\n   * @param handle - The handle of the rigid-body to retrieve.\n   */\n  get(handle) {\n    return this.map.get(handle);\n  }\n  /**\n   * The number of colliders on this set.\n   */\n  len() {\n    return this.map.len();\n  }\n  /**\n   * Does this set contain a collider with the given handle?\n   *\n   * @param handle - The collider handle to check.\n   */\n  contains(handle) {\n    return this.get(handle) != null;\n  }\n  /**\n   * Applies the given closure to each collider contained by this set.\n   *\n   * @param f - The closure to apply.\n   */\n  forEach(f) {\n    this.map.forEach(f);\n  }\n  /**\n   * Gets all colliders in the list.\n   *\n   * @returns collider list.\n   */\n  getAll() {\n    return this.map.getAll();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2dlb21ldHJ5L2NvbGxpZGVyX3NldC50cz8wYTVhIl0sIm5hbWVzIjpbIkNvbGxpZGVyU2V0IiwiY29uc3RydWN0b3IiLCJyYXciLCJSYXdDb2xsaWRlclNldCIsIm1hcCIsIkNvYXJlbmEiLCJmb3JFYWNoQ29sbGlkZXJIYW5kbGUiLCJoYW5kbGUiLCJzZXQiLCJDb2xsaWRlciIsImZyZWUiLCJ1bmRlZmluZWQiLCJjbGVhciIsImNhc3RDbG9zdXJlIiwiZiIsImdldCIsImZpbmFsaXplRGVzZXJpYWxpemF0aW9uIiwiYm9kaWVzIiwiZm9yRWFjaCIsImNvbGxpZGVyIiwiY3JlYXRlQ29sbGlkZXIiLCJkZXNjIiwicGFyZW50SGFuZGxlIiwiaGFzUGFyZW50IiwiaXNOYU4iLCJFcnJvciIsInJhd1NoYXBlIiwic2hhcGUiLCJpbnRvUmF3IiwicmF3VHJhIiwiVmVjdG9yT3BzIiwidHJhbnNsYXRpb24iLCJyYXdSb3QiLCJSb3RhdGlvbk9wcyIsInJvdGF0aW9uIiwicmF3Q29tIiwiY2VudGVyT2ZNYXNzIiwicmF3UHJpbmNpcGFsSW5lcnRpYSIsInByaW5jaXBhbEFuZ3VsYXJJbmVydGlhIiwicmF3SW5lcnRpYUZyYW1lIiwiYW5ndWxhckluZXJ0aWFMb2NhbEZyYW1lIiwiZW5hYmxlZCIsIm1hc3NQcm9wc01vZGUiLCJtYXNzIiwiZGVuc2l0eSIsImZyaWN0aW9uIiwicmVzdGl0dXRpb24iLCJmcmljdGlvbkNvbWJpbmVSdWxlIiwicmVzdGl0dXRpb25Db21iaW5lUnVsZSIsImlzU2Vuc29yIiwiY29sbGlzaW9uR3JvdXBzIiwic29sdmVyR3JvdXBzIiwiYWN0aXZlQ29sbGlzaW9uVHlwZXMiLCJhY3RpdmVIb29rcyIsImFjdGl2ZUV2ZW50cyIsImNvbnRhY3RGb3JjZUV2ZW50VGhyZXNob2xkIiwiY29udGFjdFNraW4iLCJwYXJlbnQiLCJyZW1vdmUiLCJpc2xhbmRzIiwid2FrZVVwIiwidW5tYXAiLCJkZWxldGUiLCJsZW4iLCJjb250YWlucyIsImdldEFsbCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXFDO0FBQ0g7QUFDWTtBQUNtQjtBQUlqRTs7Ozs7O0FBTU0sTUFBT0EsV0FBVztFQW1CcEJDLFlBQVlDLEdBQW9CO0lBQzVCLElBQUksQ0FBQ0EsR0FBRyxHQUFHQSxHQUFHLElBQUksSUFBSUMsbURBQWMsRUFBRTtJQUN0QyxJQUFJLENBQUNDLEdBQUcsR0FBRyxJQUFJQyxnREFBTyxFQUFZO0lBQ2xDO0lBQ0EsSUFBSUgsR0FBRyxFQUFFO01BQ0xBLEdBQUcsQ0FBQ0kscUJBQXFCLENBQUVDLE1BQXNCLElBQUk7UUFDakQsSUFBSSxDQUFDSCxHQUFHLENBQUNJLEdBQUcsQ0FBQ0QsTUFBTSxFQUFFLElBQUlFLGtEQUFRLENBQUMsSUFBSSxFQUFFRixNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7TUFDMUQsQ0FBQyxDQUFDOztFQUVWO0VBeEJBOzs7RUFHT0csSUFBSUEsQ0FBQTtJQUNQLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQ1IsR0FBRyxFQUFFO01BQ1osSUFBSSxDQUFDQSxHQUFHLENBQUNRLElBQUksRUFBRTs7SUFFbkIsSUFBSSxDQUFDUixHQUFHLEdBQUdTLFNBQVM7SUFFcEIsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDUCxHQUFHLEVBQUU7TUFDWixJQUFJLENBQUNBLEdBQUcsQ0FBQ1EsS0FBSyxFQUFFOztJQUVwQixJQUFJLENBQUNSLEdBQUcsR0FBR08sU0FBUztFQUN4QjtFQWFBO0VBQ09FLFdBQVdBLENBQ2RDLENBQStCO0lBRS9CLE9BQVFQLE1BQU0sSUFBSTtNQUNkLElBQUksQ0FBQyxDQUFDTyxDQUFDLEVBQUU7UUFDTCxPQUFPQSxDQUFDLENBQUMsSUFBSSxDQUFDQyxHQUFHLENBQUNSLE1BQU0sQ0FBQyxDQUFDO09BQzdCLE1BQU07UUFDSCxPQUFPSSxTQUFTOztJQUV4QixDQUFDO0VBQ0w7RUFFQTtFQUNPSyx1QkFBdUJBLENBQUNDLE1BQW9CO0lBQy9DLElBQUksQ0FBQ2IsR0FBRyxDQUFDYyxPQUFPLENBQUVDLFFBQVEsSUFDdEJBLFFBQVEsQ0FBQ0gsdUJBQXVCLENBQUNDLE1BQU0sQ0FBQyxDQUMzQztFQUNMO0VBRUE7Ozs7Ozs7RUFPT0csY0FBY0EsQ0FDakJILE1BQW9CLEVBQ3BCSSxJQUFrQixFQUNsQkMsWUFBNkI7SUFFN0IsSUFBSUMsU0FBUyxHQUFHRCxZQUFZLElBQUlYLFNBQVMsSUFBSVcsWUFBWSxJQUFJLElBQUk7SUFFakUsSUFBSUMsU0FBUyxJQUFJQyxLQUFLLENBQUNGLFlBQVksQ0FBQyxFQUNoQyxNQUFNRyxLQUFLLENBQ1AsZ0ZBQWdGLENBQ25GO0lBRUwsSUFBSUMsUUFBUSxHQUFHTCxJQUFJLENBQUNNLEtBQUssQ0FBQ0MsT0FBTyxFQUFFO0lBQ25DLElBQUlDLE1BQU0sR0FBR0MsK0NBQVMsQ0FBQ0YsT0FBTyxDQUFDUCxJQUFJLENBQUNVLFdBQVcsQ0FBQztJQUNoRCxJQUFJQyxNQUFNLEdBQUdDLGlEQUFXLENBQUNMLE9BQU8sQ0FBQ1AsSUFBSSxDQUFDYSxRQUFRLENBQUM7SUFDL0MsSUFBSUMsTUFBTSxHQUFHTCwrQ0FBUyxDQUFDRixPQUFPLENBQUNQLElBQUksQ0FBQ2UsWUFBWSxDQUFDO0lBRWpEO0lBQ0EsSUFBSUMsbUJBQW1CLEdBQUdQLCtDQUFTLENBQUNGLE9BQU8sQ0FDdkNQLElBQUksQ0FBQ2lCLHVCQUF1QixDQUMvQjtJQUNELElBQUlDLGVBQWUsR0FBR04saURBQVcsQ0FBQ0wsT0FBTyxDQUNyQ1AsSUFBSSxDQUFDbUIsd0JBQXdCLENBQ2hDO0lBQ0Q7SUFFQSxJQUFJakMsTUFBTSxHQUFHLElBQUksQ0FBQ0wsR0FBRyxDQUFDa0IsY0FBYyxDQUNoQ0MsSUFBSSxDQUFDb0IsT0FBTyxFQUNaZixRQUFRLEVBQ1JHLE1BQU0sRUFDTkcsTUFBTSxFQUNOWCxJQUFJLENBQUNxQixhQUFhLEVBQ2xCckIsSUFBSSxDQUFDc0IsSUFBSSxFQUNUUixNQUFNO0lBQ047SUFDQUUsbUJBQW1CLEVBQ25CRSxlQUFlO0lBQ2Y7SUFDQWxCLElBQUksQ0FBQ3VCLE9BQU8sRUFDWnZCLElBQUksQ0FBQ3dCLFFBQVEsRUFDYnhCLElBQUksQ0FBQ3lCLFdBQVcsRUFDaEJ6QixJQUFJLENBQUMwQixtQkFBbUIsRUFDeEIxQixJQUFJLENBQUMyQixzQkFBc0IsRUFDM0IzQixJQUFJLENBQUM0QixRQUFRLEVBQ2I1QixJQUFJLENBQUM2QixlQUFlLEVBQ3BCN0IsSUFBSSxDQUFDOEIsWUFBWSxFQUNqQjlCLElBQUksQ0FBQytCLG9CQUFvQixFQUN6Qi9CLElBQUksQ0FBQ2dDLFdBQVcsRUFDaEJoQyxJQUFJLENBQUNpQyxZQUFZLEVBQ2pCakMsSUFBSSxDQUFDa0MsMEJBQTBCLEVBQy9CbEMsSUFBSSxDQUFDbUMsV0FBVyxFQUNoQmpDLFNBQVMsRUFDVEEsU0FBUyxHQUFHRCxZQUFZLEdBQUcsQ0FBQyxFQUM1QkwsTUFBTSxDQUFDZixHQUFHLENBQ2I7SUFFRHdCLFFBQVEsQ0FBQ2hCLElBQUksRUFBRTtJQUNmbUIsTUFBTSxDQUFDbkIsSUFBSSxFQUFFO0lBQ2JzQixNQUFNLENBQUN0QixJQUFJLEVBQUU7SUFDYnlCLE1BQU0sQ0FBQ3pCLElBQUksRUFBRTtJQUViO0lBQ0EyQixtQkFBbUIsQ0FBQzNCLElBQUksRUFBRTtJQUMxQjZCLGVBQWUsQ0FBQzdCLElBQUksRUFBRTtJQUN0QjtJQUVBLElBQUkrQyxNQUFNLEdBQUdsQyxTQUFTLEdBQUdOLE1BQU0sQ0FBQ0YsR0FBRyxDQUFDTyxZQUFZLENBQUMsR0FBRyxJQUFJO0lBQ3hELElBQUlILFFBQVEsR0FBRyxJQUFJVixrREFBUSxDQUFDLElBQUksRUFBRUYsTUFBTSxFQUFFa0QsTUFBTSxFQUFFcEMsSUFBSSxDQUFDTSxLQUFLLENBQUM7SUFDN0QsSUFBSSxDQUFDdkIsR0FBRyxDQUFDSSxHQUFHLENBQUNELE1BQU0sRUFBRVksUUFBUSxDQUFDO0lBQzlCLE9BQU9BLFFBQVE7RUFDbkI7RUFFQTs7Ozs7OztFQU9PdUMsTUFBTUEsQ0FDVG5ELE1BQXNCLEVBQ3RCb0QsT0FBc0IsRUFDdEIxQyxNQUFvQixFQUNwQjJDLE1BQWU7SUFFZixJQUFJLENBQUMxRCxHQUFHLENBQUN3RCxNQUFNLENBQUNuRCxNQUFNLEVBQUVvRCxPQUFPLENBQUN6RCxHQUFHLEVBQUVlLE1BQU0sQ0FBQ2YsR0FBRyxFQUFFMEQsTUFBTSxDQUFDO0lBQ3hELElBQUksQ0FBQ0MsS0FBSyxDQUFDdEQsTUFBTSxDQUFDO0VBQ3RCO0VBRUE7Ozs7RUFJT3NELEtBQUtBLENBQUN0RCxNQUEwQjtJQUNuQyxJQUFJLENBQUNILEdBQUcsQ0FBQzBELE1BQU0sQ0FBQ3ZELE1BQU0sQ0FBQztFQUMzQjtFQUVBOzs7OztFQUtPUSxHQUFHQSxDQUFDUixNQUFzQjtJQUM3QixPQUFPLElBQUksQ0FBQ0gsR0FBRyxDQUFDVyxHQUFHLENBQUNSLE1BQU0sQ0FBQztFQUMvQjtFQUVBOzs7RUFHT3dELEdBQUdBLENBQUE7SUFDTixPQUFPLElBQUksQ0FBQzNELEdBQUcsQ0FBQzJELEdBQUcsRUFBRTtFQUN6QjtFQUVBOzs7OztFQUtPQyxRQUFRQSxDQUFDekQsTUFBc0I7SUFDbEMsT0FBTyxJQUFJLENBQUNRLEdBQUcsQ0FBQ1IsTUFBTSxDQUFDLElBQUksSUFBSTtFQUNuQztFQUVBOzs7OztFQUtPVyxPQUFPQSxDQUFDSixDQUErQjtJQUMxQyxJQUFJLENBQUNWLEdBQUcsQ0FBQ2MsT0FBTyxDQUFDSixDQUFDLENBQUM7RUFDdkI7RUFFQTs7Ozs7RUFLT21ELE1BQU1BLENBQUE7SUFDVCxPQUFPLElBQUksQ0FBQzdELEdBQUcsQ0FBQzZELE1BQU0sRUFBRTtFQUM1QiIsImZpbGUiOiIuL2xpYi9AZGltZm9yZ2UvcmFwaWVyM2QvZ2VvbWV0cnkvY29sbGlkZXJfc2V0LmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/geometry/collider_set.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/geometry/contact.js":
/*!****************************************************!*\
  !*** ./lib/@dimforge/rapier3d/geometry/contact.js ***!
  \****************************************************/
/*! exports provided: ShapeContact */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShapeContact\", function() { return ShapeContact; });\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n\n/**\n * The contact info between two shapes.\n */\nclass ShapeContact {\n  constructor(dist, point1, point2, normal1, normal2) {\n    this.distance = dist;\n    this.point1 = point1;\n    this.point2 = point2;\n    this.normal1 = normal1;\n    this.normal2 = normal2;\n  }\n  static fromRaw(raw) {\n    if (!raw) return null;\n    const result = new ShapeContact(raw.distance(), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(raw.point1()), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(raw.point2()), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(raw.normal1()), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(raw.normal2()));\n    raw.free();\n    return result;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2dlb21ldHJ5L2NvbnRhY3QudHM/OTVjYiJdLCJuYW1lcyI6WyJTaGFwZUNvbnRhY3QiLCJjb25zdHJ1Y3RvciIsImRpc3QiLCJwb2ludDEiLCJwb2ludDIiLCJub3JtYWwxIiwibm9ybWFsMiIsImRpc3RhbmNlIiwiZnJvbVJhdyIsInJhdyIsInJlc3VsdCIsIlZlY3Rvck9wcyIsImZyZWUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUF5QztBQUd6Qzs7O0FBR00sTUFBT0EsWUFBWTtFQTRCckJDLFlBQ0lDLElBQVksRUFDWkMsTUFBYyxFQUNkQyxNQUFjLEVBQ2RDLE9BQWUsRUFDZkMsT0FBZTtJQUVmLElBQUksQ0FBQ0MsUUFBUSxHQUFHTCxJQUFJO0lBQ3BCLElBQUksQ0FBQ0MsTUFBTSxHQUFHQSxNQUFNO0lBQ3BCLElBQUksQ0FBQ0MsTUFBTSxHQUFHQSxNQUFNO0lBQ3BCLElBQUksQ0FBQ0MsT0FBTyxHQUFHQSxPQUFPO0lBQ3RCLElBQUksQ0FBQ0MsT0FBTyxHQUFHQSxPQUFPO0VBQzFCO0VBRU8sT0FBT0UsT0FBT0EsQ0FBQ0MsR0FBb0I7SUFDdEMsSUFBSSxDQUFDQSxHQUFHLEVBQUUsT0FBTyxJQUFJO0lBRXJCLE1BQU1DLE1BQU0sR0FBRyxJQUFJVixZQUFZLENBQzNCUyxHQUFHLENBQUNGLFFBQVEsRUFBRSxFQUNkSSwrQ0FBUyxDQUFDSCxPQUFPLENBQUNDLEdBQUcsQ0FBQ04sTUFBTSxFQUFFLENBQUMsRUFDL0JRLCtDQUFTLENBQUNILE9BQU8sQ0FBQ0MsR0FBRyxDQUFDTCxNQUFNLEVBQUUsQ0FBQyxFQUMvQk8sK0NBQVMsQ0FBQ0gsT0FBTyxDQUFDQyxHQUFHLENBQUNKLE9BQU8sRUFBRSxDQUFDLEVBQ2hDTSwrQ0FBUyxDQUFDSCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0gsT0FBTyxFQUFFLENBQUMsQ0FDbkM7SUFDREcsR0FBRyxDQUFDRyxJQUFJLEVBQUU7SUFDVixPQUFPRixNQUFNO0VBQ2pCIiwiZmlsZSI6Ii4vbGliL0BkaW1mb3JnZS9yYXBpZXIzZC9nZW9tZXRyeS9jb250YWN0LmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/geometry/contact.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/geometry/feature.js":
/*!****************************************************!*\
  !*** ./lib/@dimforge/rapier3d/geometry/feature.js ***!
  \****************************************************/
/*! exports provided: FeatureType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FeatureType\", function() { return FeatureType; });\n// #if DIM3\nvar FeatureType;\n(function (FeatureType) {\n  FeatureType[FeatureType[\"Vertex\"] = 0] = \"Vertex\";\n  FeatureType[FeatureType[\"Edge\"] = 1] = \"Edge\";\n  FeatureType[FeatureType[\"Face\"] = 2] = \"Face\";\n  FeatureType[FeatureType[\"Unknown\"] = 3] = \"Unknown\";\n})(FeatureType || (FeatureType = {}));\n// #endif//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2dlb21ldHJ5L2ZlYXR1cmUudHM/ZDdhOCJdLCJuYW1lcyI6WyJGZWF0dXJlVHlwZSJdLCJtYXBwaW5ncyI6IkFBQ0E7QUFBQTtBQUFBO0FBQ0EsSUFBWUEsV0FLWDtBQUxELFdBQVlBLFdBQVc7RUFDbkJBLFdBQUEsQ0FBQUEsV0FBQSwwQkFBTTtFQUNOQSxXQUFBLENBQUFBLFdBQUEsc0JBQUk7RUFDSkEsV0FBQSxDQUFBQSxXQUFBLHNCQUFJO0VBQ0pBLFdBQUEsQ0FBQUEsV0FBQSw0QkFBTztBQUNYLENBQUMsRUFMV0EsV0FBVyxLQUFYQSxXQUFXO0FBTXZCIiwiZmlsZSI6Ii4vbGliL0BkaW1mb3JnZS9yYXBpZXIzZC9nZW9tZXRyeS9mZWF0dXJlLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/geometry/feature.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/geometry/index.js":
/*!**************************************************!*\
  !*** ./lib/@dimforge/rapier3d/geometry/index.js ***!
  \**************************************************/
/*! exports provided: BroadPhase, NarrowPhase, TempContactManifold, Shape, ShapeType, HeightFieldFlags, TriMeshFlags, Ball, HalfSpace, Cuboid, RoundCuboid, Capsule, Segment, Triangle, RoundTriangle, Polyline, TriMesh, ConvexPolyhedron, RoundConvexPolyhedron, Heightfield, Cylinder, RoundCylinder, Cone, RoundCone, ActiveCollisionTypes, Collider, MassPropsMode, ColliderDesc, ColliderSet, FeatureType, Ray, RayIntersection, RayColliderIntersection, RayColliderHit, PointProjection, PointColliderProjection, ShapeCastHit, ColliderShapeCastHit, ShapeContact */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _broad_phase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./broad_phase */ \"./lib/@dimforge/rapier3d/geometry/broad_phase.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BroadPhase\", function() { return _broad_phase__WEBPACK_IMPORTED_MODULE_0__[\"BroadPhase\"]; });\n\n/* harmony import */ var _narrow_phase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./narrow_phase */ \"./lib/@dimforge/rapier3d/geometry/narrow_phase.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NarrowPhase\", function() { return _narrow_phase__WEBPACK_IMPORTED_MODULE_1__[\"NarrowPhase\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TempContactManifold\", function() { return _narrow_phase__WEBPACK_IMPORTED_MODULE_1__[\"TempContactManifold\"]; });\n\n/* harmony import */ var _shape__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shape */ \"./lib/@dimforge/rapier3d/geometry/shape.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Shape\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"Shape\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ShapeType\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"ShapeType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"HeightFieldFlags\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"HeightFieldFlags\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TriMeshFlags\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"TriMeshFlags\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Ball\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"Ball\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"HalfSpace\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"HalfSpace\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Cuboid\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"Cuboid\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RoundCuboid\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"RoundCuboid\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Capsule\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"Capsule\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Segment\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"Segment\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Triangle\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"Triangle\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RoundTriangle\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"RoundTriangle\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Polyline\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"Polyline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TriMesh\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"TriMesh\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ConvexPolyhedron\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"ConvexPolyhedron\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RoundConvexPolyhedron\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"RoundConvexPolyhedron\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Heightfield\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"Heightfield\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Cylinder\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"Cylinder\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RoundCylinder\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"RoundCylinder\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Cone\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"Cone\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RoundCone\", function() { return _shape__WEBPACK_IMPORTED_MODULE_2__[\"RoundCone\"]; });\n\n/* harmony import */ var _collider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./collider */ \"./lib/@dimforge/rapier3d/geometry/collider.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ActiveCollisionTypes\", function() { return _collider__WEBPACK_IMPORTED_MODULE_3__[\"ActiveCollisionTypes\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Collider\", function() { return _collider__WEBPACK_IMPORTED_MODULE_3__[\"Collider\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MassPropsMode\", function() { return _collider__WEBPACK_IMPORTED_MODULE_3__[\"MassPropsMode\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColliderDesc\", function() { return _collider__WEBPACK_IMPORTED_MODULE_3__[\"ColliderDesc\"]; });\n\n/* harmony import */ var _collider_set__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./collider_set */ \"./lib/@dimforge/rapier3d/geometry/collider_set.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColliderSet\", function() { return _collider_set__WEBPACK_IMPORTED_MODULE_4__[\"ColliderSet\"]; });\n\n/* harmony import */ var _feature__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./feature */ \"./lib/@dimforge/rapier3d/geometry/feature.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FeatureType\", function() { return _feature__WEBPACK_IMPORTED_MODULE_5__[\"FeatureType\"]; });\n\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ray */ \"./lib/@dimforge/rapier3d/geometry/ray.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Ray\", function() { return _ray__WEBPACK_IMPORTED_MODULE_6__[\"Ray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RayIntersection\", function() { return _ray__WEBPACK_IMPORTED_MODULE_6__[\"RayIntersection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RayColliderIntersection\", function() { return _ray__WEBPACK_IMPORTED_MODULE_6__[\"RayColliderIntersection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RayColliderHit\", function() { return _ray__WEBPACK_IMPORTED_MODULE_6__[\"RayColliderHit\"]; });\n\n/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./point */ \"./lib/@dimforge/rapier3d/geometry/point.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PointProjection\", function() { return _point__WEBPACK_IMPORTED_MODULE_7__[\"PointProjection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PointColliderProjection\", function() { return _point__WEBPACK_IMPORTED_MODULE_7__[\"PointColliderProjection\"]; });\n\n/* harmony import */ var _toi__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./toi */ \"./lib/@dimforge/rapier3d/geometry/toi.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ShapeCastHit\", function() { return _toi__WEBPACK_IMPORTED_MODULE_8__[\"ShapeCastHit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColliderShapeCastHit\", function() { return _toi__WEBPACK_IMPORTED_MODULE_8__[\"ColliderShapeCastHit\"]; });\n\n/* harmony import */ var _interaction_groups__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./interaction_groups */ \"./lib/@dimforge/rapier3d/geometry/interaction_groups.js\");\n/* empty/unused harmony star reexport *//* harmony import */ var _contact__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./contact */ \"./lib/@dimforge/rapier3d/geometry/contact.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ShapeContact\", function() { return _contact__WEBPACK_IMPORTED_MODULE_10__[\"ShapeContact\"]; });\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2dlb21ldHJ5L2luZGV4LnRzPzljNmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTZCO0FBQ0M7QUFDUDtBQUNHO0FBQ0k7QUFDTDtBQUNKO0FBQ0U7QUFDRjtBQUNlIiwiZmlsZSI6Ii4vbGliL0BkaW1mb3JnZS9yYXBpZXIzZC9nZW9tZXRyeS9pbmRleC5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/geometry/index.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/geometry/interaction_groups.js":
/*!***************************************************************!*\
  !*** ./lib/@dimforge/rapier3d/geometry/interaction_groups.js ***!
  \***************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL2xpYi9AZGltZm9yZ2UvcmFwaWVyM2QvZ2VvbWV0cnkvaW50ZXJhY3Rpb25fZ3JvdXBzLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/geometry/interaction_groups.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/geometry/narrow_phase.js":
/*!*********************************************************!*\
  !*** ./lib/@dimforge/rapier3d/geometry/narrow_phase.js ***!
  \*********************************************************/
/*! exports provided: NarrowPhase, TempContactManifold */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NarrowPhase\", function() { return NarrowPhase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TempContactManifold\", function() { return TempContactManifold; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n\n\n/**\n * The narrow-phase used for precise collision-detection.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `narrowPhase.free()`\n * once you are done using it.\n */\nclass NarrowPhase {\n  constructor(raw) {\n    this.raw = raw || new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawNarrowPhase\"]();\n    this.tempManifold = new TempContactManifold(null);\n  }\n  /**\n   * Release the WASM memory occupied by this narrow-phase.\n   */\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n  }\n  /**\n   * Enumerates all the colliders potentially in contact with the given collider.\n   *\n   * @param collider1 - The second collider involved in the contact.\n   * @param f - Closure that will be called on each collider that is in contact with `collider1`.\n   */\n  contactPairsWith(collider1, f) {\n    this.raw.contact_pairs_with(collider1, f);\n  }\n  /**\n   * Enumerates all the colliders intersecting the given colliders, assuming one of them\n   * is a sensor.\n   */\n  intersectionPairsWith(collider1, f) {\n    this.raw.intersection_pairs_with(collider1, f);\n  }\n  /**\n   * Iterates through all the contact manifolds between the given pair of colliders.\n   *\n   * @param collider1 - The first collider involved in the contact.\n   * @param collider2 - The second collider involved in the contact.\n   * @param f - Closure that will be called on each contact manifold between the two colliders. If the second argument\n   *            passed to this closure is `true`, then the contact manifold data is flipped, i.e., methods like `localNormal1`\n   *            actually apply to the `collider2` and fields like `localNormal2` apply to the `collider1`.\n   */\n  contactPair(collider1, collider2, f) {\n    const rawPair = this.raw.contact_pair(collider1, collider2);\n    if (!!rawPair) {\n      const flipped = rawPair.collider1() != collider1;\n      let i;\n      for (i = 0; i < rawPair.numContactManifolds(); ++i) {\n        this.tempManifold.raw = rawPair.contactManifold(i);\n        if (!!this.tempManifold.raw) {\n          f(this.tempManifold, flipped);\n        }\n        // SAFETY: The RawContactManifold stores a raw pointer that will be invalidated\n        //         at the next timestep. So we must be sure to free the pair here\n        //         to avoid unsoundness in the Rust code.\n        this.tempManifold.free();\n      }\n      rawPair.free();\n    }\n  }\n  /**\n   * Returns `true` if `collider1` and `collider2` intersect and at least one of them is a sensor.\n   * @param collider1 − The first collider involved in the intersection.\n   * @param collider2 − The second collider involved in the intersection.\n   */\n  intersectionPair(collider1, collider2) {\n    return this.raw.intersection_pair(collider1, collider2);\n  }\n}\nclass TempContactManifold {\n  constructor(raw) {\n    this.raw = raw;\n  }\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n  }\n  normal() {\n    return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(this.raw.normal());\n  }\n  localNormal1() {\n    return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(this.raw.local_n1());\n  }\n  localNormal2() {\n    return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(this.raw.local_n2());\n  }\n  subshape1() {\n    return this.raw.subshape1();\n  }\n  subshape2() {\n    return this.raw.subshape2();\n  }\n  numContacts() {\n    return this.raw.num_contacts();\n  }\n  localContactPoint1(i) {\n    return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(this.raw.contact_local_p1(i));\n  }\n  localContactPoint2(i) {\n    return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(this.raw.contact_local_p2(i));\n  }\n  contactDist(i) {\n    return this.raw.contact_dist(i);\n  }\n  contactFid1(i) {\n    return this.raw.contact_fid1(i);\n  }\n  contactFid2(i) {\n    return this.raw.contact_fid2(i);\n  }\n  contactImpulse(i) {\n    return this.raw.contact_impulse(i);\n  }\n  // #if DIM3\n  contactTangentImpulseX(i) {\n    return this.raw.contact_tangent_impulse_x(i);\n  }\n  contactTangentImpulseY(i) {\n    return this.raw.contact_tangent_impulse_y(i);\n  }\n  // #endif\n  numSolverContacts() {\n    return this.raw.num_solver_contacts();\n  }\n  solverContactPoint(i) {\n    return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(this.raw.solver_contact_point(i));\n  }\n  solverContactDist(i) {\n    return this.raw.solver_contact_dist(i);\n  }\n  solverContactFriction(i) {\n    return this.raw.solver_contact_friction(i);\n  }\n  solverContactRestitution(i) {\n    return this.raw.solver_contact_restitution(i);\n  }\n  solverContactTangentVelocity(i) {\n    return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(this.raw.solver_contact_tangent_velocity(i));\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2dlb21ldHJ5L25hcnJvd19waGFzZS50cz9lMGY5Il0sIm5hbWVzIjpbIk5hcnJvd1BoYXNlIiwiY29uc3RydWN0b3IiLCJyYXciLCJSYXdOYXJyb3dQaGFzZSIsInRlbXBNYW5pZm9sZCIsIlRlbXBDb250YWN0TWFuaWZvbGQiLCJmcmVlIiwidW5kZWZpbmVkIiwiY29udGFjdFBhaXJzV2l0aCIsImNvbGxpZGVyMSIsImYiLCJjb250YWN0X3BhaXJzX3dpdGgiLCJpbnRlcnNlY3Rpb25QYWlyc1dpdGgiLCJpbnRlcnNlY3Rpb25fcGFpcnNfd2l0aCIsImNvbnRhY3RQYWlyIiwiY29sbGlkZXIyIiwicmF3UGFpciIsImNvbnRhY3RfcGFpciIsImZsaXBwZWQiLCJpIiwibnVtQ29udGFjdE1hbmlmb2xkcyIsImNvbnRhY3RNYW5pZm9sZCIsImludGVyc2VjdGlvblBhaXIiLCJpbnRlcnNlY3Rpb25fcGFpciIsIm5vcm1hbCIsIlZlY3Rvck9wcyIsImZyb21SYXciLCJsb2NhbE5vcm1hbDEiLCJsb2NhbF9uMSIsImxvY2FsTm9ybWFsMiIsImxvY2FsX24yIiwic3Vic2hhcGUxIiwic3Vic2hhcGUyIiwibnVtQ29udGFjdHMiLCJudW1fY29udGFjdHMiLCJsb2NhbENvbnRhY3RQb2ludDEiLCJjb250YWN0X2xvY2FsX3AxIiwibG9jYWxDb250YWN0UG9pbnQyIiwiY29udGFjdF9sb2NhbF9wMiIsImNvbnRhY3REaXN0IiwiY29udGFjdF9kaXN0IiwiY29udGFjdEZpZDEiLCJjb250YWN0X2ZpZDEiLCJjb250YWN0RmlkMiIsImNvbnRhY3RfZmlkMiIsImNvbnRhY3RJbXB1bHNlIiwiY29udGFjdF9pbXB1bHNlIiwiY29udGFjdFRhbmdlbnRJbXB1bHNlWCIsImNvbnRhY3RfdGFuZ2VudF9pbXB1bHNlX3giLCJjb250YWN0VGFuZ2VudEltcHVsc2VZIiwiY29udGFjdF90YW5nZW50X2ltcHVsc2VfeSIsIm51bVNvbHZlckNvbnRhY3RzIiwibnVtX3NvbHZlcl9jb250YWN0cyIsInNvbHZlckNvbnRhY3RQb2ludCIsInNvbHZlcl9jb250YWN0X3BvaW50Iiwic29sdmVyQ29udGFjdERpc3QiLCJzb2x2ZXJfY29udGFjdF9kaXN0Iiwic29sdmVyQ29udGFjdEZyaWN0aW9uIiwic29sdmVyX2NvbnRhY3RfZnJpY3Rpb24iLCJzb2x2ZXJDb250YWN0UmVzdGl0dXRpb24iLCJzb2x2ZXJfY29udGFjdF9yZXN0aXR1dGlvbiIsInNvbHZlckNvbnRhY3RUYW5nZW50VmVsb2NpdHkiLCJzb2x2ZXJfY29udGFjdF90YW5nZW50X3ZlbG9jaXR5Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXlEO0FBRWhCO0FBRXpDOzs7Ozs7QUFNTSxNQUFPQSxXQUFXO0VBY3BCQyxZQUFZQyxHQUFvQjtJQUM1QixJQUFJLENBQUNBLEdBQUcsR0FBR0EsR0FBRyxJQUFJLElBQUlDLG1EQUFjLEVBQUU7SUFDdEMsSUFBSSxDQUFDQyxZQUFZLEdBQUcsSUFBSUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDO0VBQ3JEO0VBYkE7OztFQUdPQyxJQUFJQSxDQUFBO0lBQ1AsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDSixHQUFHLEVBQUU7TUFDWixJQUFJLENBQUNBLEdBQUcsQ0FBQ0ksSUFBSSxFQUFFOztJQUVuQixJQUFJLENBQUNKLEdBQUcsR0FBR0ssU0FBUztFQUN4QjtFQU9BOzs7Ozs7RUFNT0MsZ0JBQWdCQSxDQUNuQkMsU0FBeUIsRUFDekJDLENBQXNDO0lBRXRDLElBQUksQ0FBQ1IsR0FBRyxDQUFDUyxrQkFBa0IsQ0FBQ0YsU0FBUyxFQUFFQyxDQUFDLENBQUM7RUFDN0M7RUFFQTs7OztFQUlPRSxxQkFBcUJBLENBQ3hCSCxTQUF5QixFQUN6QkMsQ0FBc0M7SUFFdEMsSUFBSSxDQUFDUixHQUFHLENBQUNXLHVCQUF1QixDQUFDSixTQUFTLEVBQUVDLENBQUMsQ0FBQztFQUNsRDtFQUVBOzs7Ozs7Ozs7RUFTT0ksV0FBV0EsQ0FDZEwsU0FBeUIsRUFDekJNLFNBQXlCLEVBQ3pCTCxDQUE0RDtJQUU1RCxNQUFNTSxPQUFPLEdBQUcsSUFBSSxDQUFDZCxHQUFHLENBQUNlLFlBQVksQ0FBQ1IsU0FBUyxFQUFFTSxTQUFTLENBQUM7SUFFM0QsSUFBSSxDQUFDLENBQUNDLE9BQU8sRUFBRTtNQUNYLE1BQU1FLE9BQU8sR0FBR0YsT0FBTyxDQUFDUCxTQUFTLEVBQUUsSUFBSUEsU0FBUztNQUVoRCxJQUFJVSxDQUFDO01BQ0wsS0FBS0EsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHSCxPQUFPLENBQUNJLG1CQUFtQixFQUFFLEVBQUUsRUFBRUQsQ0FBQyxFQUFFO1FBQ2hELElBQUksQ0FBQ2YsWUFBWSxDQUFDRixHQUFHLEdBQUdjLE9BQU8sQ0FBQ0ssZUFBZSxDQUFDRixDQUFDLENBQUM7UUFDbEQsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDZixZQUFZLENBQUNGLEdBQUcsRUFBRTtVQUN6QlEsQ0FBQyxDQUFDLElBQUksQ0FBQ04sWUFBWSxFQUFFYyxPQUFPLENBQUM7O1FBR2pDO1FBQ0E7UUFDQTtRQUNBLElBQUksQ0FBQ2QsWUFBWSxDQUFDRSxJQUFJLEVBQUU7O01BRTVCVSxPQUFPLENBQUNWLElBQUksRUFBRTs7RUFFdEI7RUFFQTs7Ozs7RUFLT2dCLGdCQUFnQkEsQ0FDbkJiLFNBQXlCLEVBQ3pCTSxTQUF5QjtJQUV6QixPQUFPLElBQUksQ0FBQ2IsR0FBRyxDQUFDcUIsaUJBQWlCLENBQUNkLFNBQVMsRUFBRU0sU0FBUyxDQUFDO0VBQzNEOztBQUdFLE1BQU9WLG1CQUFtQjtFQVU1QkosWUFBWUMsR0FBdUI7SUFDL0IsSUFBSSxDQUFDQSxHQUFHLEdBQUdBLEdBQUc7RUFDbEI7RUFUT0ksSUFBSUEsQ0FBQTtJQUNQLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQ0osR0FBRyxFQUFFO01BQ1osSUFBSSxDQUFDQSxHQUFHLENBQUNJLElBQUksRUFBRTs7SUFFbkIsSUFBSSxDQUFDSixHQUFHLEdBQUdLLFNBQVM7RUFDeEI7RUFNT2lCLE1BQU1BLENBQUE7SUFDVCxPQUFPQywrQ0FBUyxDQUFDQyxPQUFPLENBQUMsSUFBSSxDQUFDeEIsR0FBRyxDQUFDc0IsTUFBTSxFQUFFLENBQUM7RUFDL0M7RUFFT0csWUFBWUEsQ0FBQTtJQUNmLE9BQU9GLCtDQUFTLENBQUNDLE9BQU8sQ0FBQyxJQUFJLENBQUN4QixHQUFHLENBQUMwQixRQUFRLEVBQUUsQ0FBQztFQUNqRDtFQUVPQyxZQUFZQSxDQUFBO0lBQ2YsT0FBT0osK0NBQVMsQ0FBQ0MsT0FBTyxDQUFDLElBQUksQ0FBQ3hCLEdBQUcsQ0FBQzRCLFFBQVEsRUFBRSxDQUFDO0VBQ2pEO0VBRU9DLFNBQVNBLENBQUE7SUFDWixPQUFPLElBQUksQ0FBQzdCLEdBQUcsQ0FBQzZCLFNBQVMsRUFBRTtFQUMvQjtFQUVPQyxTQUFTQSxDQUFBO0lBQ1osT0FBTyxJQUFJLENBQUM5QixHQUFHLENBQUM4QixTQUFTLEVBQUU7RUFDL0I7RUFFT0MsV0FBV0EsQ0FBQTtJQUNkLE9BQU8sSUFBSSxDQUFDL0IsR0FBRyxDQUFDZ0MsWUFBWSxFQUFFO0VBQ2xDO0VBRU9DLGtCQUFrQkEsQ0FBQ2hCLENBQVM7SUFDL0IsT0FBT00sK0NBQVMsQ0FBQ0MsT0FBTyxDQUFDLElBQUksQ0FBQ3hCLEdBQUcsQ0FBQ2tDLGdCQUFnQixDQUFDakIsQ0FBQyxDQUFDLENBQUM7RUFDMUQ7RUFFT2tCLGtCQUFrQkEsQ0FBQ2xCLENBQVM7SUFDL0IsT0FBT00sK0NBQVMsQ0FBQ0MsT0FBTyxDQUFDLElBQUksQ0FBQ3hCLEdBQUcsQ0FBQ29DLGdCQUFnQixDQUFDbkIsQ0FBQyxDQUFDLENBQUM7RUFDMUQ7RUFFT29CLFdBQVdBLENBQUNwQixDQUFTO0lBQ3hCLE9BQU8sSUFBSSxDQUFDakIsR0FBRyxDQUFDc0MsWUFBWSxDQUFDckIsQ0FBQyxDQUFDO0VBQ25DO0VBRU9zQixXQUFXQSxDQUFDdEIsQ0FBUztJQUN4QixPQUFPLElBQUksQ0FBQ2pCLEdBQUcsQ0FBQ3dDLFlBQVksQ0FBQ3ZCLENBQUMsQ0FBQztFQUNuQztFQUVPd0IsV0FBV0EsQ0FBQ3hCLENBQVM7SUFDeEIsT0FBTyxJQUFJLENBQUNqQixHQUFHLENBQUMwQyxZQUFZLENBQUN6QixDQUFDLENBQUM7RUFDbkM7RUFFTzBCLGNBQWNBLENBQUMxQixDQUFTO0lBQzNCLE9BQU8sSUFBSSxDQUFDakIsR0FBRyxDQUFDNEMsZUFBZSxDQUFDM0IsQ0FBQyxDQUFDO0VBQ3RDO0VBR0E7RUFDTzRCLHNCQUFzQkEsQ0FBQzVCLENBQVM7SUFDbkMsT0FBTyxJQUFJLENBQUNqQixHQUFHLENBQUM4Qyx5QkFBeUIsQ0FBQzdCLENBQUMsQ0FBQztFQUNoRDtFQUVPOEIsc0JBQXNCQSxDQUFDOUIsQ0FBUztJQUNuQyxPQUFPLElBQUksQ0FBQ2pCLEdBQUcsQ0FBQ2dELHlCQUF5QixDQUFDL0IsQ0FBQyxDQUFDO0VBQ2hEO0VBQ0E7RUFFT2dDLGlCQUFpQkEsQ0FBQTtJQUNwQixPQUFPLElBQUksQ0FBQ2pELEdBQUcsQ0FBQ2tELG1CQUFtQixFQUFFO0VBQ3pDO0VBRU9DLGtCQUFrQkEsQ0FBQ2xDLENBQVM7SUFDL0IsT0FBT00sK0NBQVMsQ0FBQ0MsT0FBTyxDQUFDLElBQUksQ0FBQ3hCLEdBQUcsQ0FBQ29ELG9CQUFvQixDQUFDbkMsQ0FBQyxDQUFDLENBQUM7RUFDOUQ7RUFFT29DLGlCQUFpQkEsQ0FBQ3BDLENBQVM7SUFDOUIsT0FBTyxJQUFJLENBQUNqQixHQUFHLENBQUNzRCxtQkFBbUIsQ0FBQ3JDLENBQUMsQ0FBQztFQUMxQztFQUVPc0MscUJBQXFCQSxDQUFDdEMsQ0FBUztJQUNsQyxPQUFPLElBQUksQ0FBQ2pCLEdBQUcsQ0FBQ3dELHVCQUF1QixDQUFDdkMsQ0FBQyxDQUFDO0VBQzlDO0VBRU93Qyx3QkFBd0JBLENBQUN4QyxDQUFTO0lBQ3JDLE9BQU8sSUFBSSxDQUFDakIsR0FBRyxDQUFDMEQsMEJBQTBCLENBQUN6QyxDQUFDLENBQUM7RUFDakQ7RUFFTzBDLDRCQUE0QkEsQ0FBQzFDLENBQVM7SUFDekMsT0FBT00sK0NBQVMsQ0FBQ0MsT0FBTyxDQUFDLElBQUksQ0FBQ3hCLEdBQUcsQ0FBQzRELCtCQUErQixDQUFDM0MsQ0FBQyxDQUFDLENBQUM7RUFDekUiLCJmaWxlIjoiLi9saWIvQGRpbWZvcmdlL3JhcGllcjNkL2dlb21ldHJ5L25hcnJvd19waGFzZS5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/geometry/narrow_phase.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/geometry/point.js":
/*!**************************************************!*\
  !*** ./lib/@dimforge/rapier3d/geometry/point.js ***!
  \**************************************************/
/*! exports provided: PointProjection, PointColliderProjection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PointProjection\", function() { return PointProjection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PointColliderProjection\", function() { return PointColliderProjection; });\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n/* harmony import */ var _feature__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./feature */ \"./lib/@dimforge/rapier3d/geometry/feature.js\");\n\n\n/**\n * The projection of a point on a collider.\n */\nclass PointProjection {\n  constructor(point, isInside) {\n    this.point = point;\n    this.isInside = isInside;\n  }\n  static fromRaw(raw) {\n    if (!raw) return null;\n    const result = new PointProjection(_math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(raw.point()), raw.isInside());\n    raw.free();\n    return result;\n  }\n}\n/**\n * The projection of a point on a collider (includes the collider handle).\n */\nclass PointColliderProjection {\n  constructor(collider, point, isInside, featureType, featureId) {\n    /**\n     * The type of the geometric feature the point was projected on.\n     */\n    this.featureType = _feature__WEBPACK_IMPORTED_MODULE_1__[\"FeatureType\"].Unknown;\n    /**\n     * The id of the geometric feature the point was projected on.\n     */\n    this.featureId = undefined;\n    this.collider = collider;\n    this.point = point;\n    this.isInside = isInside;\n    if (featureId !== undefined) this.featureId = featureId;\n    if (featureType !== undefined) this.featureType = featureType;\n  }\n  static fromRaw(colliderSet, raw) {\n    if (!raw) return null;\n    const result = new PointColliderProjection(colliderSet.get(raw.colliderHandle()), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(raw.point()), raw.isInside(), raw.featureType(), raw.featureId());\n    raw.free();\n    return result;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2dlb21ldHJ5L3BvaW50LnRzPzk0OWMiXSwibmFtZXMiOlsiUG9pbnRQcm9qZWN0aW9uIiwiY29uc3RydWN0b3IiLCJwb2ludCIsImlzSW5zaWRlIiwiZnJvbVJhdyIsInJhdyIsInJlc3VsdCIsIlZlY3Rvck9wcyIsImZyZWUiLCJQb2ludENvbGxpZGVyUHJvamVjdGlvbiIsImNvbGxpZGVyIiwiZmVhdHVyZVR5cGUiLCJmZWF0dXJlSWQiLCJGZWF0dXJlVHlwZSIsIlVua25vd24iLCJ1bmRlZmluZWQiLCJjb2xsaWRlclNldCIsImdldCIsImNvbGxpZGVySGFuZGxlIl0sIm1hcHBpbmdzIjoiQUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXlDO0FBTUo7QUFHckM7OztBQUdNLE1BQU9BLGVBQWU7RUFVeEJDLFlBQVlDLEtBQWEsRUFBRUMsUUFBaUI7SUFDeEMsSUFBSSxDQUFDRCxLQUFLLEdBQUdBLEtBQUs7SUFDbEIsSUFBSSxDQUFDQyxRQUFRLEdBQUdBLFFBQVE7RUFDNUI7RUFFTyxPQUFPQyxPQUFPQSxDQUFDQyxHQUF1QjtJQUN6QyxJQUFJLENBQUNBLEdBQUcsRUFBRSxPQUFPLElBQUk7SUFFckIsTUFBTUMsTUFBTSxHQUFHLElBQUlOLGVBQWUsQ0FDOUJPLCtDQUFTLENBQUNILE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSCxLQUFLLEVBQUUsQ0FBQyxFQUM5QkcsR0FBRyxDQUFDRixRQUFRLEVBQUUsQ0FDakI7SUFDREUsR0FBRyxDQUFDRyxJQUFJLEVBQUU7SUFDVixPQUFPRixNQUFNO0VBQ2pCOztBQUdKOzs7QUFHTSxNQUFPRyx1QkFBdUI7RUF3QmhDUixZQUNJUyxRQUFrQixFQUNsQlIsS0FBYSxFQUNiQyxRQUFpQixFQUNqQlEsV0FBeUIsRUFDekJDLFNBQWtCO0lBZnRCOzs7SUFHQSxLQUFBRCxXQUFXLEdBQUdFLG9EQUFXLENBQUNDLE9BQU87SUFFakM7OztJQUdBLEtBQUFGLFNBQVMsR0FBdUJHLFNBQVM7SUFTckMsSUFBSSxDQUFDTCxRQUFRLEdBQUdBLFFBQVE7SUFDeEIsSUFBSSxDQUFDUixLQUFLLEdBQUdBLEtBQUs7SUFDbEIsSUFBSSxDQUFDQyxRQUFRLEdBQUdBLFFBQVE7SUFDeEIsSUFBSVMsU0FBUyxLQUFLRyxTQUFTLEVBQUUsSUFBSSxDQUFDSCxTQUFTLEdBQUdBLFNBQVM7SUFDdkQsSUFBSUQsV0FBVyxLQUFLSSxTQUFTLEVBQUUsSUFBSSxDQUFDSixXQUFXLEdBQUdBLFdBQVc7RUFDakU7RUFFTyxPQUFPUCxPQUFPQSxDQUNqQlksV0FBd0IsRUFDeEJYLEdBQStCO0lBRS9CLElBQUksQ0FBQ0EsR0FBRyxFQUFFLE9BQU8sSUFBSTtJQUVyQixNQUFNQyxNQUFNLEdBQUcsSUFBSUcsdUJBQXVCLENBQ3RDTyxXQUFXLENBQUNDLEdBQUcsQ0FBQ1osR0FBRyxDQUFDYSxjQUFjLEVBQUUsQ0FBQyxFQUNyQ1gsK0NBQVMsQ0FBQ0gsT0FBTyxDQUFDQyxHQUFHLENBQUNILEtBQUssRUFBRSxDQUFDLEVBQzlCRyxHQUFHLENBQUNGLFFBQVEsRUFBRSxFQUNkRSxHQUFHLENBQUNNLFdBQVcsRUFBMkIsRUFDMUNOLEdBQUcsQ0FBQ08sU0FBUyxFQUFFLENBQ2xCO0lBQ0RQLEdBQUcsQ0FBQ0csSUFBSSxFQUFFO0lBQ1YsT0FBT0YsTUFBTTtFQUNqQiIsImZpbGUiOiIuL2xpYi9AZGltZm9yZ2UvcmFwaWVyM2QvZ2VvbWV0cnkvcG9pbnQuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/geometry/point.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/geometry/ray.js":
/*!************************************************!*\
  !*** ./lib/@dimforge/rapier3d/geometry/ray.js ***!
  \************************************************/
/*! exports provided: Ray, RayIntersection, RayColliderIntersection, RayColliderHit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Ray\", function() { return Ray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RayIntersection\", function() { return RayIntersection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RayColliderIntersection\", function() { return RayColliderIntersection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RayColliderHit\", function() { return RayColliderHit; });\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n/* harmony import */ var _feature__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./feature */ \"./lib/@dimforge/rapier3d/geometry/feature.js\");\n\n\n/**\n * A ray. This is a directed half-line.\n */\nclass Ray {\n  /**\n   * Builds a ray from its origin and direction.\n   *\n   * @param origin - The ray's starting point.\n   * @param dir - The ray's direction of propagation.\n   */\n  constructor(origin, dir) {\n    this.origin = origin;\n    this.dir = dir;\n  }\n  pointAt(t) {\n    return {\n      x: this.origin.x + this.dir.x * t,\n      y: this.origin.y + this.dir.y * t,\n      // #if DIM3\n      z: this.origin.z + this.dir.z * t\n      // #endif\n    };\n  }\n}\n/**\n * The intersection between a ray and a collider.\n */\nclass RayIntersection {\n  constructor(timeOfImpact, normal, featureType, featureId) {\n    /**\n     * The type of the geometric feature the point was projected on.\n     */\n    this.featureType = _feature__WEBPACK_IMPORTED_MODULE_1__[\"FeatureType\"].Unknown;\n    /**\n     * The id of the geometric feature the point was projected on.\n     */\n    this.featureId = undefined;\n    this.timeOfImpact = timeOfImpact;\n    this.normal = normal;\n    if (featureId !== undefined) this.featureId = featureId;\n    if (featureType !== undefined) this.featureType = featureType;\n  }\n  static fromRaw(raw) {\n    if (!raw) return null;\n    const result = new RayIntersection(raw.time_of_impact(), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(raw.normal()), raw.featureType(), raw.featureId());\n    raw.free();\n    return result;\n  }\n}\n/**\n * The intersection between a ray and a collider (includes the collider handle).\n */\nclass RayColliderIntersection {\n  constructor(collider, timeOfImpact, normal, featureType, featureId) {\n    /**\n     * The type of the geometric feature the point was projected on.\n     */\n    this.featureType = _feature__WEBPACK_IMPORTED_MODULE_1__[\"FeatureType\"].Unknown;\n    /**\n     * The id of the geometric feature the point was projected on.\n     */\n    this.featureId = undefined;\n    this.collider = collider;\n    this.timeOfImpact = timeOfImpact;\n    this.normal = normal;\n    if (featureId !== undefined) this.featureId = featureId;\n    if (featureType !== undefined) this.featureType = featureType;\n  }\n  static fromRaw(colliderSet, raw) {\n    if (!raw) return null;\n    const result = new RayColliderIntersection(colliderSet.get(raw.colliderHandle()), raw.time_of_impact(), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(raw.normal()), raw.featureType(), raw.featureId());\n    raw.free();\n    return result;\n  }\n}\n/**\n * The time of impact between a ray and a collider.\n */\nclass RayColliderHit {\n  constructor(collider, timeOfImpact) {\n    this.collider = collider;\n    this.timeOfImpact = timeOfImpact;\n  }\n  static fromRaw(colliderSet, raw) {\n    if (!raw) return null;\n    const result = new RayColliderHit(colliderSet.get(raw.colliderHandle()), raw.timeOfImpact());\n    raw.free();\n    return result;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2dlb21ldHJ5L3JheS50cz9hMmM3Il0sIm5hbWVzIjpbIlJheSIsImNvbnN0cnVjdG9yIiwib3JpZ2luIiwiZGlyIiwicG9pbnRBdCIsInQiLCJ4IiwieSIsInoiLCJSYXlJbnRlcnNlY3Rpb24iLCJ0aW1lT2ZJbXBhY3QiLCJub3JtYWwiLCJmZWF0dXJlVHlwZSIsImZlYXR1cmVJZCIsIkZlYXR1cmVUeXBlIiwiVW5rbm93biIsInVuZGVmaW5lZCIsImZyb21SYXciLCJyYXciLCJyZXN1bHQiLCJ0aW1lX29mX2ltcGFjdCIsIlZlY3Rvck9wcyIsImZyZWUiLCJSYXlDb2xsaWRlckludGVyc2VjdGlvbiIsImNvbGxpZGVyIiwiY29sbGlkZXJTZXQiLCJnZXQiLCJjb2xsaWRlckhhbmRsZSIsIlJheUNvbGxpZGVySGl0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUF5QztBQVFKO0FBR3JDOzs7QUFHTSxNQUFPQSxHQUFHO0VBVVo7Ozs7OztFQU1BQyxZQUFZQyxNQUFjLEVBQUVDLEdBQVc7SUFDbkMsSUFBSSxDQUFDRCxNQUFNLEdBQUdBLE1BQU07SUFDcEIsSUFBSSxDQUFDQyxHQUFHLEdBQUdBLEdBQUc7RUFDbEI7RUFFT0MsT0FBT0EsQ0FBQ0MsQ0FBUztJQUNwQixPQUFPO01BQ0hDLENBQUMsRUFBRSxJQUFJLENBQUNKLE1BQU0sQ0FBQ0ksQ0FBQyxHQUFHLElBQUksQ0FBQ0gsR0FBRyxDQUFDRyxDQUFDLEdBQUdELENBQUM7TUFDakNFLENBQUMsRUFBRSxJQUFJLENBQUNMLE1BQU0sQ0FBQ0ssQ0FBQyxHQUFHLElBQUksQ0FBQ0osR0FBRyxDQUFDSSxDQUFDLEdBQUdGLENBQUM7TUFDakM7TUFDQUcsQ0FBQyxFQUFFLElBQUksQ0FBQ04sTUFBTSxDQUFDTSxDQUFDLEdBQUcsSUFBSSxDQUFDTCxHQUFHLENBQUNLLENBQUMsR0FBR0g7TUFDaEM7S0FDSDtFQUNMOztBQUdKOzs7QUFHTSxNQUFPSSxlQUFlO0VBc0J4QlIsWUFDSVMsWUFBb0IsRUFDcEJDLE1BQWMsRUFDZEMsV0FBeUIsRUFDekJDLFNBQWtCO0lBZHRCOzs7SUFHQSxLQUFBRCxXQUFXLEdBQUdFLG9EQUFXLENBQUNDLE9BQU87SUFFakM7OztJQUdBLEtBQUFGLFNBQVMsR0FBdUJHLFNBQVM7SUFRckMsSUFBSSxDQUFDTixZQUFZLEdBQUdBLFlBQVk7SUFDaEMsSUFBSSxDQUFDQyxNQUFNLEdBQUdBLE1BQU07SUFDcEIsSUFBSUUsU0FBUyxLQUFLRyxTQUFTLEVBQUUsSUFBSSxDQUFDSCxTQUFTLEdBQUdBLFNBQVM7SUFDdkQsSUFBSUQsV0FBVyxLQUFLSSxTQUFTLEVBQUUsSUFBSSxDQUFDSixXQUFXLEdBQUdBLFdBQVc7RUFDakU7RUFFTyxPQUFPSyxPQUFPQSxDQUFDQyxHQUF1QjtJQUN6QyxJQUFJLENBQUNBLEdBQUcsRUFBRSxPQUFPLElBQUk7SUFFckIsTUFBTUMsTUFBTSxHQUFHLElBQUlWLGVBQWUsQ0FDOUJTLEdBQUcsQ0FBQ0UsY0FBYyxFQUFFLEVBQ3BCQywrQ0FBUyxDQUFDSixPQUFPLENBQUNDLEdBQUcsQ0FBQ1AsTUFBTSxFQUFFLENBQUMsRUFDL0JPLEdBQUcsQ0FBQ04sV0FBVyxFQUEyQixFQUMxQ00sR0FBRyxDQUFDTCxTQUFTLEVBQUUsQ0FDbEI7SUFDREssR0FBRyxDQUFDSSxJQUFJLEVBQUU7SUFDVixPQUFPSCxNQUFNO0VBQ2pCOztBQUdKOzs7QUFHTSxNQUFPSSx1QkFBdUI7RUEwQmhDdEIsWUFDSXVCLFFBQWtCLEVBQ2xCZCxZQUFvQixFQUNwQkMsTUFBYyxFQUNkQyxXQUF5QixFQUN6QkMsU0FBa0I7SUFmdEI7OztJQUdBLEtBQUFELFdBQVcsR0FBR0Usb0RBQVcsQ0FBQ0MsT0FBTztJQUVqQzs7O0lBR0EsS0FBQUYsU0FBUyxHQUF1QkcsU0FBUztJQVNyQyxJQUFJLENBQUNRLFFBQVEsR0FBR0EsUUFBUTtJQUN4QixJQUFJLENBQUNkLFlBQVksR0FBR0EsWUFBWTtJQUNoQyxJQUFJLENBQUNDLE1BQU0sR0FBR0EsTUFBTTtJQUNwQixJQUFJRSxTQUFTLEtBQUtHLFNBQVMsRUFBRSxJQUFJLENBQUNILFNBQVMsR0FBR0EsU0FBUztJQUN2RCxJQUFJRCxXQUFXLEtBQUtJLFNBQVMsRUFBRSxJQUFJLENBQUNKLFdBQVcsR0FBR0EsV0FBVztFQUNqRTtFQUVPLE9BQU9LLE9BQU9BLENBQ2pCUSxXQUF3QixFQUN4QlAsR0FBK0I7SUFFL0IsSUFBSSxDQUFDQSxHQUFHLEVBQUUsT0FBTyxJQUFJO0lBRXJCLE1BQU1DLE1BQU0sR0FBRyxJQUFJSSx1QkFBdUIsQ0FDdENFLFdBQVcsQ0FBQ0MsR0FBRyxDQUFDUixHQUFHLENBQUNTLGNBQWMsRUFBRSxDQUFDLEVBQ3JDVCxHQUFHLENBQUNFLGNBQWMsRUFBRSxFQUNwQkMsK0NBQVMsQ0FBQ0osT0FBTyxDQUFDQyxHQUFHLENBQUNQLE1BQU0sRUFBRSxDQUFDLEVBQy9CTyxHQUFHLENBQUNOLFdBQVcsRUFBMkIsRUFDMUNNLEdBQUcsQ0FBQ0wsU0FBUyxFQUFFLENBQ2xCO0lBQ0RLLEdBQUcsQ0FBQ0ksSUFBSSxFQUFFO0lBQ1YsT0FBT0gsTUFBTTtFQUNqQjs7QUFHSjs7O0FBR00sTUFBT1MsY0FBYztFQVl2QjNCLFlBQVl1QixRQUFrQixFQUFFZCxZQUFvQjtJQUNoRCxJQUFJLENBQUNjLFFBQVEsR0FBR0EsUUFBUTtJQUN4QixJQUFJLENBQUNkLFlBQVksR0FBR0EsWUFBWTtFQUNwQztFQUVPLE9BQU9PLE9BQU9BLENBQ2pCUSxXQUF3QixFQUN4QlAsR0FBc0I7SUFFdEIsSUFBSSxDQUFDQSxHQUFHLEVBQUUsT0FBTyxJQUFJO0lBRXJCLE1BQU1DLE1BQU0sR0FBRyxJQUFJUyxjQUFjLENBQzdCSCxXQUFXLENBQUNDLEdBQUcsQ0FBQ1IsR0FBRyxDQUFDUyxjQUFjLEVBQUUsQ0FBQyxFQUNyQ1QsR0FBRyxDQUFDUixZQUFZLEVBQUUsQ0FDckI7SUFDRFEsR0FBRyxDQUFDSSxJQUFJLEVBQUU7SUFDVixPQUFPSCxNQUFNO0VBQ2pCIiwiZmlsZSI6Ii4vbGliL0BkaW1mb3JnZS9yYXBpZXIzZC9nZW9tZXRyeS9yYXkuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/geometry/ray.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/geometry/shape.js":
/*!**************************************************!*\
  !*** ./lib/@dimforge/rapier3d/geometry/shape.js ***!
  \**************************************************/
/*! exports provided: Shape, ShapeType, HeightFieldFlags, TriMeshFlags, Ball, HalfSpace, Cuboid, RoundCuboid, Capsule, Segment, Triangle, RoundTriangle, Polyline, TriMesh, ConvexPolyhedron, RoundConvexPolyhedron, Heightfield, Cylinder, RoundCylinder, Cone, RoundCone */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Shape\", function() { return Shape; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShapeType\", function() { return ShapeType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HeightFieldFlags\", function() { return HeightFieldFlags; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TriMeshFlags\", function() { return TriMeshFlags; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Ball\", function() { return Ball; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HalfSpace\", function() { return HalfSpace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Cuboid\", function() { return Cuboid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RoundCuboid\", function() { return RoundCuboid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Capsule\", function() { return Capsule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Segment\", function() { return Segment; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Triangle\", function() { return Triangle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RoundTriangle\", function() { return RoundTriangle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Polyline\", function() { return Polyline; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TriMesh\", function() { return TriMesh; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConvexPolyhedron\", function() { return ConvexPolyhedron; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RoundConvexPolyhedron\", function() { return RoundConvexPolyhedron; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Heightfield\", function() { return Heightfield; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Cylinder\", function() { return Cylinder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RoundCylinder\", function() { return RoundCylinder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Cone\", function() { return Cone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RoundCone\", function() { return RoundCone; });\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n/* harmony import */ var _contact__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contact */ \"./lib/@dimforge/rapier3d/geometry/contact.js\");\n/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./point */ \"./lib/@dimforge/rapier3d/geometry/point.js\");\n/* harmony import */ var _ray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ray */ \"./lib/@dimforge/rapier3d/geometry/ray.js\");\n/* harmony import */ var _toi__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./toi */ \"./lib/@dimforge/rapier3d/geometry/toi.js\");\n\n\n\n\n\n\nclass Shape {\n  /**\n   * instant mode without cache\n   */\n  static fromRaw(rawSet, handle) {\n    const rawType = rawSet.coShapeType(handle);\n    let extents;\n    let borderRadius;\n    let vs;\n    let indices;\n    let halfHeight;\n    let radius;\n    let normal;\n    switch (rawType) {\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].Ball:\n        return new Ball(rawSet.coRadius(handle));\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].Cuboid:\n        extents = rawSet.coHalfExtents(handle);\n        // #if DIM3\n        return new Cuboid(extents.x, extents.y, extents.z);\n      // #endif\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].RoundCuboid:\n        extents = rawSet.coHalfExtents(handle);\n        borderRadius = rawSet.coRoundRadius(handle);\n        // #if DIM3\n        return new RoundCuboid(extents.x, extents.y, extents.z, borderRadius);\n      // #endif\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].Capsule:\n        halfHeight = rawSet.coHalfHeight(handle);\n        radius = rawSet.coRadius(handle);\n        return new Capsule(halfHeight, radius);\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].Segment:\n        vs = rawSet.coVertices(handle);\n        // #if DIM3\n        return new Segment(_math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].new(vs[0], vs[1], vs[2]), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].new(vs[3], vs[4], vs[5]));\n      // #endif\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].Polyline:\n        vs = rawSet.coVertices(handle);\n        indices = rawSet.coIndices(handle);\n        return new Polyline(vs, indices);\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].Triangle:\n        vs = rawSet.coVertices(handle);\n        // #if DIM3\n        return new Triangle(_math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].new(vs[0], vs[1], vs[2]), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].new(vs[3], vs[4], vs[5]), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].new(vs[6], vs[7], vs[8]));\n      // #endif\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].RoundTriangle:\n        vs = rawSet.coVertices(handle);\n        borderRadius = rawSet.coRoundRadius(handle);\n        // #if DIM3\n        return new RoundTriangle(_math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].new(vs[0], vs[1], vs[2]), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].new(vs[3], vs[4], vs[5]), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].new(vs[6], vs[7], vs[8]), borderRadius);\n      // #endif\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].HalfSpace:\n        normal = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(rawSet.coHalfspaceNormal(handle));\n        return new HalfSpace(normal);\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].TriMesh:\n        vs = rawSet.coVertices(handle);\n        indices = rawSet.coIndices(handle);\n        const tri_flags = rawSet.coTriMeshFlags(handle);\n        return new TriMesh(vs, indices, tri_flags);\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].HeightField:\n        const scale = rawSet.coHeightfieldScale(handle);\n        const heights = rawSet.coHeightfieldHeights(handle);\n        // #if DIM3\n        const nrows = rawSet.coHeightfieldNRows(handle);\n        const ncols = rawSet.coHeightfieldNCols(handle);\n        const hf_flags = rawSet.coHeightFieldFlags(handle);\n        return new Heightfield(nrows, ncols, heights, scale, hf_flags);\n      // #endif\n      // #if DIM3\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].ConvexPolyhedron:\n        vs = rawSet.coVertices(handle);\n        indices = rawSet.coIndices(handle);\n        return new ConvexPolyhedron(vs, indices);\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].RoundConvexPolyhedron:\n        vs = rawSet.coVertices(handle);\n        indices = rawSet.coIndices(handle);\n        borderRadius = rawSet.coRoundRadius(handle);\n        return new RoundConvexPolyhedron(vs, indices, borderRadius);\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].Cylinder:\n        halfHeight = rawSet.coHalfHeight(handle);\n        radius = rawSet.coRadius(handle);\n        return new Cylinder(halfHeight, radius);\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].RoundCylinder:\n        halfHeight = rawSet.coHalfHeight(handle);\n        radius = rawSet.coRadius(handle);\n        borderRadius = rawSet.coRoundRadius(handle);\n        return new RoundCylinder(halfHeight, radius, borderRadius);\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].Cone:\n        halfHeight = rawSet.coHalfHeight(handle);\n        radius = rawSet.coRadius(handle);\n        return new Cone(halfHeight, radius);\n      case _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"].RoundCone:\n        halfHeight = rawSet.coHalfHeight(handle);\n        radius = rawSet.coRadius(handle);\n        borderRadius = rawSet.coRoundRadius(handle);\n        return new RoundCone(halfHeight, radius, borderRadius);\n      // #endif\n      default:\n        throw new Error(\"unknown shape type: \" + rawType);\n    }\n  }\n  /**\n   * Computes the time of impact between two moving shapes.\n   * @param shapePos1 - The initial position of this sahpe.\n   * @param shapeRot1 - The rotation of this shape.\n   * @param shapeVel1 - The velocity of this shape.\n   * @param shape2 - The second moving shape.\n   * @param shapePos2 - The initial position of the second shape.\n   * @param shapeRot2 - The rotation of the second shape.\n   * @param shapeVel2 - The velocity of the second shape.\n   * @param targetDistance − If the shape moves closer to this distance from a collider, a hit\n   *                         will be returned.\n   * @param maxToi - The maximum time when the impact can happen.\n   * @param stopAtPenetration - If set to `false`, the linear shape-cast won’t immediately stop if\n   *   the shape is penetrating another shape at its starting point **and** its trajectory is such\n   *   that it’s on a path to exist that penetration state.\n   * @returns If the two moving shapes collider at some point along their trajectories, this returns the\n   *  time at which the two shape collider as well as the contact information during the impact. Returns\n   *  `null`if the two shapes never collide along their paths.\n   */\n  castShape(shapePos1, shapeRot1, shapeVel1, shape2, shapePos2, shapeRot2, shapeVel2, targetDistance, maxToi, stopAtPenetration) {\n    let rawPos1 = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shapePos1);\n    let rawRot1 = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(shapeRot1);\n    let rawVel1 = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shapeVel1);\n    let rawPos2 = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shapePos2);\n    let rawRot2 = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(shapeRot2);\n    let rawVel2 = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shapeVel2);\n    let rawShape1 = this.intoRaw();\n    let rawShape2 = shape2.intoRaw();\n    let result = _toi__WEBPACK_IMPORTED_MODULE_5__[\"ShapeCastHit\"].fromRaw(null, rawShape1.castShape(rawPos1, rawRot1, rawVel1, rawShape2, rawPos2, rawRot2, rawVel2, targetDistance, maxToi, stopAtPenetration));\n    rawPos1.free();\n    rawRot1.free();\n    rawVel1.free();\n    rawPos2.free();\n    rawRot2.free();\n    rawVel2.free();\n    rawShape1.free();\n    rawShape2.free();\n    return result;\n  }\n  /**\n   * Tests if this shape intersects another shape.\n   *\n   * @param shapePos1 - The position of this shape.\n   * @param shapeRot1 - The rotation of this shape.\n   * @param shape2  - The second shape to test.\n   * @param shapePos2 - The position of the second shape.\n   * @param shapeRot2 - The rotation of the second shape.\n   * @returns `true` if the two shapes intersect, `false` if they don’t.\n   */\n  intersectsShape(shapePos1, shapeRot1, shape2, shapePos2, shapeRot2) {\n    let rawPos1 = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shapePos1);\n    let rawRot1 = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(shapeRot1);\n    let rawPos2 = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shapePos2);\n    let rawRot2 = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(shapeRot2);\n    let rawShape1 = this.intoRaw();\n    let rawShape2 = shape2.intoRaw();\n    let result = rawShape1.intersectsShape(rawPos1, rawRot1, rawShape2, rawPos2, rawRot2);\n    rawPos1.free();\n    rawRot1.free();\n    rawPos2.free();\n    rawRot2.free();\n    rawShape1.free();\n    rawShape2.free();\n    return result;\n  }\n  /**\n   * Computes one pair of contact points between two shapes.\n   *\n   * @param shapePos1 - The initial position of this sahpe.\n   * @param shapeRot1 - The rotation of this shape.\n   * @param shape2 - The second shape.\n   * @param shapePos2 - The initial position of the second shape.\n   * @param shapeRot2 - The rotation of the second shape.\n   * @param prediction - The prediction value, if the shapes are separated by a distance greater than this value, test will fail.\n   * @returns `null` if the shapes are separated by a distance greater than prediction, otherwise contact details. The result is given in world-space.\n   */\n  contactShape(shapePos1, shapeRot1, shape2, shapePos2, shapeRot2, prediction) {\n    let rawPos1 = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shapePos1);\n    let rawRot1 = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(shapeRot1);\n    let rawPos2 = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shapePos2);\n    let rawRot2 = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(shapeRot2);\n    let rawShape1 = this.intoRaw();\n    let rawShape2 = shape2.intoRaw();\n    let result = _contact__WEBPACK_IMPORTED_MODULE_2__[\"ShapeContact\"].fromRaw(rawShape1.contactShape(rawPos1, rawRot1, rawShape2, rawPos2, rawRot2, prediction));\n    rawPos1.free();\n    rawRot1.free();\n    rawPos2.free();\n    rawRot2.free();\n    rawShape1.free();\n    rawShape2.free();\n    return result;\n  }\n  containsPoint(shapePos, shapeRot, point) {\n    let rawPos = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shapePos);\n    let rawRot = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(shapeRot);\n    let rawPoint = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(point);\n    let rawShape = this.intoRaw();\n    let result = rawShape.containsPoint(rawPos, rawRot, rawPoint);\n    rawPos.free();\n    rawRot.free();\n    rawPoint.free();\n    rawShape.free();\n    return result;\n  }\n  projectPoint(shapePos, shapeRot, point, solid) {\n    let rawPos = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shapePos);\n    let rawRot = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(shapeRot);\n    let rawPoint = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(point);\n    let rawShape = this.intoRaw();\n    let result = _point__WEBPACK_IMPORTED_MODULE_3__[\"PointProjection\"].fromRaw(rawShape.projectPoint(rawPos, rawRot, rawPoint, solid));\n    rawPos.free();\n    rawRot.free();\n    rawPoint.free();\n    rawShape.free();\n    return result;\n  }\n  intersectsRay(ray, shapePos, shapeRot, maxToi) {\n    let rawPos = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shapePos);\n    let rawRot = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(shapeRot);\n    let rawRayOrig = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(ray.origin);\n    let rawRayDir = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(ray.dir);\n    let rawShape = this.intoRaw();\n    let result = rawShape.intersectsRay(rawPos, rawRot, rawRayOrig, rawRayDir, maxToi);\n    rawPos.free();\n    rawRot.free();\n    rawRayOrig.free();\n    rawRayDir.free();\n    rawShape.free();\n    return result;\n  }\n  castRay(ray, shapePos, shapeRot, maxToi, solid) {\n    let rawPos = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shapePos);\n    let rawRot = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(shapeRot);\n    let rawRayOrig = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(ray.origin);\n    let rawRayDir = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(ray.dir);\n    let rawShape = this.intoRaw();\n    let result = rawShape.castRay(rawPos, rawRot, rawRayOrig, rawRayDir, maxToi, solid);\n    rawPos.free();\n    rawRot.free();\n    rawRayOrig.free();\n    rawRayDir.free();\n    rawShape.free();\n    return result;\n  }\n  castRayAndGetNormal(ray, shapePos, shapeRot, maxToi, solid) {\n    let rawPos = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(shapePos);\n    let rawRot = _math__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"].intoRaw(shapeRot);\n    let rawRayOrig = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(ray.origin);\n    let rawRayDir = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(ray.dir);\n    let rawShape = this.intoRaw();\n    let result = _ray__WEBPACK_IMPORTED_MODULE_4__[\"RayIntersection\"].fromRaw(rawShape.castRayAndGetNormal(rawPos, rawRot, rawRayOrig, rawRayDir, maxToi, solid));\n    rawPos.free();\n    rawRot.free();\n    rawRayOrig.free();\n    rawRayDir.free();\n    rawShape.free();\n    return result;\n  }\n}\n// #if DIM3\n/**\n * An enumeration representing the type of a shape.\n */\nvar ShapeType;\n(function (ShapeType) {\n  ShapeType[ShapeType[\"Ball\"] = 0] = \"Ball\";\n  ShapeType[ShapeType[\"Cuboid\"] = 1] = \"Cuboid\";\n  ShapeType[ShapeType[\"Capsule\"] = 2] = \"Capsule\";\n  ShapeType[ShapeType[\"Segment\"] = 3] = \"Segment\";\n  ShapeType[ShapeType[\"Polyline\"] = 4] = \"Polyline\";\n  ShapeType[ShapeType[\"Triangle\"] = 5] = \"Triangle\";\n  ShapeType[ShapeType[\"TriMesh\"] = 6] = \"TriMesh\";\n  ShapeType[ShapeType[\"HeightField\"] = 7] = \"HeightField\";\n  // Compound = 8,\n  ShapeType[ShapeType[\"ConvexPolyhedron\"] = 9] = \"ConvexPolyhedron\";\n  ShapeType[ShapeType[\"Cylinder\"] = 10] = \"Cylinder\";\n  ShapeType[ShapeType[\"Cone\"] = 11] = \"Cone\";\n  ShapeType[ShapeType[\"RoundCuboid\"] = 12] = \"RoundCuboid\";\n  ShapeType[ShapeType[\"RoundTriangle\"] = 13] = \"RoundTriangle\";\n  ShapeType[ShapeType[\"RoundCylinder\"] = 14] = \"RoundCylinder\";\n  ShapeType[ShapeType[\"RoundCone\"] = 15] = \"RoundCone\";\n  ShapeType[ShapeType[\"RoundConvexPolyhedron\"] = 16] = \"RoundConvexPolyhedron\";\n  ShapeType[ShapeType[\"HalfSpace\"] = 17] = \"HalfSpace\";\n})(ShapeType || (ShapeType = {}));\n// NOTE: this **must** match the bits in the HeightFieldFlags on the rust side.\n/**\n * Flags controlling the behavior of some operations involving heightfields.\n */\nvar HeightFieldFlags;\n(function (HeightFieldFlags) {\n  /**\n   * If set, a special treatment will be applied to contact manifold calculation to eliminate\n   * or fix contacts normals that could lead to incorrect bumps in physics simulation (especially\n   * on flat surfaces).\n   *\n   * This is achieved by taking into account adjacent triangle normals when computing contact\n   * points for a given triangle.\n   */\n  HeightFieldFlags[HeightFieldFlags[\"FIX_INTERNAL_EDGES\"] = 1] = \"FIX_INTERNAL_EDGES\";\n})(HeightFieldFlags || (HeightFieldFlags = {}));\n// #endif\n// NOTE: this **must** match the TriMeshFlags on the rust side.\n/**\n * Flags controlling the behavior of the triangle mesh creation and of some\n * operations involving triangle meshes.\n */\nvar TriMeshFlags;\n(function (TriMeshFlags) {\n  // NOTE: these two flags are not really useful in JS.\n  //\n  // /**\n  //  * If set, the half-edge topology of the trimesh will be computed if possible.\n  //  */\n  // HALF_EDGE_TOPOLOGY = 0b0000_0001,\n  // /** If set, the half-edge topology and connected components of the trimesh will be computed if possible.\n  //  *\n  //  * Because of the way it is currently implemented, connected components can only be computed on\n  //  * a mesh where the half-edge topology computation succeeds. It will no longer be the case in the\n  //  * future once we decouple the computations.\n  //  */\n  // CONNECTED_COMPONENTS = 0b0000_0010,\n  /**\n   * If set, any triangle that results in a failing half-hedge topology computation will be deleted.\n   */\n  TriMeshFlags[TriMeshFlags[\"DELETE_BAD_TOPOLOGY_TRIANGLES\"] = 4] = \"DELETE_BAD_TOPOLOGY_TRIANGLES\";\n  /**\n   * If set, the trimesh will be assumed to be oriented (with outward normals).\n   *\n   * The pseudo-normals of its vertices and edges will be computed.\n   */\n  TriMeshFlags[TriMeshFlags[\"ORIENTED\"] = 8] = \"ORIENTED\";\n  /**\n   * If set, the duplicate vertices of the trimesh will be merged.\n   *\n   * Two vertices with the exact same coordinates will share the same entry on the\n   * vertex buffer and the index buffer is adjusted accordingly.\n   */\n  TriMeshFlags[TriMeshFlags[\"MERGE_DUPLICATE_VERTICES\"] = 16] = \"MERGE_DUPLICATE_VERTICES\";\n  /**\n   * If set, the triangles sharing two vertices with identical index values will be removed.\n   *\n   * Because of the way it is currently implemented, this methods implies that duplicate\n   * vertices will be merged. It will no longer be the case in the future once we decouple\n   * the computations.\n   */\n  TriMeshFlags[TriMeshFlags[\"DELETE_DEGENERATE_TRIANGLES\"] = 32] = \"DELETE_DEGENERATE_TRIANGLES\";\n  /**\n   * If set, two triangles sharing three vertices with identical index values (in any order)\n   * will be removed.\n   *\n   * Because of the way it is currently implemented, this methods implies that duplicate\n   * vertices will be merged. It will no longer be the case in the future once we decouple\n   * the computations.\n   */\n  TriMeshFlags[TriMeshFlags[\"DELETE_DUPLICATE_TRIANGLES\"] = 64] = \"DELETE_DUPLICATE_TRIANGLES\";\n  /**\n   * If set, a special treatment will be applied to contact manifold calculation to eliminate\n   * or fix contacts normals that could lead to incorrect bumps in physics simulation\n   * (especially on flat surfaces).\n   *\n   * This is achieved by taking into account adjacent triangle normals when computing contact\n   * points for a given triangle.\n   *\n   * /!\\ NOT SUPPORTED IN THE 2D VERSION OF RAPIER.\n   */\n  TriMeshFlags[TriMeshFlags[\"FIX_INTERNAL_EDGES\"] = 152] = \"FIX_INTERNAL_EDGES\";\n})(TriMeshFlags || (TriMeshFlags = {}));\n/**\n * A shape that is a sphere in 3D and a circle in 2D.\n */\nclass Ball extends Shape {\n  /**\n   * Creates a new ball with the given radius.\n   * @param radius - The balls radius.\n   */\n  constructor(radius) {\n    super();\n    this.type = ShapeType.Ball;\n    this.radius = radius;\n  }\n  intoRaw() {\n    return _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].ball(this.radius);\n  }\n}\nclass HalfSpace extends Shape {\n  /**\n   * Creates a new halfspace delimited by an infinite plane.\n   *\n   * @param normal - The outward normal of the plane.\n   */\n  constructor(normal) {\n    super();\n    this.type = ShapeType.HalfSpace;\n    this.normal = normal;\n  }\n  intoRaw() {\n    let n = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(this.normal);\n    let result = _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].halfspace(n);\n    n.free();\n    return result;\n  }\n}\n/**\n * A shape that is a box in 3D and a rectangle in 2D.\n */\nclass Cuboid extends Shape {\n  // #if DIM3\n  /**\n   * Creates a new 3D cuboid.\n   * @param hx - The half width of the cuboid.\n   * @param hy - The half height of the cuboid.\n   * @param hz - The half depth of the cuboid.\n   */\n  constructor(hx, hy, hz) {\n    super();\n    this.type = ShapeType.Cuboid;\n    this.halfExtents = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].new(hx, hy, hz);\n  }\n  // #endif\n  intoRaw() {\n    // #if DIM3\n    return _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].cuboid(this.halfExtents.x, this.halfExtents.y, this.halfExtents.z);\n    // #endif\n  }\n}\n/**\n * A shape that is a box in 3D and a rectangle in 2D, with round corners.\n */\nclass RoundCuboid extends Shape {\n  // #if DIM3\n  /**\n   * Creates a new 3D cuboid.\n   * @param hx - The half width of the cuboid.\n   * @param hy - The half height of the cuboid.\n   * @param hz - The half depth of the cuboid.\n   * @param borderRadius - The radius of the borders of this cuboid. This will\n   *   effectively increase the half-extents of the cuboid by this radius.\n   */\n  constructor(hx, hy, hz, borderRadius) {\n    super();\n    this.type = ShapeType.RoundCuboid;\n    this.halfExtents = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].new(hx, hy, hz);\n    this.borderRadius = borderRadius;\n  }\n  // #endif\n  intoRaw() {\n    // #if DIM3\n    return _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].roundCuboid(this.halfExtents.x, this.halfExtents.y, this.halfExtents.z, this.borderRadius);\n    // #endif\n  }\n}\n/**\n * A shape that is a capsule.\n */\nclass Capsule extends Shape {\n  /**\n   * Creates a new capsule with the given radius and half-height.\n   * @param halfHeight - The balls half-height along the `y` axis.\n   * @param radius - The balls radius.\n   */\n  constructor(halfHeight, radius) {\n    super();\n    this.type = ShapeType.Capsule;\n    this.halfHeight = halfHeight;\n    this.radius = radius;\n  }\n  intoRaw() {\n    return _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].capsule(this.halfHeight, this.radius);\n  }\n}\n/**\n * A shape that is a segment.\n */\nclass Segment extends Shape {\n  /**\n   * Creates a new segment shape.\n   * @param a - The first point of the segment.\n   * @param b - The second point of the segment.\n   */\n  constructor(a, b) {\n    super();\n    this.type = ShapeType.Segment;\n    this.a = a;\n    this.b = b;\n  }\n  intoRaw() {\n    let ra = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(this.a);\n    let rb = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(this.b);\n    let result = _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].segment(ra, rb);\n    ra.free();\n    rb.free();\n    return result;\n  }\n}\n/**\n * A shape that is a segment.\n */\nclass Triangle extends Shape {\n  /**\n   * Creates a new triangle shape.\n   *\n   * @param a - The first point of the triangle.\n   * @param b - The second point of the triangle.\n   * @param c - The third point of the triangle.\n   */\n  constructor(a, b, c) {\n    super();\n    this.type = ShapeType.Triangle;\n    this.a = a;\n    this.b = b;\n    this.c = c;\n  }\n  intoRaw() {\n    let ra = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(this.a);\n    let rb = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(this.b);\n    let rc = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(this.c);\n    let result = _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].triangle(ra, rb, rc);\n    ra.free();\n    rb.free();\n    rc.free();\n    return result;\n  }\n}\n/**\n * A shape that is a triangle with round borders and a non-zero thickness.\n */\nclass RoundTriangle extends Shape {\n  /**\n   * Creates a new triangle shape with round corners.\n   *\n   * @param a - The first point of the triangle.\n   * @param b - The second point of the triangle.\n   * @param c - The third point of the triangle.\n   * @param borderRadius - The radius of the borders of this triangle. In 3D,\n   *   this is also equal to half the thickness of the triangle.\n   */\n  constructor(a, b, c, borderRadius) {\n    super();\n    this.type = ShapeType.RoundTriangle;\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.borderRadius = borderRadius;\n  }\n  intoRaw() {\n    let ra = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(this.a);\n    let rb = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(this.b);\n    let rc = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(this.c);\n    let result = _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].roundTriangle(ra, rb, rc, this.borderRadius);\n    ra.free();\n    rb.free();\n    rc.free();\n    return result;\n  }\n}\n/**\n * A shape that is a triangle mesh.\n */\nclass Polyline extends Shape {\n  /**\n   * Creates a new polyline shape.\n   *\n   * @param vertices - The coordinates of the polyline's vertices.\n   * @param indices - The indices of the polyline's segments. If this is `null` or not provided, then\n   *    the vertices are assumed to form a line strip.\n   */\n  constructor(vertices, indices) {\n    super();\n    this.type = ShapeType.Polyline;\n    this.vertices = vertices;\n    this.indices = indices !== null && indices !== void 0 ? indices : new Uint32Array(0);\n  }\n  intoRaw() {\n    return _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].polyline(this.vertices, this.indices);\n  }\n}\n/**\n * A shape that is a triangle mesh.\n */\nclass TriMesh extends Shape {\n  /**\n   * Creates a new triangle mesh shape.\n   *\n   * @param vertices - The coordinates of the triangle mesh's vertices.\n   * @param indices - The indices of the triangle mesh's triangles.\n   */\n  constructor(vertices, indices, flags) {\n    super();\n    this.type = ShapeType.TriMesh;\n    this.vertices = vertices;\n    this.indices = indices;\n    this.flags = flags;\n  }\n  intoRaw() {\n    return _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].trimesh(this.vertices, this.indices, this.flags);\n  }\n}\n// #if DIM3\n/**\n * A shape that is a convex polygon.\n */\nclass ConvexPolyhedron extends Shape {\n  /**\n   * Creates a new convex polygon shape.\n   *\n   * @param vertices - The coordinates of the convex polygon's vertices.\n   * @param indices - The index buffer of this convex mesh. If this is `null`\n   *   or `undefined`, the convex-hull of the input vertices will be computed\n   *   automatically. Otherwise, it will be assumed that the mesh you provide\n   *   is already convex.\n   */\n  constructor(vertices, indices) {\n    super();\n    this.type = ShapeType.ConvexPolyhedron;\n    this.vertices = vertices;\n    this.indices = indices;\n  }\n  intoRaw() {\n    if (!!this.indices) {\n      return _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].convexMesh(this.vertices, this.indices);\n    } else {\n      return _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].convexHull(this.vertices);\n    }\n  }\n}\n/**\n * A shape that is a convex polygon.\n */\nclass RoundConvexPolyhedron extends Shape {\n  /**\n   * Creates a new convex polygon shape.\n   *\n   * @param vertices - The coordinates of the convex polygon's vertices.\n   * @param indices - The index buffer of this convex mesh. If this is `null`\n   *   or `undefined`, the convex-hull of the input vertices will be computed\n   *   automatically. Otherwise, it will be assumed that the mesh you provide\n   *   is already convex.\n   * @param borderRadius - The radius of the borders of this convex polyhedron.\n   */\n  constructor(vertices, indices, borderRadius) {\n    super();\n    this.type = ShapeType.RoundConvexPolyhedron;\n    this.vertices = vertices;\n    this.indices = indices;\n    this.borderRadius = borderRadius;\n  }\n  intoRaw() {\n    if (!!this.indices) {\n      return _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].roundConvexMesh(this.vertices, this.indices, this.borderRadius);\n    } else {\n      return _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].roundConvexHull(this.vertices, this.borderRadius);\n    }\n  }\n}\n/**\n * A shape that is a heightfield.\n */\nclass Heightfield extends Shape {\n  /**\n   * Creates a new heightfield shape.\n   *\n   * @param nrows − The number of rows in the heights matrix.\n   * @param ncols - The number of columns in the heights matrix.\n   * @param heights - The heights of the heightfield along its local `y` axis,\n   *                  provided as a matrix stored in column-major order.\n   * @param scale - The dimensions of the heightfield's local `x,z` plane.\n   */\n  constructor(nrows, ncols, heights, scale, flags) {\n    super();\n    this.type = ShapeType.HeightField;\n    this.nrows = nrows;\n    this.ncols = ncols;\n    this.heights = heights;\n    this.scale = scale;\n    this.flags = flags;\n  }\n  intoRaw() {\n    let rawScale = _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].intoRaw(this.scale);\n    let rawShape = _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].heightfield(this.nrows, this.ncols, this.heights, rawScale, this.flags);\n    rawScale.free();\n    return rawShape;\n  }\n}\n/**\n * A shape that is a 3D cylinder.\n */\nclass Cylinder extends Shape {\n  /**\n   * Creates a new cylinder with the given radius and half-height.\n   * @param halfHeight - The balls half-height along the `y` axis.\n   * @param radius - The balls radius.\n   */\n  constructor(halfHeight, radius) {\n    super();\n    this.type = ShapeType.Cylinder;\n    this.halfHeight = halfHeight;\n    this.radius = radius;\n  }\n  intoRaw() {\n    return _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].cylinder(this.halfHeight, this.radius);\n  }\n}\n/**\n * A shape that is a 3D cylinder with round corners.\n */\nclass RoundCylinder extends Shape {\n  /**\n   * Creates a new cylinder with the given radius and half-height.\n   * @param halfHeight - The balls half-height along the `y` axis.\n   * @param radius - The balls radius.\n   * @param borderRadius - The radius of the borders of this cylinder.\n   */\n  constructor(halfHeight, radius, borderRadius) {\n    super();\n    this.type = ShapeType.RoundCylinder;\n    this.borderRadius = borderRadius;\n    this.halfHeight = halfHeight;\n    this.radius = radius;\n  }\n  intoRaw() {\n    return _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].roundCylinder(this.halfHeight, this.radius, this.borderRadius);\n  }\n}\n/**\n * A shape that is a 3D cone.\n */\nclass Cone extends Shape {\n  /**\n   * Creates a new cone with the given radius and half-height.\n   * @param halfHeight - The balls half-height along the `y` axis.\n   * @param radius - The balls radius.\n   */\n  constructor(halfHeight, radius) {\n    super();\n    this.type = ShapeType.Cone;\n    this.halfHeight = halfHeight;\n    this.radius = radius;\n  }\n  intoRaw() {\n    return _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].cone(this.halfHeight, this.radius);\n  }\n}\n/**\n * A shape that is a 3D cone with round corners.\n */\nclass RoundCone extends Shape {\n  /**\n   * Creates a new cone with the given radius and half-height.\n   * @param halfHeight - The balls half-height along the `y` axis.\n   * @param radius - The balls radius.\n   * @param borderRadius - The radius of the borders of this cone.\n   */\n  constructor(halfHeight, radius, borderRadius) {\n    super();\n    this.type = ShapeType.RoundCone;\n    this.halfHeight = halfHeight;\n    this.radius = radius;\n    this.borderRadius = borderRadius;\n  }\n  intoRaw() {\n    return _raw__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"].roundCone(this.halfHeight, this.radius, this.borderRadius);\n  }\n}\n// #endif//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/geometry/shape.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/geometry/toi.js":
/*!************************************************!*\
  !*** ./lib/@dimforge/rapier3d/geometry/toi.js ***!
  \************************************************/
/*! exports provided: ShapeCastHit, ColliderShapeCastHit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ShapeCastHit\", function() { return ShapeCastHit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColliderShapeCastHit\", function() { return ColliderShapeCastHit; });\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n\n/**\n * The intersection between a ray and a collider.\n */\nclass ShapeCastHit {\n  constructor(time_of_impact, witness1, witness2, normal1, normal2) {\n    this.time_of_impact = time_of_impact;\n    this.witness1 = witness1;\n    this.witness2 = witness2;\n    this.normal1 = normal1;\n    this.normal2 = normal2;\n  }\n  static fromRaw(colliderSet, raw) {\n    if (!raw) return null;\n    const result = new ShapeCastHit(raw.time_of_impact(), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(raw.witness1()), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(raw.witness2()), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(raw.normal1()), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(raw.normal2()));\n    raw.free();\n    return result;\n  }\n}\n/**\n * The intersection between a ray and a collider.\n */\nclass ColliderShapeCastHit extends ShapeCastHit {\n  constructor(collider, time_of_impact, witness1, witness2, normal1, normal2) {\n    super(time_of_impact, witness1, witness2, normal1, normal2);\n    this.collider = collider;\n  }\n  static fromRaw(colliderSet, raw) {\n    if (!raw) return null;\n    const result = new ColliderShapeCastHit(colliderSet.get(raw.colliderHandle()), raw.time_of_impact(), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(raw.witness1()), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(raw.witness2()), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(raw.normal1()), _math__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"].fromRaw(raw.normal2()));\n    raw.free();\n    return result;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2dlb21ldHJ5L3RvaS50cz83Y2E1Il0sIm5hbWVzIjpbIlNoYXBlQ2FzdEhpdCIsImNvbnN0cnVjdG9yIiwidGltZV9vZl9pbXBhY3QiLCJ3aXRuZXNzMSIsIndpdG5lc3MyIiwibm9ybWFsMSIsIm5vcm1hbDIiLCJmcm9tUmF3IiwiY29sbGlkZXJTZXQiLCJyYXciLCJyZXN1bHQiLCJWZWN0b3JPcHMiLCJmcmVlIiwiQ29sbGlkZXJTaGFwZUNhc3RIaXQiLCJjb2xsaWRlciIsImdldCIsImNvbGxpZGVySGFuZGxlIl0sIm1hcHBpbmdzIjoiQUFDQTtBQUFBO0FBQUE7QUFBQTtBQUF5QztBQUl6Qzs7O0FBR00sTUFBT0EsWUFBWTtFQTBCckJDLFlBQ0lDLGNBQXNCLEVBQ3RCQyxRQUFnQixFQUNoQkMsUUFBZ0IsRUFDaEJDLE9BQWUsRUFDZkMsT0FBZTtJQUVmLElBQUksQ0FBQ0osY0FBYyxHQUFHQSxjQUFjO0lBQ3BDLElBQUksQ0FBQ0MsUUFBUSxHQUFHQSxRQUFRO0lBQ3hCLElBQUksQ0FBQ0MsUUFBUSxHQUFHQSxRQUFRO0lBQ3hCLElBQUksQ0FBQ0MsT0FBTyxHQUFHQSxPQUFPO0lBQ3RCLElBQUksQ0FBQ0MsT0FBTyxHQUFHQSxPQUFPO0VBQzFCO0VBRU8sT0FBT0MsT0FBT0EsQ0FDakJDLFdBQXdCLEVBQ3hCQyxHQUFvQjtJQUVwQixJQUFJLENBQUNBLEdBQUcsRUFBRSxPQUFPLElBQUk7SUFFckIsTUFBTUMsTUFBTSxHQUFHLElBQUlWLFlBQVksQ0FDM0JTLEdBQUcsQ0FBQ1AsY0FBYyxFQUFFLEVBQ3BCUywrQ0FBUyxDQUFDSixPQUFPLENBQUNFLEdBQUcsQ0FBQ04sUUFBUSxFQUFFLENBQUMsRUFDakNRLCtDQUFTLENBQUNKLE9BQU8sQ0FBQ0UsR0FBRyxDQUFDTCxRQUFRLEVBQUUsQ0FBQyxFQUNqQ08sK0NBQVMsQ0FBQ0osT0FBTyxDQUFDRSxHQUFHLENBQUNKLE9BQU8sRUFBRSxDQUFDLEVBQ2hDTSwrQ0FBUyxDQUFDSixPQUFPLENBQUNFLEdBQUcsQ0FBQ0gsT0FBTyxFQUFFLENBQUMsQ0FDbkM7SUFDREcsR0FBRyxDQUFDRyxJQUFJLEVBQUU7SUFDVixPQUFPRixNQUFNO0VBQ2pCOztBQUdKOzs7QUFHTSxNQUFPRyxvQkFBcUIsU0FBUWIsWUFBWTtFQU1sREMsWUFDSWEsUUFBa0IsRUFDbEJaLGNBQXNCLEVBQ3RCQyxRQUFnQixFQUNoQkMsUUFBZ0IsRUFDaEJDLE9BQWUsRUFDZkMsT0FBZTtJQUVmLEtBQUssQ0FBQ0osY0FBYyxFQUFFQyxRQUFRLEVBQUVDLFFBQVEsRUFBRUMsT0FBTyxFQUFFQyxPQUFPLENBQUM7SUFDM0QsSUFBSSxDQUFDUSxRQUFRLEdBQUdBLFFBQVE7RUFDNUI7RUFFTyxPQUFPUCxPQUFPQSxDQUNqQkMsV0FBd0IsRUFDeEJDLEdBQTRCO0lBRTVCLElBQUksQ0FBQ0EsR0FBRyxFQUFFLE9BQU8sSUFBSTtJQUVyQixNQUFNQyxNQUFNLEdBQUcsSUFBSUcsb0JBQW9CLENBQ25DTCxXQUFXLENBQUNPLEdBQUcsQ0FBQ04sR0FBRyxDQUFDTyxjQUFjLEVBQUUsQ0FBQyxFQUNyQ1AsR0FBRyxDQUFDUCxjQUFjLEVBQUUsRUFDcEJTLCtDQUFTLENBQUNKLE9BQU8sQ0FBQ0UsR0FBRyxDQUFDTixRQUFRLEVBQUUsQ0FBQyxFQUNqQ1EsK0NBQVMsQ0FBQ0osT0FBTyxDQUFDRSxHQUFHLENBQUNMLFFBQVEsRUFBRSxDQUFDLEVBQ2pDTywrQ0FBUyxDQUFDSixPQUFPLENBQUNFLEdBQUcsQ0FBQ0osT0FBTyxFQUFFLENBQUMsRUFDaENNLCtDQUFTLENBQUNKLE9BQU8sQ0FBQ0UsR0FBRyxDQUFDSCxPQUFPLEVBQUUsQ0FBQyxDQUNuQztJQUNERyxHQUFHLENBQUNHLElBQUksRUFBRTtJQUNWLE9BQU9GLE1BQU07RUFDakIiLCJmaWxlIjoiLi9saWIvQGRpbWZvcmdlL3JhcGllcjNkL2dlb21ldHJ5L3RvaS5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/geometry/toi.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/init.js":
/*!****************************************!*\
  !*** ./lib/@dimforge/rapier3d/init.js ***!
  \****************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIuL2xpYi9AZGltZm9yZ2UvcmFwaWVyM2QvaW5pdC5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/init.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/math.js":
/*!****************************************!*\
  !*** ./lib/@dimforge/rapier3d/math.js ***!
  \****************************************/
/*! exports provided: Vector3, VectorOps, Quaternion, RotationOps, SdpMatrix3, SdpMatrix3Ops */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Vector3\", function() { return Vector3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VectorOps\", function() { return VectorOps; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Quaternion\", function() { return Quaternion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RotationOps\", function() { return RotationOps; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SdpMatrix3\", function() { return SdpMatrix3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SdpMatrix3Ops\", function() { return SdpMatrix3Ops; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n\n/**\n * A 3D vector.\n */\nclass Vector3 {\n  constructor(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n}\nclass VectorOps {\n  static new(x, y, z) {\n    return new Vector3(x, y, z);\n  }\n  static intoRaw(v) {\n    return new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawVector\"](v.x, v.y, v.z);\n  }\n  static zeros() {\n    return VectorOps.new(0.0, 0.0, 0.0);\n  }\n  // FIXME: type ram: RawVector?\n  static fromRaw(raw) {\n    if (!raw) return null;\n    let res = VectorOps.new(raw.x, raw.y, raw.z);\n    raw.free();\n    return res;\n  }\n  static copy(out, input) {\n    out.x = input.x;\n    out.y = input.y;\n    out.z = input.z;\n  }\n}\n/**\n * A quaternion.\n */\nclass Quaternion {\n  constructor(x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n  }\n}\nclass RotationOps {\n  static identity() {\n    return new Quaternion(0.0, 0.0, 0.0, 1.0);\n  }\n  static fromRaw(raw) {\n    if (!raw) return null;\n    let res = new Quaternion(raw.x, raw.y, raw.z, raw.w);\n    raw.free();\n    return res;\n  }\n  static intoRaw(rot) {\n    return new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawRotation\"](rot.x, rot.y, rot.z, rot.w);\n  }\n  static copy(out, input) {\n    out.x = input.x;\n    out.y = input.y;\n    out.z = input.z;\n    out.w = input.w;\n  }\n}\n/**\n * A 3D symmetric-positive-definite matrix.\n */\nclass SdpMatrix3 {\n  constructor(elements) {\n    this.elements = elements;\n  }\n  /**\n   * Matrix element at row 1, column 1.\n   */\n  get m11() {\n    return this.elements[0];\n  }\n  /**\n   * Matrix element at row 1, column 2.\n   */\n  get m12() {\n    return this.elements[1];\n  }\n  /**\n   * Matrix element at row 2, column 1.\n   */\n  get m21() {\n    return this.m12;\n  }\n  /**\n   * Matrix element at row 1, column 3.\n   */\n  get m13() {\n    return this.elements[2];\n  }\n  /**\n   * Matrix element at row 3, column 1.\n   */\n  get m31() {\n    return this.m13;\n  }\n  /**\n   * Matrix element at row 2, column 2.\n   */\n  get m22() {\n    return this.elements[3];\n  }\n  /**\n   * Matrix element at row 2, column 3.\n   */\n  get m23() {\n    return this.elements[4];\n  }\n  /**\n   * Matrix element at row 3, column 2.\n   */\n  get m32() {\n    return this.m23;\n  }\n  /**\n   * Matrix element at row 3, column 3.\n   */\n  get m33() {\n    return this.elements[5];\n  }\n}\nclass SdpMatrix3Ops {\n  static fromRaw(raw) {\n    const sdpMatrix3 = new SdpMatrix3(raw.elements());\n    raw.free();\n    return sdpMatrix3;\n  }\n}\n// #endif//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL21hdGgudHM/YWYyZCJdLCJuYW1lcyI6WyJWZWN0b3IzIiwiY29uc3RydWN0b3IiLCJ4IiwieSIsInoiLCJWZWN0b3JPcHMiLCJuZXciLCJpbnRvUmF3IiwidiIsIlJhd1ZlY3RvciIsInplcm9zIiwiZnJvbVJhdyIsInJhdyIsInJlcyIsImZyZWUiLCJjb3B5Iiwib3V0IiwiaW5wdXQiLCJRdWF0ZXJuaW9uIiwidyIsIlJvdGF0aW9uT3BzIiwiaWRlbnRpdHkiLCJyb3QiLCJSYXdSb3RhdGlvbiIsIlNkcE1hdHJpeDMiLCJlbGVtZW50cyIsIm0xMSIsIm0xMiIsIm0yMSIsIm0xMyIsIm0zMSIsIm0yMiIsIm0yMyIsIm0zMiIsIm0zMyIsIlNkcE1hdHJpeDNPcHMiLCJzZHBNYXRyaXgzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTRDO0FBYTVDOzs7QUFHTSxNQUFPQSxPQUFPO0VBS2hCQyxZQUFZQyxDQUFTLEVBQUVDLENBQVMsRUFBRUMsQ0FBUztJQUN2QyxJQUFJLENBQUNGLENBQUMsR0FBR0EsQ0FBQztJQUNWLElBQUksQ0FBQ0MsQ0FBQyxHQUFHQSxDQUFDO0lBQ1YsSUFBSSxDQUFDQyxDQUFDLEdBQUdBLENBQUM7RUFDZDs7QUFHRSxNQUFPQyxTQUFTO0VBQ1gsT0FBT0MsR0FBR0EsQ0FBQ0osQ0FBUyxFQUFFQyxDQUFTLEVBQUVDLENBQVM7SUFDN0MsT0FBTyxJQUFJSixPQUFPLENBQUNFLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLENBQUM7RUFDL0I7RUFFTyxPQUFPRyxPQUFPQSxDQUFDQyxDQUFTO0lBQzNCLE9BQU8sSUFBSUMsOENBQVMsQ0FBQ0QsQ0FBQyxDQUFDTixDQUFDLEVBQUVNLENBQUMsQ0FBQ0wsQ0FBQyxFQUFFSyxDQUFDLENBQUNKLENBQUMsQ0FBQztFQUN2QztFQUVPLE9BQU9NLEtBQUtBLENBQUE7SUFDZixPQUFPTCxTQUFTLENBQUNDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQztFQUN2QztFQUVBO0VBQ08sT0FBT0ssT0FBT0EsQ0FBQ0MsR0FBYztJQUNoQyxJQUFJLENBQUNBLEdBQUcsRUFBRSxPQUFPLElBQUk7SUFFckIsSUFBSUMsR0FBRyxHQUFHUixTQUFTLENBQUNDLEdBQUcsQ0FBQ00sR0FBRyxDQUFDVixDQUFDLEVBQUVVLEdBQUcsQ0FBQ1QsQ0FBQyxFQUFFUyxHQUFHLENBQUNSLENBQUMsQ0FBQztJQUM1Q1EsR0FBRyxDQUFDRSxJQUFJLEVBQUU7SUFDVixPQUFPRCxHQUFHO0VBQ2Q7RUFFTyxPQUFPRSxJQUFJQSxDQUFDQyxHQUFXLEVBQUVDLEtBQWE7SUFDekNELEdBQUcsQ0FBQ2QsQ0FBQyxHQUFHZSxLQUFLLENBQUNmLENBQUM7SUFDZmMsR0FBRyxDQUFDYixDQUFDLEdBQUdjLEtBQUssQ0FBQ2QsQ0FBQztJQUNmYSxHQUFHLENBQUNaLENBQUMsR0FBR2EsS0FBSyxDQUFDYixDQUFDO0VBQ25COztBQVVKOzs7QUFHTSxNQUFPYyxVQUFVO0VBTW5CakIsWUFBWUMsQ0FBUyxFQUFFQyxDQUFTLEVBQUVDLENBQVMsRUFBRWUsQ0FBUztJQUNsRCxJQUFJLENBQUNqQixDQUFDLEdBQUdBLENBQUM7SUFDVixJQUFJLENBQUNDLENBQUMsR0FBR0EsQ0FBQztJQUNWLElBQUksQ0FBQ0MsQ0FBQyxHQUFHQSxDQUFDO0lBQ1YsSUFBSSxDQUFDZSxDQUFDLEdBQUdBLENBQUM7RUFDZDs7QUFHRSxNQUFPQyxXQUFXO0VBQ2IsT0FBT0MsUUFBUUEsQ0FBQTtJQUNsQixPQUFPLElBQUlILFVBQVUsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7RUFDN0M7RUFFTyxPQUFPUCxPQUFPQSxDQUFDQyxHQUFnQjtJQUNsQyxJQUFJLENBQUNBLEdBQUcsRUFBRSxPQUFPLElBQUk7SUFFckIsSUFBSUMsR0FBRyxHQUFHLElBQUlLLFVBQVUsQ0FBQ04sR0FBRyxDQUFDVixDQUFDLEVBQUVVLEdBQUcsQ0FBQ1QsQ0FBQyxFQUFFUyxHQUFHLENBQUNSLENBQUMsRUFBRVEsR0FBRyxDQUFDTyxDQUFDLENBQUM7SUFDcERQLEdBQUcsQ0FBQ0UsSUFBSSxFQUFFO0lBQ1YsT0FBT0QsR0FBRztFQUNkO0VBRU8sT0FBT04sT0FBT0EsQ0FBQ2UsR0FBYTtJQUMvQixPQUFPLElBQUlDLGdEQUFXLENBQUNELEdBQUcsQ0FBQ3BCLENBQUMsRUFBRW9CLEdBQUcsQ0FBQ25CLENBQUMsRUFBRW1CLEdBQUcsQ0FBQ2xCLENBQUMsRUFBRWtCLEdBQUcsQ0FBQ0gsQ0FBQyxDQUFDO0VBQ3REO0VBRU8sT0FBT0osSUFBSUEsQ0FBQ0MsR0FBYSxFQUFFQyxLQUFlO0lBQzdDRCxHQUFHLENBQUNkLENBQUMsR0FBR2UsS0FBSyxDQUFDZixDQUFDO0lBQ2ZjLEdBQUcsQ0FBQ2IsQ0FBQyxHQUFHYyxLQUFLLENBQUNkLENBQUM7SUFDZmEsR0FBRyxDQUFDWixDQUFDLEdBQUdhLEtBQUssQ0FBQ2IsQ0FBQztJQUNmWSxHQUFHLENBQUNHLENBQUMsR0FBR0YsS0FBSyxDQUFDRSxDQUFDO0VBQ25COztBQUdKOzs7QUFHTSxNQUFPSyxVQUFVO0VBcUVuQnZCLFlBQVl3QixRQUFzQjtJQUM5QixJQUFJLENBQUNBLFFBQVEsR0FBR0EsUUFBUTtFQUM1QjtFQWpFQTs7O0VBR0EsSUFBV0MsR0FBR0EsQ0FBQTtJQUNWLE9BQU8sSUFBSSxDQUFDRCxRQUFRLENBQUMsQ0FBQyxDQUFDO0VBQzNCO0VBRUE7OztFQUdBLElBQVdFLEdBQUdBLENBQUE7SUFDVixPQUFPLElBQUksQ0FBQ0YsUUFBUSxDQUFDLENBQUMsQ0FBQztFQUMzQjtFQUVBOzs7RUFHQSxJQUFXRyxHQUFHQSxDQUFBO0lBQ1YsT0FBTyxJQUFJLENBQUNELEdBQUc7RUFDbkI7RUFFQTs7O0VBR0EsSUFBV0UsR0FBR0EsQ0FBQTtJQUNWLE9BQU8sSUFBSSxDQUFDSixRQUFRLENBQUMsQ0FBQyxDQUFDO0VBQzNCO0VBRUE7OztFQUdBLElBQVdLLEdBQUdBLENBQUE7SUFDVixPQUFPLElBQUksQ0FBQ0QsR0FBRztFQUNuQjtFQUVBOzs7RUFHQSxJQUFXRSxHQUFHQSxDQUFBO0lBQ1YsT0FBTyxJQUFJLENBQUNOLFFBQVEsQ0FBQyxDQUFDLENBQUM7RUFDM0I7RUFFQTs7O0VBR0EsSUFBV08sR0FBR0EsQ0FBQTtJQUNWLE9BQU8sSUFBSSxDQUFDUCxRQUFRLENBQUMsQ0FBQyxDQUFDO0VBQzNCO0VBRUE7OztFQUdBLElBQVdRLEdBQUdBLENBQUE7SUFDVixPQUFPLElBQUksQ0FBQ0QsR0FBRztFQUNuQjtFQUVBOzs7RUFHQSxJQUFXRSxHQUFHQSxDQUFBO0lBQ1YsT0FBTyxJQUFJLENBQUNULFFBQVEsQ0FBQyxDQUFDLENBQUM7RUFDM0I7O0FBT0UsTUFBT1UsYUFBYTtFQUNmLE9BQU94QixPQUFPQSxDQUFDQyxHQUFrQjtJQUNwQyxNQUFNd0IsVUFBVSxHQUFHLElBQUlaLFVBQVUsQ0FBQ1osR0FBRyxDQUFDYSxRQUFRLEVBQUUsQ0FBQztJQUNqRGIsR0FBRyxDQUFDRSxJQUFJLEVBQUU7SUFDVixPQUFPc0IsVUFBVTtFQUNyQjs7QUFHSiIsImZpbGUiOiIuL2xpYi9AZGltZm9yZ2UvcmFwaWVyM2QvbWF0aC5qcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/math.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/pipeline/debug_render_pipeline.js":
/*!******************************************************************!*\
  !*** ./lib/@dimforge/rapier3d/pipeline/debug_render_pipeline.js ***!
  \******************************************************************/
/*! exports provided: DebugRenderBuffers, DebugRenderPipeline */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DebugRenderBuffers\", function() { return DebugRenderBuffers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DebugRenderPipeline\", function() { return DebugRenderPipeline; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n\n/**\n * The vertex and color buffers for debug-redering the physics scene.\n */\nclass DebugRenderBuffers {\n  constructor(vertices, colors) {\n    this.vertices = vertices;\n    this.colors = colors;\n  }\n}\n/**\n * A pipeline for rendering the physics scene.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `debugRenderPipeline.free()`\n * once you are done using it (and all the rigid-bodies it created).\n */\nclass DebugRenderPipeline {\n  constructor(raw) {\n    this.raw = raw || new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawDebugRenderPipeline\"]();\n  }\n  /**\n   * Release the WASM memory occupied by this serialization pipeline.\n   */\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n    this.vertices = undefined;\n    this.colors = undefined;\n  }\n  render(bodies, colliders, impulse_joints, multibody_joints, narrow_phase) {\n    this.raw.render(bodies.raw, colliders.raw, impulse_joints.raw, multibody_joints.raw, narrow_phase.raw);\n    this.vertices = this.raw.vertices();\n    this.colors = this.raw.colors();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3BpcGVsaW5lL2RlYnVnX3JlbmRlcl9waXBlbGluZS50cz9mODQyIl0sIm5hbWVzIjpbIkRlYnVnUmVuZGVyQnVmZmVycyIsImNvbnN0cnVjdG9yIiwidmVydGljZXMiLCJjb2xvcnMiLCJEZWJ1Z1JlbmRlclBpcGVsaW5lIiwicmF3IiwiUmF3RGVidWdSZW5kZXJQaXBlbGluZSIsImZyZWUiLCJ1bmRlZmluZWQiLCJyZW5kZXIiLCJib2RpZXMiLCJjb2xsaWRlcnMiLCJpbXB1bHNlX2pvaW50cyIsIm11bHRpYm9keV9qb2ludHMiLCJuYXJyb3dfcGhhc2UiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTZDO0FBVzdDOzs7QUFHTSxNQUFPQSxrQkFBa0I7RUFlM0JDLFlBQVlDLFFBQXNCLEVBQUVDLE1BQW9CO0lBQ3BELElBQUksQ0FBQ0QsUUFBUSxHQUFHQSxRQUFRO0lBQ3hCLElBQUksQ0FBQ0MsTUFBTSxHQUFHQSxNQUFNO0VBQ3hCOztBQUdKOzs7Ozs7QUFNTSxNQUFPQyxtQkFBbUI7RUFpQjVCSCxZQUFZSSxHQUE0QjtJQUNwQyxJQUFJLENBQUNBLEdBQUcsR0FBR0EsR0FBRyxJQUFJLElBQUlDLDJEQUFzQixFQUFFO0VBQ2xEO0VBZEE7OztFQUdBQyxJQUFJQSxDQUFBO0lBQ0EsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDRixHQUFHLEVBQUU7TUFDWixJQUFJLENBQUNBLEdBQUcsQ0FBQ0UsSUFBSSxFQUFFOztJQUVuQixJQUFJLENBQUNGLEdBQUcsR0FBR0csU0FBUztJQUNwQixJQUFJLENBQUNOLFFBQVEsR0FBR00sU0FBUztJQUN6QixJQUFJLENBQUNMLE1BQU0sR0FBR0ssU0FBUztFQUMzQjtFQU1PQyxNQUFNQSxDQUNUQyxNQUFvQixFQUNwQkMsU0FBc0IsRUFDdEJDLGNBQStCLEVBQy9CQyxnQkFBbUMsRUFDbkNDLFlBQXlCO0lBRXpCLElBQUksQ0FBQ1QsR0FBRyxDQUFDSSxNQUFNLENBQ1hDLE1BQU0sQ0FBQ0wsR0FBRyxFQUNWTSxTQUFTLENBQUNOLEdBQUcsRUFDYk8sY0FBYyxDQUFDUCxHQUFHLEVBQ2xCUSxnQkFBZ0IsQ0FBQ1IsR0FBRyxFQUNwQlMsWUFBWSxDQUFDVCxHQUFHLENBQ25CO0lBQ0QsSUFBSSxDQUFDSCxRQUFRLEdBQUcsSUFBSSxDQUFDRyxHQUFHLENBQUNILFFBQVEsRUFBRTtJQUNuQyxJQUFJLENBQUNDLE1BQU0sR0FBRyxJQUFJLENBQUNFLEdBQUcsQ0FBQ0YsTUFBTSxFQUFFO0VBQ25DIiwiZmlsZSI6Ii4vbGliL0BkaW1mb3JnZS9yYXBpZXIzZC9waXBlbGluZS9kZWJ1Z19yZW5kZXJfcGlwZWxpbmUuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/pipeline/debug_render_pipeline.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/pipeline/event_queue.js":
/*!********************************************************!*\
  !*** ./lib/@dimforge/rapier3d/pipeline/event_queue.js ***!
  \********************************************************/
/*! exports provided: ActiveEvents, TempContactForceEvent, EventQueue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActiveEvents\", function() { return ActiveEvents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TempContactForceEvent\", function() { return TempContactForceEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventQueue\", function() { return EventQueue; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n\n\n/**\n * Flags indicating what events are enabled for colliders.\n */\nvar ActiveEvents;\n(function (ActiveEvents) {\n  ActiveEvents[ActiveEvents[\"NONE\"] = 0] = \"NONE\";\n  /**\n   * Enable collision events.\n   */\n  ActiveEvents[ActiveEvents[\"COLLISION_EVENTS\"] = 1] = \"COLLISION_EVENTS\";\n  /**\n   * Enable contact force events.\n   */\n  ActiveEvents[ActiveEvents[\"CONTACT_FORCE_EVENTS\"] = 2] = \"CONTACT_FORCE_EVENTS\";\n})(ActiveEvents || (ActiveEvents = {}));\n/**\n * Event occurring when the sum of the magnitudes of the\n * contact forces between two colliders exceed a threshold.\n *\n * This object should **not** be stored anywhere. Its properties can only be\n * read from within the closure given to `EventHandler.drainContactForceEvents`.\n */\nclass TempContactForceEvent {\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n  }\n  /**\n   * The first collider involved in the contact.\n   */\n  collider1() {\n    return this.raw.collider1();\n  }\n  /**\n   * The second collider involved in the contact.\n   */\n  collider2() {\n    return this.raw.collider2();\n  }\n  /**\n   * The sum of all the forces between the two colliders.\n   */\n  totalForce() {\n    return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(this.raw.total_force());\n  }\n  /**\n   * The sum of the magnitudes of each force between the two colliders.\n   *\n   * Note that this is **not** the same as the magnitude of `self.total_force`.\n   * Here we are summing the magnitude of all the forces, instead of taking\n   * the magnitude of their sum.\n   */\n  totalForceMagnitude() {\n    return this.raw.total_force_magnitude();\n  }\n  /**\n   * The world-space (unit) direction of the force with strongest magnitude.\n   */\n  maxForceDirection() {\n    return _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].fromRaw(this.raw.max_force_direction());\n  }\n  /**\n   * The magnitude of the largest force at a contact point of this contact pair.\n   */\n  maxForceMagnitude() {\n    return this.raw.max_force_magnitude();\n  }\n}\n/**\n * A structure responsible for collecting events generated\n * by the physics engine.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `eventQueue.free()`\n * once you are done using it.\n */\nclass EventQueue {\n  /**\n   * Creates a new event collector.\n   *\n   * @param autoDrain -setting this to `true` is strongly recommended. If true, the collector will\n   * be automatically drained before each `world.step(collector)`. If false, the collector will\n   * keep all events in memory unless it is manually drained/cleared; this may lead to unbounded use of\n   * RAM if no drain is performed.\n   */\n  constructor(autoDrain, raw) {\n    this.raw = raw || new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawEventQueue\"](autoDrain);\n  }\n  /**\n   * Release the WASM memory occupied by this event-queue.\n   */\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n  }\n  /**\n   * Applies the given javascript closure on each collision event of this collector, then clear\n   * the internal collision event buffer.\n   *\n   * @param f - JavaScript closure applied to each collision event. The\n   * closure must take three arguments: two integers representing the handles of the colliders\n   * involved in the collision, and a boolean indicating if the collision started (true) or stopped\n   * (false).\n   */\n  drainCollisionEvents(f) {\n    this.raw.drainCollisionEvents(f);\n  }\n  /**\n   * Applies the given javascript closure on each contact force event of this collector, then clear\n   * the internal collision event buffer.\n   *\n   * @param f - JavaScript closure applied to each collision event. The\n   *            closure must take one `TempContactForceEvent` argument.\n   */\n  drainContactForceEvents(f) {\n    let event = new TempContactForceEvent();\n    this.raw.drainContactForceEvents(raw => {\n      event.raw = raw;\n      f(event);\n      event.free();\n    });\n  }\n  /**\n   * Removes all events contained by this collector\n   */\n  clear() {\n    this.raw.clear();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3BpcGVsaW5lL2V2ZW50X3F1ZXVlLnRzP2UxMTkiXSwibmFtZXMiOlsiQWN0aXZlRXZlbnRzIiwiVGVtcENvbnRhY3RGb3JjZUV2ZW50IiwiZnJlZSIsInJhdyIsInVuZGVmaW5lZCIsImNvbGxpZGVyMSIsImNvbGxpZGVyMiIsInRvdGFsRm9yY2UiLCJWZWN0b3JPcHMiLCJmcm9tUmF3IiwidG90YWxfZm9yY2UiLCJ0b3RhbEZvcmNlTWFnbml0dWRlIiwidG90YWxfZm9yY2VfbWFnbml0dWRlIiwibWF4Rm9yY2VEaXJlY3Rpb24iLCJtYXhfZm9yY2VfZGlyZWN0aW9uIiwibWF4Rm9yY2VNYWduaXR1ZGUiLCJtYXhfZm9yY2VfbWFnbml0dWRlIiwiRXZlbnRRdWV1ZSIsImNvbnN0cnVjdG9yIiwiYXV0b0RyYWluIiwiUmF3RXZlbnRRdWV1ZSIsImRyYWluQ29sbGlzaW9uRXZlbnRzIiwiZiIsImRyYWluQ29udGFjdEZvcmNlRXZlbnRzIiwiZXZlbnQiLCJjbGVhciJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTBEO0FBR2pCO0FBRXpDOzs7QUFHQSxJQUFZQSxZQVVYO0FBVkQsV0FBWUEsWUFBWTtFQUNwQkEsWUFBQSxDQUFBQSxZQUFBLHNCQUFRO0VBQ1I7OztFQUdBQSxZQUFBLENBQUFBLFlBQUEsOENBQXlCO0VBQ3pCOzs7RUFHQUEsWUFBQSxDQUFBQSxZQUFBLHNEQUE2QjtBQUNqQyxDQUFDLEVBVldBLFlBQVksS0FBWkEsWUFBWTtBQVl4Qjs7Ozs7OztBQU9NLE1BQU9DLHFCQUFxQjtFQUd2QkMsSUFBSUEsQ0FBQTtJQUNQLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQ0MsR0FBRyxFQUFFO01BQ1osSUFBSSxDQUFDQSxHQUFHLENBQUNELElBQUksRUFBRTs7SUFFbkIsSUFBSSxDQUFDQyxHQUFHLEdBQUdDLFNBQVM7RUFDeEI7RUFFQTs7O0VBR09DLFNBQVNBLENBQUE7SUFDWixPQUFPLElBQUksQ0FBQ0YsR0FBRyxDQUFDRSxTQUFTLEVBQUU7RUFDL0I7RUFFQTs7O0VBR09DLFNBQVNBLENBQUE7SUFDWixPQUFPLElBQUksQ0FBQ0gsR0FBRyxDQUFDRyxTQUFTLEVBQUU7RUFDL0I7RUFFQTs7O0VBR09DLFVBQVVBLENBQUE7SUFDYixPQUFPQywrQ0FBUyxDQUFDQyxPQUFPLENBQUMsSUFBSSxDQUFDTixHQUFHLENBQUNPLFdBQVcsRUFBRSxDQUFDO0VBQ3BEO0VBRUE7Ozs7Ozs7RUFPT0MsbUJBQW1CQSxDQUFBO0lBQ3RCLE9BQU8sSUFBSSxDQUFDUixHQUFHLENBQUNTLHFCQUFxQixFQUFFO0VBQzNDO0VBRUE7OztFQUdPQyxpQkFBaUJBLENBQUE7SUFDcEIsT0FBT0wsK0NBQVMsQ0FBQ0MsT0FBTyxDQUFDLElBQUksQ0FBQ04sR0FBRyxDQUFDVyxtQkFBbUIsRUFBRSxDQUFDO0VBQzVEO0VBRUE7OztFQUdPQyxpQkFBaUJBLENBQUE7SUFDcEIsT0FBTyxJQUFJLENBQUNaLEdBQUcsQ0FBQ2EsbUJBQW1CLEVBQUU7RUFDekM7O0FBR0o7Ozs7Ozs7QUFPTSxNQUFPQyxVQUFVO0VBR25COzs7Ozs7OztFQVFBQyxZQUFZQyxTQUFrQixFQUFFaEIsR0FBbUI7SUFDL0MsSUFBSSxDQUFDQSxHQUFHLEdBQUdBLEdBQUcsSUFBSSxJQUFJaUIsa0RBQWEsQ0FBQ0QsU0FBUyxDQUFDO0VBQ2xEO0VBRUE7OztFQUdPakIsSUFBSUEsQ0FBQTtJQUNQLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQ0MsR0FBRyxFQUFFO01BQ1osSUFBSSxDQUFDQSxHQUFHLENBQUNELElBQUksRUFBRTs7SUFFbkIsSUFBSSxDQUFDQyxHQUFHLEdBQUdDLFNBQVM7RUFDeEI7RUFFQTs7Ozs7Ozs7O0VBU09pQixvQkFBb0JBLENBQ3ZCQyxDQUlTO0lBRVQsSUFBSSxDQUFDbkIsR0FBRyxDQUFDa0Isb0JBQW9CLENBQUNDLENBQUMsQ0FBQztFQUNwQztFQUVBOzs7Ozs7O0VBT09DLHVCQUF1QkEsQ0FBQ0QsQ0FBeUM7SUFDcEUsSUFBSUUsS0FBSyxHQUFHLElBQUl2QixxQkFBcUIsRUFBRTtJQUN2QyxJQUFJLENBQUNFLEdBQUcsQ0FBQ29CLHVCQUF1QixDQUFFcEIsR0FBeUIsSUFBSTtNQUMzRHFCLEtBQUssQ0FBQ3JCLEdBQUcsR0FBR0EsR0FBRztNQUNmbUIsQ0FBQyxDQUFDRSxLQUFLLENBQUM7TUFDUkEsS0FBSyxDQUFDdEIsSUFBSSxFQUFFO0lBQ2hCLENBQUMsQ0FBQztFQUNOO0VBRUE7OztFQUdPdUIsS0FBS0EsQ0FBQTtJQUNSLElBQUksQ0FBQ3RCLEdBQUcsQ0FBQ3NCLEtBQUssRUFBRTtFQUNwQiIsImZpbGUiOiIuL2xpYi9AZGltZm9yZ2UvcmFwaWVyM2QvcGlwZWxpbmUvZXZlbnRfcXVldWUuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/pipeline/event_queue.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/pipeline/index.js":
/*!**************************************************!*\
  !*** ./lib/@dimforge/rapier3d/pipeline/index.js ***!
  \**************************************************/
/*! exports provided: World, PhysicsPipeline, SerializationPipeline, ActiveEvents, TempContactForceEvent, EventQueue, ActiveHooks, SolverFlags, DebugRenderBuffers, DebugRenderPipeline, QueryFilterFlags, QueryPipeline */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _world__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./world */ \"./lib/@dimforge/rapier3d/pipeline/world.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"World\", function() { return _world__WEBPACK_IMPORTED_MODULE_0__[\"World\"]; });\n\n/* harmony import */ var _physics_pipeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./physics_pipeline */ \"./lib/@dimforge/rapier3d/pipeline/physics_pipeline.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PhysicsPipeline\", function() { return _physics_pipeline__WEBPACK_IMPORTED_MODULE_1__[\"PhysicsPipeline\"]; });\n\n/* harmony import */ var _serialization_pipeline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serialization_pipeline */ \"./lib/@dimforge/rapier3d/pipeline/serialization_pipeline.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SerializationPipeline\", function() { return _serialization_pipeline__WEBPACK_IMPORTED_MODULE_2__[\"SerializationPipeline\"]; });\n\n/* harmony import */ var _event_queue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./event_queue */ \"./lib/@dimforge/rapier3d/pipeline/event_queue.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ActiveEvents\", function() { return _event_queue__WEBPACK_IMPORTED_MODULE_3__[\"ActiveEvents\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TempContactForceEvent\", function() { return _event_queue__WEBPACK_IMPORTED_MODULE_3__[\"TempContactForceEvent\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EventQueue\", function() { return _event_queue__WEBPACK_IMPORTED_MODULE_3__[\"EventQueue\"]; });\n\n/* harmony import */ var _physics_hooks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./physics_hooks */ \"./lib/@dimforge/rapier3d/pipeline/physics_hooks.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ActiveHooks\", function() { return _physics_hooks__WEBPACK_IMPORTED_MODULE_4__[\"ActiveHooks\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SolverFlags\", function() { return _physics_hooks__WEBPACK_IMPORTED_MODULE_4__[\"SolverFlags\"]; });\n\n/* harmony import */ var _debug_render_pipeline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./debug_render_pipeline */ \"./lib/@dimforge/rapier3d/pipeline/debug_render_pipeline.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DebugRenderBuffers\", function() { return _debug_render_pipeline__WEBPACK_IMPORTED_MODULE_5__[\"DebugRenderBuffers\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DebugRenderPipeline\", function() { return _debug_render_pipeline__WEBPACK_IMPORTED_MODULE_5__[\"DebugRenderPipeline\"]; });\n\n/* harmony import */ var _query_pipeline__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./query_pipeline */ \"./lib/@dimforge/rapier3d/pipeline/query_pipeline.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"QueryFilterFlags\", function() { return _query_pipeline__WEBPACK_IMPORTED_MODULE_6__[\"QueryFilterFlags\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"QueryPipeline\", function() { return _query_pipeline__WEBPACK_IMPORTED_MODULE_6__[\"QueryPipeline\"]; });\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3BpcGVsaW5lL2luZGV4LnRzPzliM2EiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUF1QjtBQUNXO0FBQ007QUFDWDtBQUNFO0FBQ1EiLCJmaWxlIjoiLi9saWIvQGRpbWZvcmdlL3JhcGllcjNkL3BpcGVsaW5lL2luZGV4LmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/pipeline/index.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/pipeline/physics_hooks.js":
/*!**********************************************************!*\
  !*** ./lib/@dimforge/rapier3d/pipeline/physics_hooks.js ***!
  \**********************************************************/
/*! exports provided: ActiveHooks, SolverFlags */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ActiveHooks\", function() { return ActiveHooks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SolverFlags\", function() { return SolverFlags; });\nvar ActiveHooks;\n(function (ActiveHooks) {\n  ActiveHooks[ActiveHooks[\"NONE\"] = 0] = \"NONE\";\n  ActiveHooks[ActiveHooks[\"FILTER_CONTACT_PAIRS\"] = 1] = \"FILTER_CONTACT_PAIRS\";\n  ActiveHooks[ActiveHooks[\"FILTER_INTERSECTION_PAIRS\"] = 2] = \"FILTER_INTERSECTION_PAIRS\";\n  // MODIFY_SOLVER_CONTACTS = 0b0100, /* Not supported yet in JS. */\n})(ActiveHooks || (ActiveHooks = {}));\nvar SolverFlags;\n(function (SolverFlags) {\n  SolverFlags[SolverFlags[\"EMPTY\"] = 0] = \"EMPTY\";\n  SolverFlags[SolverFlags[\"COMPUTE_IMPULSE\"] = 1] = \"COMPUTE_IMPULSE\";\n})(SolverFlags || (SolverFlags = {}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3BpcGVsaW5lL3BoeXNpY3NfaG9va3MudHM/ZmFkMyJdLCJuYW1lcyI6WyJBY3RpdmVIb29rcyIsIlNvbHZlckZsYWdzIl0sIm1hcHBpbmdzIjoiQUFHQTtBQUFBO0FBQUE7QUFBQSxJQUFZQSxXQUtYO0FBTEQsV0FBWUEsV0FBVztFQUNuQkEsV0FBQSxDQUFBQSxXQUFBLHNCQUFRO0VBQ1JBLFdBQUEsQ0FBQUEsV0FBQSxzREFBNkI7RUFDN0JBLFdBQUEsQ0FBQUEsV0FBQSxnRUFBa0M7RUFDbEM7QUFDSixDQUFDLEVBTFdBLFdBQVcsS0FBWEEsV0FBVztBQU92QixJQUFZQyxXQUdYO0FBSEQsV0FBWUEsV0FBVztFQUNuQkEsV0FBQSxDQUFBQSxXQUFBLHdCQUFhO0VBQ2JBLFdBQUEsQ0FBQUEsV0FBQSw0Q0FBdUI7QUFDM0IsQ0FBQyxFQUhXQSxXQUFXLEtBQVhBLFdBQVciLCJmaWxlIjoiLi9saWIvQGRpbWZvcmdlL3JhcGllcjNkL3BpcGVsaW5lL3BoeXNpY3NfaG9va3MuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/pipeline/physics_hooks.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/pipeline/physics_pipeline.js":
/*!*************************************************************!*\
  !*** ./lib/@dimforge/rapier3d/pipeline/physics_pipeline.js ***!
  \*************************************************************/
/*! exports provided: PhysicsPipeline */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PhysicsPipeline\", function() { return PhysicsPipeline; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n\n\nclass PhysicsPipeline {\n  constructor(raw) {\n    this.raw = raw || new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawPhysicsPipeline\"]();\n  }\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n  }\n  step(gravity, integrationParameters, islands, broadPhase, narrowPhase, bodies, colliders, impulseJoints, multibodyJoints, ccdSolver, eventQueue, hooks) {\n    let rawG = _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].intoRaw(gravity);\n    if (!!eventQueue) {\n      this.raw.stepWithEvents(rawG, integrationParameters.raw, islands.raw, broadPhase.raw, narrowPhase.raw, bodies.raw, colliders.raw, impulseJoints.raw, multibodyJoints.raw, ccdSolver.raw, eventQueue.raw, hooks, !!hooks ? hooks.filterContactPair : null, !!hooks ? hooks.filterIntersectionPair : null);\n    } else {\n      this.raw.step(rawG, integrationParameters.raw, islands.raw, broadPhase.raw, narrowPhase.raw, bodies.raw, colliders.raw, impulseJoints.raw, multibodyJoints.raw, ccdSolver.raw);\n    }\n    rawG.free();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3BpcGVsaW5lL3BoeXNpY3NfcGlwZWxpbmUudHM/MzY2MCJdLCJuYW1lcyI6WyJQaHlzaWNzUGlwZWxpbmUiLCJjb25zdHJ1Y3RvciIsInJhdyIsIlJhd1BoeXNpY3NQaXBlbGluZSIsImZyZWUiLCJ1bmRlZmluZWQiLCJzdGVwIiwiZ3Jhdml0eSIsImludGVncmF0aW9uUGFyYW1ldGVycyIsImlzbGFuZHMiLCJicm9hZFBoYXNlIiwibmFycm93UGhhc2UiLCJib2RpZXMiLCJjb2xsaWRlcnMiLCJpbXB1bHNlSm9pbnRzIiwibXVsdGlib2R5Sm9pbnRzIiwiY2NkU29sdmVyIiwiZXZlbnRRdWV1ZSIsImhvb2tzIiwicmF3RyIsIlZlY3Rvck9wcyIsImludG9SYXciLCJzdGVwV2l0aEV2ZW50cyIsImZpbHRlckNvbnRhY3RQYWlyIiwiZmlsdGVySW50ZXJzZWN0aW9uUGFpciJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBeUM7QUFDQTtBQW1CbkMsTUFBT0EsZUFBZTtFQVV4QkMsWUFBWUMsR0FBd0I7SUFDaEMsSUFBSSxDQUFDQSxHQUFHLEdBQUdBLEdBQUcsSUFBSSxJQUFJQyx1REFBa0IsRUFBRTtFQUM5QztFQVRPQyxJQUFJQSxDQUFBO0lBQ1AsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDRixHQUFHLEVBQUU7TUFDWixJQUFJLENBQUNBLEdBQUcsQ0FBQ0UsSUFBSSxFQUFFOztJQUVuQixJQUFJLENBQUNGLEdBQUcsR0FBR0csU0FBUztFQUN4QjtFQU1PQyxJQUFJQSxDQUNQQyxPQUFlLEVBQ2ZDLHFCQUE0QyxFQUM1Q0MsT0FBc0IsRUFDdEJDLFVBQXNCLEVBQ3RCQyxXQUF3QixFQUN4QkMsTUFBb0IsRUFDcEJDLFNBQXNCLEVBQ3RCQyxhQUE4QixFQUM5QkMsZUFBa0MsRUFDbENDLFNBQW9CLEVBQ3BCQyxVQUF1QixFQUN2QkMsS0FBb0I7SUFFcEIsSUFBSUMsSUFBSSxHQUFHQywrQ0FBUyxDQUFDQyxPQUFPLENBQUNkLE9BQU8sQ0FBQztJQUVyQyxJQUFJLENBQUMsQ0FBQ1UsVUFBVSxFQUFFO01BQ2QsSUFBSSxDQUFDZixHQUFHLENBQUNvQixjQUFjLENBQ25CSCxJQUFJLEVBQ0pYLHFCQUFxQixDQUFDTixHQUFHLEVBQ3pCTyxPQUFPLENBQUNQLEdBQUcsRUFDWFEsVUFBVSxDQUFDUixHQUFHLEVBQ2RTLFdBQVcsQ0FBQ1QsR0FBRyxFQUNmVSxNQUFNLENBQUNWLEdBQUcsRUFDVlcsU0FBUyxDQUFDWCxHQUFHLEVBQ2JZLGFBQWEsQ0FBQ1osR0FBRyxFQUNqQmEsZUFBZSxDQUFDYixHQUFHLEVBQ25CYyxTQUFTLENBQUNkLEdBQUcsRUFDYmUsVUFBVSxDQUFDZixHQUFHLEVBQ2RnQixLQUFLLEVBQ0wsQ0FBQyxDQUFDQSxLQUFLLEdBQUdBLEtBQUssQ0FBQ0ssaUJBQWlCLEdBQUcsSUFBSSxFQUN4QyxDQUFDLENBQUNMLEtBQUssR0FBR0EsS0FBSyxDQUFDTSxzQkFBc0IsR0FBRyxJQUFJLENBQ2hEO0tBQ0osTUFBTTtNQUNILElBQUksQ0FBQ3RCLEdBQUcsQ0FBQ0ksSUFBSSxDQUNUYSxJQUFJLEVBQ0pYLHFCQUFxQixDQUFDTixHQUFHLEVBQ3pCTyxPQUFPLENBQUNQLEdBQUcsRUFDWFEsVUFBVSxDQUFDUixHQUFHLEVBQ2RTLFdBQVcsQ0FBQ1QsR0FBRyxFQUNmVSxNQUFNLENBQUNWLEdBQUcsRUFDVlcsU0FBUyxDQUFDWCxHQUFHLEVBQ2JZLGFBQWEsQ0FBQ1osR0FBRyxFQUNqQmEsZUFBZSxDQUFDYixHQUFHLEVBQ25CYyxTQUFTLENBQUNkLEdBQUcsQ0FDaEI7O0lBR0xpQixJQUFJLENBQUNmLElBQUksRUFBRTtFQUNmIiwiZmlsZSI6Ii4vbGliL0BkaW1mb3JnZS9yYXBpZXIzZC9waXBlbGluZS9waHlzaWNzX3BpcGVsaW5lLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/pipeline/physics_pipeline.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/pipeline/query_pipeline.js":
/*!***********************************************************!*\
  !*** ./lib/@dimforge/rapier3d/pipeline/query_pipeline.js ***!
  \***********************************************************/
/*! exports provided: QueryFilterFlags, QueryPipeline */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"QueryFilterFlags\", function() { return QueryFilterFlags; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"QueryPipeline\", function() { return QueryPipeline; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../geometry */ \"./lib/@dimforge/rapier3d/geometry/index.js\");\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n\n\n\n// NOTE: must match the bits in the QueryFilterFlags on the Rust side.\n/**\n * Flags for excluding whole sets of colliders from a scene query.\n */\nvar QueryFilterFlags;\n(function (QueryFilterFlags) {\n  /**\n   * Exclude from the query any collider attached to a fixed rigid-body and colliders with no rigid-body attached.\n   */\n  QueryFilterFlags[QueryFilterFlags[\"EXCLUDE_FIXED\"] = 1] = \"EXCLUDE_FIXED\";\n  /**\n   * Exclude from the query any collider attached to a dynamic rigid-body.\n   */\n  QueryFilterFlags[QueryFilterFlags[\"EXCLUDE_KINEMATIC\"] = 2] = \"EXCLUDE_KINEMATIC\";\n  /**\n   * Exclude from the query any collider attached to a kinematic rigid-body.\n   */\n  QueryFilterFlags[QueryFilterFlags[\"EXCLUDE_DYNAMIC\"] = 4] = \"EXCLUDE_DYNAMIC\";\n  /**\n   * Exclude from the query any collider that is a sensor.\n   */\n  QueryFilterFlags[QueryFilterFlags[\"EXCLUDE_SENSORS\"] = 8] = \"EXCLUDE_SENSORS\";\n  /**\n   * Exclude from the query any collider that is not a sensor.\n   */\n  QueryFilterFlags[QueryFilterFlags[\"EXCLUDE_SOLIDS\"] = 16] = \"EXCLUDE_SOLIDS\";\n  /**\n   * Excludes all colliders not attached to a dynamic rigid-body.\n   */\n  QueryFilterFlags[QueryFilterFlags[\"ONLY_DYNAMIC\"] = 3] = \"ONLY_DYNAMIC\";\n  /**\n   * Excludes all colliders not attached to a kinematic rigid-body.\n   */\n  QueryFilterFlags[QueryFilterFlags[\"ONLY_KINEMATIC\"] = 5] = \"ONLY_KINEMATIC\";\n  /**\n   * Exclude all colliders attached to a non-fixed rigid-body\n   * (this will not exclude colliders not attached to any rigid-body).\n   */\n  QueryFilterFlags[QueryFilterFlags[\"ONLY_FIXED\"] = 6] = \"ONLY_FIXED\";\n})(QueryFilterFlags || (QueryFilterFlags = {}));\n/**\n * A pipeline for performing queries on all the colliders of a scene.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `queryPipeline.free()`\n * once you are done using it (and all the rigid-bodies it created).\n */\nclass QueryPipeline {\n  constructor(raw) {\n    this.raw = raw || new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawQueryPipeline\"]();\n  }\n  /**\n   * Release the WASM memory occupied by this query pipeline.\n   */\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n  }\n  /**\n   * Updates the acceleration structure of the query pipeline.\n   * @param bodies - The set of rigid-bodies taking part in this pipeline.\n   * @param colliders - The set of colliders taking part in this pipeline.\n   */\n  update(bodies, colliders) {\n    this.raw.update(bodies.raw, colliders.raw);\n  }\n  /**\n   * Find the closest intersection between a ray and a set of collider.\n   *\n   * @param colliders - The set of colliders taking part in this pipeline.\n   * @param ray - The ray to cast.\n   * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n   *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n   * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n   *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n   *   whereas `false` implies that all shapes are hollow for this ray-cast.\n   * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n   * @param filter - The callback to filter out which collider will be hit.\n   */\n  castRay(bodies, colliders, ray, maxToi, solid, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    let rawOrig = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(ray.origin);\n    let rawDir = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(ray.dir);\n    let result = _geometry__WEBPACK_IMPORTED_MODULE_1__[\"RayColliderHit\"].fromRaw(colliders, this.raw.castRay(bodies.raw, colliders.raw, rawOrig, rawDir, maxToi, solid, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate));\n    rawOrig.free();\n    rawDir.free();\n    return result;\n  }\n  /**\n   * Find the closest intersection between a ray and a set of collider.\n   *\n   * This also computes the normal at the hit point.\n   * @param colliders - The set of colliders taking part in this pipeline.\n   * @param ray - The ray to cast.\n   * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n   *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n   * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n   *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n   *   whereas `false` implies that all shapes are hollow for this ray-cast.\n   * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n   */\n  castRayAndGetNormal(bodies, colliders, ray, maxToi, solid, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    let rawOrig = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(ray.origin);\n    let rawDir = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(ray.dir);\n    let result = _geometry__WEBPACK_IMPORTED_MODULE_1__[\"RayColliderIntersection\"].fromRaw(colliders, this.raw.castRayAndGetNormal(bodies.raw, colliders.raw, rawOrig, rawDir, maxToi, solid, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate));\n    rawOrig.free();\n    rawDir.free();\n    return result;\n  }\n  /**\n   * Cast a ray and collects all the intersections between a ray and the scene.\n   *\n   * @param colliders - The set of colliders taking part in this pipeline.\n   * @param ray - The ray to cast.\n   * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n   *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n   * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n   *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n   *   whereas `false` implies that all shapes are hollow for this ray-cast.\n   * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n   * @param callback - The callback called once per hit (in no particular order) between a ray and a collider.\n   *   If this callback returns `false`, then the cast will stop and no further hits will be detected/reported.\n   */\n  intersectionsWithRay(bodies, colliders, ray, maxToi, solid, callback, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    let rawOrig = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(ray.origin);\n    let rawDir = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(ray.dir);\n    let rawCallback = rawInter => {\n      return callback(_geometry__WEBPACK_IMPORTED_MODULE_1__[\"RayColliderIntersection\"].fromRaw(colliders, rawInter));\n    };\n    this.raw.intersectionsWithRay(bodies.raw, colliders.raw, rawOrig, rawDir, maxToi, solid, rawCallback, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate);\n    rawOrig.free();\n    rawDir.free();\n  }\n  /**\n   * Gets the handle of up to one collider intersecting the given shape.\n   *\n   * @param colliders - The set of colliders taking part in this pipeline.\n   * @param shapePos - The position of the shape used for the intersection test.\n   * @param shapeRot - The orientation of the shape used for the intersection test.\n   * @param shape - The shape used for the intersection test.\n   * @param groups - The bit groups and filter associated to the ray, in order to only\n   *   hit the colliders with collision groups compatible with the ray's group.\n   */\n  intersectionWithShape(bodies, colliders, shapePos, shapeRot, shape, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    let rawPos = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(shapePos);\n    let rawRot = _math__WEBPACK_IMPORTED_MODULE_2__[\"RotationOps\"].intoRaw(shapeRot);\n    let rawShape = shape.intoRaw();\n    let result = this.raw.intersectionWithShape(bodies.raw, colliders.raw, rawPos, rawRot, rawShape, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate);\n    rawPos.free();\n    rawRot.free();\n    rawShape.free();\n    return result;\n  }\n  /**\n   * Find the projection of a point on the closest collider.\n   *\n   * @param colliders - The set of colliders taking part in this pipeline.\n   * @param point - The point to project.\n   * @param solid - If this is set to `true` then the collider shapes are considered to\n   *   be plain (if the point is located inside of a plain shape, its projection is the point\n   *   itself). If it is set to `false` the collider shapes are considered to be hollow\n   *   (if the point is located inside of an hollow shape, it is projected on the shape's\n   *   boundary).\n   * @param groups - The bit groups and filter associated to the point to project, in order to only\n   *   project on colliders with collision groups compatible with the ray's group.\n   */\n  projectPoint(bodies, colliders, point, solid, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    let rawPoint = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(point);\n    let result = _geometry__WEBPACK_IMPORTED_MODULE_1__[\"PointColliderProjection\"].fromRaw(colliders, this.raw.projectPoint(bodies.raw, colliders.raw, rawPoint, solid, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate));\n    rawPoint.free();\n    return result;\n  }\n  /**\n   * Find the projection of a point on the closest collider.\n   *\n   * @param colliders - The set of colliders taking part in this pipeline.\n   * @param point - The point to project.\n   * @param groups - The bit groups and filter associated to the point to project, in order to only\n   *   project on colliders with collision groups compatible with the ray's group.\n   */\n  projectPointAndGetFeature(bodies, colliders, point, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    let rawPoint = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(point);\n    let result = _geometry__WEBPACK_IMPORTED_MODULE_1__[\"PointColliderProjection\"].fromRaw(colliders, this.raw.projectPointAndGetFeature(bodies.raw, colliders.raw, rawPoint, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate));\n    rawPoint.free();\n    return result;\n  }\n  /**\n   * Find all the colliders containing the given point.\n   *\n   * @param colliders - The set of colliders taking part in this pipeline.\n   * @param point - The point used for the containment test.\n   * @param groups - The bit groups and filter associated to the point to test, in order to only\n   *   test on colliders with collision groups compatible with the ray's group.\n   * @param callback - A function called with the handles of each collider with a shape\n   *   containing the `point`.\n   */\n  intersectionsWithPoint(bodies, colliders, point, callback, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    let rawPoint = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(point);\n    this.raw.intersectionsWithPoint(bodies.raw, colliders.raw, rawPoint, callback, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate);\n    rawPoint.free();\n  }\n  /**\n   * Casts a shape at a constant linear velocity and retrieve the first collider it hits.\n   * This is similar to ray-casting except that we are casting a whole shape instead of\n   * just a point (the ray origin).\n   *\n   * @param colliders - The set of colliders taking part in this pipeline.\n   * @param shapePos - The initial position of the shape to cast.\n   * @param shapeRot - The initial rotation of the shape to cast.\n   * @param shapeVel - The constant velocity of the shape to cast (i.e. the cast direction).\n   * @param shape - The shape to cast.\n   * @param targetDistance − If the shape moves closer to this distance from a collider, a hit\n   *                       will be returned.\n   * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n   *   limits the distance traveled by the shape to `shapeVel.norm() * maxToi`.\n   * @param stopAtPenetration - If set to `false`, the linear shape-cast won’t immediately stop if\n   *   the shape is penetrating another shape at its starting point **and** its trajectory is such\n   *   that it’s on a path to exist that penetration state.\n   * @param groups - The bit groups and filter associated to the shape to cast, in order to only\n   *   test on colliders with collision groups compatible with this group.\n   */\n  castShape(bodies, colliders, shapePos, shapeRot, shapeVel, shape, targetDistance, maxToi, stopAtPenetration, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    let rawPos = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(shapePos);\n    let rawRot = _math__WEBPACK_IMPORTED_MODULE_2__[\"RotationOps\"].intoRaw(shapeRot);\n    let rawVel = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(shapeVel);\n    let rawShape = shape.intoRaw();\n    let result = _geometry__WEBPACK_IMPORTED_MODULE_1__[\"ColliderShapeCastHit\"].fromRaw(colliders, this.raw.castShape(bodies.raw, colliders.raw, rawPos, rawRot, rawVel, rawShape, targetDistance, maxToi, stopAtPenetration, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate));\n    rawPos.free();\n    rawRot.free();\n    rawVel.free();\n    rawShape.free();\n    return result;\n  }\n  /**\n   * Retrieve all the colliders intersecting the given shape.\n   *\n   * @param colliders - The set of colliders taking part in this pipeline.\n   * @param shapePos - The position of the shape to test.\n   * @param shapeRot - The orientation of the shape to test.\n   * @param shape - The shape to test.\n   * @param groups - The bit groups and filter associated to the shape to test, in order to only\n   *   test on colliders with collision groups compatible with this group.\n   * @param callback - A function called with the handles of each collider intersecting the `shape`.\n   */\n  intersectionsWithShape(bodies, colliders, shapePos, shapeRot, shape, callback, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    let rawPos = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(shapePos);\n    let rawRot = _math__WEBPACK_IMPORTED_MODULE_2__[\"RotationOps\"].intoRaw(shapeRot);\n    let rawShape = shape.intoRaw();\n    this.raw.intersectionsWithShape(bodies.raw, colliders.raw, rawPos, rawRot, rawShape, callback, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate);\n    rawPos.free();\n    rawRot.free();\n    rawShape.free();\n  }\n  /**\n   * Finds the handles of all the colliders with an AABB intersecting the given AABB.\n   *\n   * @param aabbCenter - The center of the AABB to test.\n   * @param aabbHalfExtents - The half-extents of the AABB to test.\n   * @param callback - The callback that will be called with the handles of all the colliders\n   *                   currently intersecting the given AABB.\n   */\n  collidersWithAabbIntersectingAabb(aabbCenter, aabbHalfExtents, callback) {\n    let rawCenter = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(aabbCenter);\n    let rawHalfExtents = _math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].intoRaw(aabbHalfExtents);\n    this.raw.collidersWithAabbIntersectingAabb(rawCenter, rawHalfExtents, callback);\n    rawCenter.free();\n    rawHalfExtents.free();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/pipeline/query_pipeline.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/pipeline/serialization_pipeline.js":
/*!*******************************************************************!*\
  !*** ./lib/@dimforge/rapier3d/pipeline/serialization_pipeline.js ***!
  \*******************************************************************/
/*! exports provided: SerializationPipeline */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SerializationPipeline\", function() { return SerializationPipeline; });\n/* harmony import */ var _raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../raw */ \"./lib/@dimforge/rapier3d/raw.js\");\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n/* harmony import */ var _world__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./world */ \"./lib/@dimforge/rapier3d/pipeline/world.js\");\n\n\n\n/**\n * A pipeline for serializing the physics scene.\n *\n * To avoid leaking WASM resources, this MUST be freed manually with `queryPipeline.free()`\n * once you are done using it (and all the rigid-bodies it created).\n */\nclass SerializationPipeline {\n  constructor(raw) {\n    this.raw = raw || new _raw__WEBPACK_IMPORTED_MODULE_0__[\"RawSerializationPipeline\"]();\n  }\n  /**\n   * Release the WASM memory occupied by this serialization pipeline.\n   */\n  free() {\n    if (!!this.raw) {\n      this.raw.free();\n    }\n    this.raw = undefined;\n  }\n  /**\n   * Serialize a complete physics state into a single byte array.\n   * @param gravity - The current gravity affecting the simulation.\n   * @param integrationParameters - The integration parameters of the simulation.\n   * @param broadPhase - The broad-phase of the simulation.\n   * @param narrowPhase - The narrow-phase of the simulation.\n   * @param bodies - The rigid-bodies taking part into the simulation.\n   * @param colliders - The colliders taking part into the simulation.\n   * @param impulseJoints - The impulse joints taking part into the simulation.\n   * @param multibodyJoints - The multibody joints taking part into the simulation.\n   */\n  serializeAll(gravity, integrationParameters, islands, broadPhase, narrowPhase, bodies, colliders, impulseJoints, multibodyJoints) {\n    let rawGra = _math__WEBPACK_IMPORTED_MODULE_1__[\"VectorOps\"].intoRaw(gravity);\n    const res = this.raw.serializeAll(rawGra, integrationParameters.raw, islands.raw, broadPhase.raw, narrowPhase.raw, bodies.raw, colliders.raw, impulseJoints.raw, multibodyJoints.raw);\n    rawGra.free();\n    return res;\n  }\n  /**\n   * Deserialize the complete physics state from a single byte array.\n   *\n   * @param data - The byte array to deserialize.\n   */\n  deserializeAll(data) {\n    return _world__WEBPACK_IMPORTED_MODULE_2__[\"World\"].fromRaw(this.raw.deserializeAll(data));\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3BpcGVsaW5lL3NlcmlhbGl6YXRpb25fcGlwZWxpbmUudHM/ODhhMiJdLCJuYW1lcyI6WyJTZXJpYWxpemF0aW9uUGlwZWxpbmUiLCJjb25zdHJ1Y3RvciIsInJhdyIsIlJhd1NlcmlhbGl6YXRpb25QaXBlbGluZSIsImZyZWUiLCJ1bmRlZmluZWQiLCJzZXJpYWxpemVBbGwiLCJncmF2aXR5IiwiaW50ZWdyYXRpb25QYXJhbWV0ZXJzIiwiaXNsYW5kcyIsImJyb2FkUGhhc2UiLCJuYXJyb3dQaGFzZSIsImJvZGllcyIsImNvbGxpZGVycyIsImltcHVsc2VKb2ludHMiLCJtdWx0aWJvZHlKb2ludHMiLCJyYXdHcmEiLCJWZWN0b3JPcHMiLCJpbnRvUmF3IiwicmVzIiwiZGVzZXJpYWxpemVBbGwiLCJkYXRhIiwiV29ybGQiLCJmcm9tUmF3Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQStDO0FBQ047QUFTWjtBQUU3Qjs7Ozs7O0FBTU0sTUFBT0EscUJBQXFCO0VBYTlCQyxZQUFZQyxHQUE4QjtJQUN0QyxJQUFJLENBQUNBLEdBQUcsR0FBR0EsR0FBRyxJQUFJLElBQUlDLDZEQUF3QixFQUFFO0VBQ3BEO0VBWkE7OztFQUdBQyxJQUFJQSxDQUFBO0lBQ0EsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDRixHQUFHLEVBQUU7TUFDWixJQUFJLENBQUNBLEdBQUcsQ0FBQ0UsSUFBSSxFQUFFOztJQUVuQixJQUFJLENBQUNGLEdBQUcsR0FBR0csU0FBUztFQUN4QjtFQU1BOzs7Ozs7Ozs7OztFQVdPQyxZQUFZQSxDQUNmQyxPQUFlLEVBQ2ZDLHFCQUE0QyxFQUM1Q0MsT0FBc0IsRUFDdEJDLFVBQXNCLEVBQ3RCQyxXQUF3QixFQUN4QkMsTUFBb0IsRUFDcEJDLFNBQXNCLEVBQ3RCQyxhQUE4QixFQUM5QkMsZUFBa0M7SUFFbEMsSUFBSUMsTUFBTSxHQUFHQywrQ0FBUyxDQUFDQyxPQUFPLENBQUNYLE9BQU8sQ0FBQztJQUV2QyxNQUFNWSxHQUFHLEdBQUcsSUFBSSxDQUFDakIsR0FBRyxDQUFDSSxZQUFZLENBQzdCVSxNQUFNLEVBQ05SLHFCQUFxQixDQUFDTixHQUFHLEVBQ3pCTyxPQUFPLENBQUNQLEdBQUcsRUFDWFEsVUFBVSxDQUFDUixHQUFHLEVBQ2RTLFdBQVcsQ0FBQ1QsR0FBRyxFQUNmVSxNQUFNLENBQUNWLEdBQUcsRUFDVlcsU0FBUyxDQUFDWCxHQUFHLEVBQ2JZLGFBQWEsQ0FBQ1osR0FBRyxFQUNqQmEsZUFBZSxDQUFDYixHQUFHLENBQ3RCO0lBQ0RjLE1BQU0sQ0FBQ1osSUFBSSxFQUFFO0lBRWIsT0FBT2UsR0FBRztFQUNkO0VBRUE7Ozs7O0VBS09DLGNBQWNBLENBQUNDLElBQWdCO0lBQ2xDLE9BQU9DLDRDQUFLLENBQUNDLE9BQU8sQ0FBQyxJQUFJLENBQUNyQixHQUFHLENBQUNrQixjQUFjLENBQUNDLElBQUksQ0FBQyxDQUFDO0VBQ3ZEIiwiZmlsZSI6Ii4vbGliL0BkaW1mb3JnZS9yYXBpZXIzZC9waXBlbGluZS9zZXJpYWxpemF0aW9uX3BpcGVsaW5lLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/pipeline/serialization_pipeline.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/pipeline/world.js":
/*!**************************************************!*\
  !*** ./lib/@dimforge/rapier3d/pipeline/world.js ***!
  \**************************************************/
/*! exports provided: World */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"World\", function() { return World; });\n/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../geometry */ \"./lib/@dimforge/rapier3d/geometry/index.js\");\n/* harmony import */ var _dynamics__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dynamics */ \"./lib/@dimforge/rapier3d/dynamics/index.js\");\n/* harmony import */ var _math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math */ \"./lib/@dimforge/rapier3d/math.js\");\n/* harmony import */ var _physics_pipeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./physics_pipeline */ \"./lib/@dimforge/rapier3d/pipeline/physics_pipeline.js\");\n/* harmony import */ var _query_pipeline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./query_pipeline */ \"./lib/@dimforge/rapier3d/pipeline/query_pipeline.js\");\n/* harmony import */ var _serialization_pipeline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./serialization_pipeline */ \"./lib/@dimforge/rapier3d/pipeline/serialization_pipeline.js\");\n/* harmony import */ var _debug_render_pipeline__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./debug_render_pipeline */ \"./lib/@dimforge/rapier3d/pipeline/debug_render_pipeline.js\");\n/* harmony import */ var _control__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../control */ \"./lib/@dimforge/rapier3d/control/index.js\");\n\n\n\n\n\n\n\n\n// #if DIM3\n\n// #endif\n/**\n * The physics world.\n *\n * This contains all the data-structures necessary for creating and simulating\n * bodies with contacts, joints, and external forces.\n */\nclass World {\n  constructor(gravity, rawIntegrationParameters, rawIslands, rawBroadPhase, rawNarrowPhase, rawBodies, rawColliders, rawImpulseJoints, rawMultibodyJoints, rawCCDSolver, rawQueryPipeline, rawPhysicsPipeline, rawSerializationPipeline, rawDebugRenderPipeline) {\n    this.gravity = gravity;\n    this.integrationParameters = new _dynamics__WEBPACK_IMPORTED_MODULE_1__[\"IntegrationParameters\"](rawIntegrationParameters);\n    this.islands = new _dynamics__WEBPACK_IMPORTED_MODULE_1__[\"IslandManager\"](rawIslands);\n    this.broadPhase = new _geometry__WEBPACK_IMPORTED_MODULE_0__[\"BroadPhase\"](rawBroadPhase);\n    this.narrowPhase = new _geometry__WEBPACK_IMPORTED_MODULE_0__[\"NarrowPhase\"](rawNarrowPhase);\n    this.bodies = new _dynamics__WEBPACK_IMPORTED_MODULE_1__[\"RigidBodySet\"](rawBodies);\n    this.colliders = new _geometry__WEBPACK_IMPORTED_MODULE_0__[\"ColliderSet\"](rawColliders);\n    this.impulseJoints = new _dynamics__WEBPACK_IMPORTED_MODULE_1__[\"ImpulseJointSet\"](rawImpulseJoints);\n    this.multibodyJoints = new _dynamics__WEBPACK_IMPORTED_MODULE_1__[\"MultibodyJointSet\"](rawMultibodyJoints);\n    this.ccdSolver = new _dynamics__WEBPACK_IMPORTED_MODULE_1__[\"CCDSolver\"](rawCCDSolver);\n    this.queryPipeline = new _query_pipeline__WEBPACK_IMPORTED_MODULE_4__[\"QueryPipeline\"](rawQueryPipeline);\n    this.physicsPipeline = new _physics_pipeline__WEBPACK_IMPORTED_MODULE_3__[\"PhysicsPipeline\"](rawPhysicsPipeline);\n    this.serializationPipeline = new _serialization_pipeline__WEBPACK_IMPORTED_MODULE_5__[\"SerializationPipeline\"](rawSerializationPipeline);\n    this.debugRenderPipeline = new _debug_render_pipeline__WEBPACK_IMPORTED_MODULE_6__[\"DebugRenderPipeline\"](rawDebugRenderPipeline);\n    this.characterControllers = new Set();\n    // #if DIM3\n    this.vehicleControllers = new Set();\n    // #endif\n    this.impulseJoints.finalizeDeserialization(this.bodies);\n    this.bodies.finalizeDeserialization(this.colliders);\n    this.colliders.finalizeDeserialization(this.bodies);\n  }\n  // #endif\n  /**\n   * Release the WASM memory occupied by this physics world.\n   *\n   * All the fields of this physics world will be freed as well,\n   * so there is no need to call their `.free()` methods individually.\n   */\n  free() {\n    this.integrationParameters.free();\n    this.islands.free();\n    this.broadPhase.free();\n    this.narrowPhase.free();\n    this.bodies.free();\n    this.colliders.free();\n    this.impulseJoints.free();\n    this.multibodyJoints.free();\n    this.ccdSolver.free();\n    this.queryPipeline.free();\n    this.physicsPipeline.free();\n    this.serializationPipeline.free();\n    this.debugRenderPipeline.free();\n    this.characterControllers.forEach(controller => controller.free());\n    // #if DIM3\n    this.vehicleControllers.forEach(controller => controller.free());\n    // #endif\n    this.integrationParameters = undefined;\n    this.islands = undefined;\n    this.broadPhase = undefined;\n    this.narrowPhase = undefined;\n    this.bodies = undefined;\n    this.colliders = undefined;\n    this.ccdSolver = undefined;\n    this.impulseJoints = undefined;\n    this.multibodyJoints = undefined;\n    this.queryPipeline = undefined;\n    this.physicsPipeline = undefined;\n    this.serializationPipeline = undefined;\n    this.debugRenderPipeline = undefined;\n    this.characterControllers = undefined;\n    // #if DIM3\n    this.vehicleControllers = undefined;\n    // #endif\n  }\n  static fromRaw(raw) {\n    if (!raw) return null;\n    return new World(_math__WEBPACK_IMPORTED_MODULE_2__[\"VectorOps\"].fromRaw(raw.takeGravity()), raw.takeIntegrationParameters(), raw.takeIslandManager(), raw.takeBroadPhase(), raw.takeNarrowPhase(), raw.takeBodies(), raw.takeColliders(), raw.takeImpulseJoints(), raw.takeMultibodyJoints());\n  }\n  /**\n   * Takes a snapshot of this world.\n   *\n   * Use `World.restoreSnapshot` to create a new physics world with a state identical to\n   * the state when `.takeSnapshot()` is called.\n   */\n  takeSnapshot() {\n    return this.serializationPipeline.serializeAll(this.gravity, this.integrationParameters, this.islands, this.broadPhase, this.narrowPhase, this.bodies, this.colliders, this.impulseJoints, this.multibodyJoints);\n  }\n  /**\n   * Creates a new physics world from a snapshot.\n   *\n   * This new physics world will be an identical copy of the snapshoted physics world.\n   */\n  static restoreSnapshot(data) {\n    let deser = new _serialization_pipeline__WEBPACK_IMPORTED_MODULE_5__[\"SerializationPipeline\"]();\n    return deser.deserializeAll(data);\n  }\n  /**\n   * Computes all the lines (and their colors) needed to render the scene.\n   */\n  debugRender() {\n    this.debugRenderPipeline.render(this.bodies, this.colliders, this.impulseJoints, this.multibodyJoints, this.narrowPhase);\n    return new _debug_render_pipeline__WEBPACK_IMPORTED_MODULE_6__[\"DebugRenderBuffers\"](this.debugRenderPipeline.vertices, this.debugRenderPipeline.colors);\n  }\n  /**\n   * Advance the simulation by one time step.\n   *\n   * All events generated by the physics engine are ignored.\n   *\n   * @param EventQueue - (optional) structure responsible for collecting\n   *   events generated by the physics engine.\n   */\n  step(eventQueue, hooks) {\n    this.physicsPipeline.step(this.gravity, this.integrationParameters, this.islands, this.broadPhase, this.narrowPhase, this.bodies, this.colliders, this.impulseJoints, this.multibodyJoints, this.ccdSolver, eventQueue, hooks);\n    this.queryPipeline.update(this.bodies, this.colliders);\n  }\n  /**\n   * Update colliders positions after rigid-bodies moved.\n   *\n   * When a rigid-body moves, the positions of the colliders attached to it need to be updated. This update is\n   * generally automatically done at the beginning and the end of each simulation step with World.step.\n   * If the positions need to be updated without running a simulation step this method can be called manually.\n   */\n  propagateModifiedBodyPositionsToColliders() {\n    this.bodies.raw.propagateModifiedBodyPositionsToColliders(this.colliders.raw);\n  }\n  /**\n   * Ensure subsequent scene queries take into account the collider positions set before this method is called.\n   *\n   * This does not step the physics simulation forward.\n   */\n  updateSceneQueries() {\n    this.propagateModifiedBodyPositionsToColliders();\n    this.queryPipeline.update(this.bodies, this.colliders);\n  }\n  /**\n   * The current simulation timestep.\n   */\n  get timestep() {\n    return this.integrationParameters.dt;\n  }\n  /**\n   * Sets the new simulation timestep.\n   *\n   * The simulation timestep governs by how much the physics state of the world will\n   * be integrated. A simulation timestep should:\n   * - be as small as possible. Typical values evolve around 0.016 (assuming the chosen unit is milliseconds,\n   * corresponds to the time between two frames of a game running at 60FPS).\n   * - not vary too much during the course of the simulation. A timestep with large variations may\n   * cause instabilities in the simulation.\n   *\n   * @param dt - The timestep length, in seconds.\n   */\n  set timestep(dt) {\n    this.integrationParameters.dt = dt;\n  }\n  /**\n   * The approximate size of most dynamic objects in the scene.\n   *\n   * See the documentation of the `World.lengthUnit` setter for further details.\n   */\n  get lengthUnit() {\n    return this.integrationParameters.lengthUnit;\n  }\n  /**\n   * The approximate size of most dynamic objects in the scene.\n   *\n   * This value is used internally to estimate some length-based tolerance. In particular, the\n   * values `IntegrationParameters.allowedLinearError`,\n   * `IntegrationParameters.maxPenetrationCorrection`,\n   * `IntegrationParameters.predictionDistance`, `RigidBodyActivation.linearThreshold`\n   * are scaled by this value implicitly.\n   *\n   * This value can be understood as the number of units-per-meter in your physical world compared\n   * to a human-sized world in meter. For example, in a 2d game, if your typical object size is 100\n   * pixels, set the `[`Self::length_unit`]` parameter to 100.0. The physics engine will interpret\n   * it as if 100 pixels is equivalent to 1 meter in its various internal threshold.\n   * (default `1.0`).\n   */\n  set lengthUnit(unitsPerMeter) {\n    this.integrationParameters.lengthUnit = unitsPerMeter;\n  }\n  /**\n   * The number of solver iterations run by the constraints solver for calculating forces (default: `4`).\n   */\n  get numSolverIterations() {\n    return this.integrationParameters.numSolverIterations;\n  }\n  /**\n   * Sets the number of solver iterations run by the constraints solver for calculating forces (default: `4`).\n   *\n   * The greater this value is, the most rigid and realistic the physics simulation will be.\n   * However a greater number of iterations is more computationally intensive.\n   *\n   * @param niter - The new number of solver iterations.\n   */\n  set numSolverIterations(niter) {\n    this.integrationParameters.numSolverIterations = niter;\n  }\n  /**\n   * Number of addition friction resolution iteration run during the last solver sub-step (default: `4`).\n   */\n  get numAdditionalFrictionIterations() {\n    return this.integrationParameters.numAdditionalFrictionIterations;\n  }\n  /**\n   * Sets the number of addition friction resolution iteration run during the last solver sub-step (default: `4`).\n   *\n   * The greater this value is, the most realistic friction will be.\n   * However a greater number of iterations is more computationally intensive.\n   *\n   * @param niter - The new number of additional friction iterations.\n   */\n  set numAdditionalFrictionIterations(niter) {\n    this.integrationParameters.numAdditionalFrictionIterations = niter;\n  }\n  /**\n   * Number of internal Project Gauss Seidel (PGS) iterations run at each solver iteration (default: `1`).\n   */\n  get numInternalPgsIterations() {\n    return this.integrationParameters.numInternalPgsIterations;\n  }\n  /**\n   * Sets the Number of internal Project Gauss Seidel (PGS) iterations run at each solver iteration (default: `1`).\n   *\n   * Increasing this parameter will improve stability of the simulation. It will have a lesser effect than\n   * increasing `numSolverIterations` but is also less computationally expensive.\n   *\n   * @param niter - The new number of internal PGS iterations.\n   */\n  set numInternalPgsIterations(niter) {\n    this.integrationParameters.numInternalPgsIterations = niter;\n  }\n  /// Configures the integration parameters to match the old PGS solver\n  /// from Rapier JS version <= 0.11.\n  ///\n  /// This solver was slightly faster than the new one but resulted\n  /// in less stable joints and worse convergence rates.\n  ///\n  /// This should only be used for comparison purpose or if you are\n  /// experiencing problems with the new solver.\n  ///\n  /// NOTE: this does not affect any `RigidBody.additional_solver_iterations` that will\n  ///       still create solver iterations based on the new \"small-steps\" PGS solver.\n  switchToStandardPgsSolver() {\n    this.integrationParameters.switchToStandardPgsSolver();\n  }\n  /// Configures the integration parameters to match the new \"small-steps\" PGS solver\n  /// from Rapier version >= 0.12.\n  ///\n  /// The \"small-steps\" PGS solver is the default one when creating the physics world. So\n  /// calling this function is generally not needed unless `World.switch_to_standard_pgs_solver`\n  /// was called.\n  ///\n  /// This solver results in more stable joints and significantly better convergence\n  /// rates but is slightly slower in its default settings.\n  switchToSmallStepsPgsSolver() {\n    this.integrationParameters.switchToSmallStepsPgsSolver();\n  }\n  /// Configures the integration parameters to match the new \"small-steps\" PGS solver\n  /// from Rapier version >= 0.12. Warmstarting is disabled.\n  ///\n  /// The \"small-steps\" PGS solver is the default one when creating the physics world. So\n  /// calling this function is generally not needed unless `World.switch_to_standard_pgs_solver`\n  /// was called.\n  ///\n  /// This solver results in more stable joints and significantly better convergence\n  /// rates but is slightly slower in its default settings.\n  switchToSmallStepsPgsSolverWithoutWarmstart() {\n    this.integrationParameters.switchToSmallStepsPgsSolverWithoutWarmstart();\n  }\n  /**\n   * Creates a new rigid-body from the given rigid-body descriptor.\n   *\n   * @param body - The description of the rigid-body to create.\n   */\n  createRigidBody(body) {\n    return this.bodies.createRigidBody(this.colliders, body);\n  }\n  /**\n   * Creates a new character controller.\n   *\n   * @param offset - The artificial gap added between the character’s chape and its environment.\n   */\n  createCharacterController(offset) {\n    let controller = new _control__WEBPACK_IMPORTED_MODULE_7__[\"KinematicCharacterController\"](offset, this.integrationParameters, this.bodies, this.colliders, this.queryPipeline);\n    this.characterControllers.add(controller);\n    return controller;\n  }\n  /**\n   * Removes a character controller from this world.\n   *\n   * @param controller - The character controller to remove.\n   */\n  removeCharacterController(controller) {\n    this.characterControllers.delete(controller);\n    controller.free();\n  }\n  // #if DIM3\n  /**\n   * Creates a new vehicle controller.\n   *\n   * @param chassis - The rigid-body used as the chassis of the vehicle controller. When the vehicle\n   *                  controller is updated, it will change directly the rigid-body’s velocity. This\n   *                  rigid-body must be a dynamic or kinematic-velocity-based rigid-body.\n   */\n  createVehicleController(chassis) {\n    let controller = new _control__WEBPACK_IMPORTED_MODULE_7__[\"DynamicRayCastVehicleController\"](chassis, this.bodies, this.colliders, this.queryPipeline);\n    this.vehicleControllers.add(controller);\n    return controller;\n  }\n  /**\n   * Removes a vehicle controller from this world.\n   *\n   * @param controller - The vehicle controller to remove.\n   */\n  removeVehicleController(controller) {\n    this.vehicleControllers.delete(controller);\n    controller.free();\n  }\n  // #endif\n  /**\n   * Creates a new collider.\n   *\n   * @param desc - The description of the collider.\n   * @param parent - The rigid-body this collider is attached to.\n   */\n  createCollider(desc, parent) {\n    let parentHandle = parent ? parent.handle : undefined;\n    return this.colliders.createCollider(this.bodies, desc, parentHandle);\n  }\n  /**\n   * Creates a new impulse joint from the given joint descriptor.\n   *\n   * @param params - The description of the joint to create.\n   * @param parent1 - The first rigid-body attached to this joint.\n   * @param parent2 - The second rigid-body attached to this joint.\n   * @param wakeUp - Should the attached rigid-bodies be awakened?\n   */\n  createImpulseJoint(params, parent1, parent2, wakeUp) {\n    return this.impulseJoints.createJoint(this.bodies, params, parent1.handle, parent2.handle, wakeUp);\n  }\n  /**\n   * Creates a new multibody joint from the given joint descriptor.\n   *\n   * @param params - The description of the joint to create.\n   * @param parent1 - The first rigid-body attached to this joint.\n   * @param parent2 - The second rigid-body attached to this joint.\n   * @param wakeUp - Should the attached rigid-bodies be awakened?\n   */\n  createMultibodyJoint(params, parent1, parent2, wakeUp) {\n    return this.multibodyJoints.createJoint(params, parent1.handle, parent2.handle, wakeUp);\n  }\n  /**\n   * Retrieves a rigid-body from its handle.\n   *\n   * @param handle - The integer handle of the rigid-body to retrieve.\n   */\n  getRigidBody(handle) {\n    return this.bodies.get(handle);\n  }\n  /**\n   * Retrieves a collider from its handle.\n   *\n   * @param handle - The integer handle of the collider to retrieve.\n   */\n  getCollider(handle) {\n    return this.colliders.get(handle);\n  }\n  /**\n   * Retrieves an impulse joint from its handle.\n   *\n   * @param handle - The integer handle of the impulse joint to retrieve.\n   */\n  getImpulseJoint(handle) {\n    return this.impulseJoints.get(handle);\n  }\n  /**\n   * Retrieves an multibody joint from its handle.\n   *\n   * @param handle - The integer handle of the multibody joint to retrieve.\n   */\n  getMultibodyJoint(handle) {\n    return this.multibodyJoints.get(handle);\n  }\n  /**\n   * Removes the given rigid-body from this physics world.\n   *\n   * This will remove this rigid-body as well as all its attached colliders and joints.\n   * Every other bodies touching or attached by joints to this rigid-body will be woken-up.\n   *\n   * @param body - The rigid-body to remove.\n   */\n  removeRigidBody(body) {\n    if (this.bodies) {\n      this.bodies.remove(body.handle, this.islands, this.colliders, this.impulseJoints, this.multibodyJoints);\n    }\n  }\n  /**\n   * Removes the given collider from this physics world.\n   *\n   * @param collider - The collider to remove.\n   * @param wakeUp - If set to `true`, the rigid-body this collider is attached to will be awaken.\n   */\n  removeCollider(collider, wakeUp) {\n    if (this.colliders) {\n      this.colliders.remove(collider.handle, this.islands, this.bodies, wakeUp);\n    }\n  }\n  /**\n   * Removes the given impulse joint from this physics world.\n   *\n   * @param joint - The impulse joint to remove.\n   * @param wakeUp - If set to `true`, the rigid-bodies attached by this joint will be awaken.\n   */\n  removeImpulseJoint(joint, wakeUp) {\n    if (this.impulseJoints) {\n      this.impulseJoints.remove(joint.handle, wakeUp);\n    }\n  }\n  /**\n   * Removes the given multibody joint from this physics world.\n   *\n   * @param joint - The multibody joint to remove.\n   * @param wakeUp - If set to `true`, the rigid-bodies attached by this joint will be awaken.\n   */\n  removeMultibodyJoint(joint, wakeUp) {\n    if (this.impulseJoints) {\n      this.multibodyJoints.remove(joint.handle, wakeUp);\n    }\n  }\n  /**\n   * Applies the given closure to each collider managed by this physics world.\n   *\n   * @param f(collider) - The function to apply to each collider managed by this physics world. Called as `f(collider)`.\n   */\n  forEachCollider(f) {\n    this.colliders.forEach(f);\n  }\n  /**\n   * Applies the given closure to each rigid-body managed by this physics world.\n   *\n   * @param f(body) - The function to apply to each rigid-body managed by this physics world. Called as `f(collider)`.\n   */\n  forEachRigidBody(f) {\n    this.bodies.forEach(f);\n  }\n  /**\n   * Applies the given closure to each active rigid-body managed by this physics world.\n   *\n   * After a short time of inactivity, a rigid-body is automatically deactivated (\"asleep\") by\n   * the physics engine in order to save computational power. A sleeping rigid-body never moves\n   * unless it is moved manually by the user.\n   *\n   * @param f - The function to apply to each active rigid-body managed by this physics world. Called as `f(collider)`.\n   */\n  forEachActiveRigidBody(f) {\n    this.bodies.forEachActiveRigidBody(this.islands, f);\n  }\n  /**\n   * Find the closest intersection between a ray and the physics world.\n   *\n   * @param ray - The ray to cast.\n   * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n   *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n   * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n   *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n   *   whereas `false` implies that all shapes are hollow for this ray-cast.\n   * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n   * @param filter - The callback to filter out which collider will be hit.\n   */\n  castRay(ray, maxToi, solid, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    return this.queryPipeline.castRay(this.bodies, this.colliders, ray, maxToi, solid, filterFlags, filterGroups, filterExcludeCollider ? filterExcludeCollider.handle : null, filterExcludeRigidBody ? filterExcludeRigidBody.handle : null, this.colliders.castClosure(filterPredicate));\n  }\n  /**\n   * Find the closest intersection between a ray and the physics world.\n   *\n   * This also computes the normal at the hit point.\n   * @param ray - The ray to cast.\n   * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n   *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n   * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n   *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n   *   whereas `false` implies that all shapes are hollow for this ray-cast.\n   * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n   */\n  castRayAndGetNormal(ray, maxToi, solid, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    return this.queryPipeline.castRayAndGetNormal(this.bodies, this.colliders, ray, maxToi, solid, filterFlags, filterGroups, filterExcludeCollider ? filterExcludeCollider.handle : null, filterExcludeRigidBody ? filterExcludeRigidBody.handle : null, this.colliders.castClosure(filterPredicate));\n  }\n  /**\n   * Cast a ray and collects all the intersections between a ray and the scene.\n   *\n   * @param ray - The ray to cast.\n   * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n   *   limits the length of the ray to `ray.dir.norm() * maxToi`.\n   * @param solid - If `false` then the ray will attempt to hit the boundary of a shape, even if its\n   *   origin already lies inside of a shape. In other terms, `true` implies that all shapes are plain,\n   *   whereas `false` implies that all shapes are hollow for this ray-cast.\n   * @param groups - Used to filter the colliders that can or cannot be hit by the ray.\n   * @param callback - The callback called once per hit (in no particular order) between a ray and a collider.\n   *   If this callback returns `false`, then the cast will stop and no further hits will be detected/reported.\n   */\n  intersectionsWithRay(ray, maxToi, solid, callback, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    this.queryPipeline.intersectionsWithRay(this.bodies, this.colliders, ray, maxToi, solid, callback, filterFlags, filterGroups, filterExcludeCollider ? filterExcludeCollider.handle : null, filterExcludeRigidBody ? filterExcludeRigidBody.handle : null, this.colliders.castClosure(filterPredicate));\n  }\n  /**\n   * Gets the handle of up to one collider intersecting the given shape.\n   *\n   * @param shapePos - The position of the shape used for the intersection test.\n   * @param shapeRot - The orientation of the shape used for the intersection test.\n   * @param shape - The shape used for the intersection test.\n   * @param groups - The bit groups and filter associated to the ray, in order to only\n   *   hit the colliders with collision groups compatible with the ray's group.\n   */\n  intersectionWithShape(shapePos, shapeRot, shape, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    let handle = this.queryPipeline.intersectionWithShape(this.bodies, this.colliders, shapePos, shapeRot, shape, filterFlags, filterGroups, filterExcludeCollider ? filterExcludeCollider.handle : null, filterExcludeRigidBody ? filterExcludeRigidBody.handle : null, this.colliders.castClosure(filterPredicate));\n    return handle != null ? this.colliders.get(handle) : null;\n  }\n  /**\n   * Find the projection of a point on the closest collider.\n   *\n   * @param point - The point to project.\n   * @param solid - If this is set to `true` then the collider shapes are considered to\n   *   be plain (if the point is located inside of a plain shape, its projection is the point\n   *   itself). If it is set to `false` the collider shapes are considered to be hollow\n   *   (if the point is located inside of an hollow shape, it is projected on the shape's\n   *   boundary).\n   * @param groups - The bit groups and filter associated to the point to project, in order to only\n   *   project on colliders with collision groups compatible with the ray's group.\n   */\n  projectPoint(point, solid, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    return this.queryPipeline.projectPoint(this.bodies, this.colliders, point, solid, filterFlags, filterGroups, filterExcludeCollider ? filterExcludeCollider.handle : null, filterExcludeRigidBody ? filterExcludeRigidBody.handle : null, this.colliders.castClosure(filterPredicate));\n  }\n  /**\n   * Find the projection of a point on the closest collider.\n   *\n   * @param point - The point to project.\n   * @param groups - The bit groups and filter associated to the point to project, in order to only\n   *   project on colliders with collision groups compatible with the ray's group.\n   */\n  projectPointAndGetFeature(point, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    return this.queryPipeline.projectPointAndGetFeature(this.bodies, this.colliders, point, filterFlags, filterGroups, filterExcludeCollider ? filterExcludeCollider.handle : null, filterExcludeRigidBody ? filterExcludeRigidBody.handle : null, this.colliders.castClosure(filterPredicate));\n  }\n  /**\n   * Find all the colliders containing the given point.\n   *\n   * @param point - The point used for the containment test.\n   * @param groups - The bit groups and filter associated to the point to test, in order to only\n   *   test on colliders with collision groups compatible with the ray's group.\n   * @param callback - A function called with the handles of each collider with a shape\n   *   containing the `point`.\n   */\n  intersectionsWithPoint(point, callback, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    this.queryPipeline.intersectionsWithPoint(this.bodies, this.colliders, point, this.colliders.castClosure(callback), filterFlags, filterGroups, filterExcludeCollider ? filterExcludeCollider.handle : null, filterExcludeRigidBody ? filterExcludeRigidBody.handle : null, this.colliders.castClosure(filterPredicate));\n  }\n  /**\n   * Casts a shape at a constant linear velocity and retrieve the first collider it hits.\n   * This is similar to ray-casting except that we are casting a whole shape instead of\n   * just a point (the ray origin).\n   *\n   * @param shapePos - The initial position of the shape to cast.\n   * @param shapeRot - The initial rotation of the shape to cast.\n   * @param shapeVel - The constant velocity of the shape to cast (i.e. the cast direction).\n   * @param shape - The shape to cast.\n   * @param targetDistance − If the shape moves closer to this distance from a collider, a hit\n   *                         will be returned.\n   * @param maxToi - The maximum time-of-impact that can be reported by this cast. This effectively\n   *   limits the distance traveled by the shape to `shapeVel.norm() * maxToi`.\n   * @param stopAtPenetration - If set to `false`, the linear shape-cast won’t immediately stop if\n   *   the shape is penetrating another shape at its starting point **and** its trajectory is such\n   *   that it’s on a path to exist that penetration state.\n   * @param groups - The bit groups and filter associated to the shape to cast, in order to only\n   *   test on colliders with collision groups compatible with this group.\n   */\n  castShape(shapePos, shapeRot, shapeVel, shape, targetDistance, maxToi, stopAtPenetration, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    return this.queryPipeline.castShape(this.bodies, this.colliders, shapePos, shapeRot, shapeVel, shape, targetDistance, maxToi, stopAtPenetration, filterFlags, filterGroups, filterExcludeCollider ? filterExcludeCollider.handle : null, filterExcludeRigidBody ? filterExcludeRigidBody.handle : null, this.colliders.castClosure(filterPredicate));\n  }\n  /**\n   * Retrieve all the colliders intersecting the given shape.\n   *\n   * @param shapePos - The position of the shape to test.\n   * @param shapeRot - The orientation of the shape to test.\n   * @param shape - The shape to test.\n   * @param groups - The bit groups and filter associated to the shape to test, in order to only\n   *   test on colliders with collision groups compatible with this group.\n   * @param callback - A function called with the handles of each collider intersecting the `shape`.\n   */\n  intersectionsWithShape(shapePos, shapeRot, shape, callback, filterFlags, filterGroups, filterExcludeCollider, filterExcludeRigidBody, filterPredicate) {\n    this.queryPipeline.intersectionsWithShape(this.bodies, this.colliders, shapePos, shapeRot, shape, this.colliders.castClosure(callback), filterFlags, filterGroups, filterExcludeCollider ? filterExcludeCollider.handle : null, filterExcludeRigidBody ? filterExcludeRigidBody.handle : null, this.colliders.castClosure(filterPredicate));\n  }\n  /**\n   * Finds the handles of all the colliders with an AABB intersecting the given AABB.\n   *\n   * @param aabbCenter - The center of the AABB to test.\n   * @param aabbHalfExtents - The half-extents of the AABB to test.\n   * @param callback - The callback that will be called with the handles of all the colliders\n   *                   currently intersecting the given AABB.\n   */\n  collidersWithAabbIntersectingAabb(aabbCenter, aabbHalfExtents, callback) {\n    this.queryPipeline.collidersWithAabbIntersectingAabb(aabbCenter, aabbHalfExtents, this.colliders.castClosure(callback));\n  }\n  /**\n   * Enumerates all the colliders potentially in contact with the given collider.\n   *\n   * @param collider1 - The second collider involved in the contact.\n   * @param f - Closure that will be called on each collider that is in contact with `collider1`.\n   */\n  contactPairsWith(collider1, f) {\n    this.narrowPhase.contactPairsWith(collider1.handle, this.colliders.castClosure(f));\n  }\n  /**\n   * Enumerates all the colliders intersecting the given colliders, assuming one of them\n   * is a sensor.\n   */\n  intersectionPairsWith(collider1, f) {\n    this.narrowPhase.intersectionPairsWith(collider1.handle, this.colliders.castClosure(f));\n  }\n  /**\n   * Iterates through all the contact manifolds between the given pair of colliders.\n   *\n   * @param collider1 - The first collider involved in the contact.\n   * @param collider2 - The second collider involved in the contact.\n   * @param f - Closure that will be called on each contact manifold between the two colliders. If the second argument\n   *            passed to this closure is `true`, then the contact manifold data is flipped, i.e., methods like `localNormal1`\n   *            actually apply to the `collider2` and fields like `localNormal2` apply to the `collider1`.\n   */\n  contactPair(collider1, collider2, f) {\n    this.narrowPhase.contactPair(collider1.handle, collider2.handle, f);\n  }\n  /**\n   * Returns `true` if `collider1` and `collider2` intersect and at least one of them is a sensor.\n   * @param collider1 − The first collider involved in the intersection.\n   * @param collider2 − The second collider involved in the intersection.\n   */\n  intersectionPair(collider1, collider2) {\n    return this.narrowPhase.intersectionPair(collider1.handle, collider2.handle);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/pipeline/world.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/rapier.js":
/*!******************************************!*\
  !*** ./lib/@dimforge/rapier3d/rapier.js ***!
  \******************************************/
/*! exports provided: version, Vector3, VectorOps, Quaternion, RotationOps, SdpMatrix3, SdpMatrix3Ops, RigidBodyType, RigidBody, RigidBodyDesc, RigidBodySet, IntegrationParameters, JointType, MotorModel, JointAxesMask, ImpulseJoint, UnitImpulseJoint, FixedImpulseJoint, RopeImpulseJoint, SpringImpulseJoint, PrismaticImpulseJoint, RevoluteImpulseJoint, GenericImpulseJoint, SphericalImpulseJoint, JointData, ImpulseJointSet, MultibodyJoint, UnitMultibodyJoint, FixedMultibodyJoint, PrismaticMultibodyJoint, RevoluteMultibodyJoint, SphericalMultibodyJoint, MultibodyJointSet, CoefficientCombineRule, CCDSolver, IslandManager, BroadPhase, NarrowPhase, TempContactManifold, Shape, ShapeType, HeightFieldFlags, TriMeshFlags, Ball, HalfSpace, Cuboid, RoundCuboid, Capsule, Segment, Triangle, RoundTriangle, Polyline, TriMesh, ConvexPolyhedron, RoundConvexPolyhedron, Heightfield, Cylinder, RoundCylinder, Cone, RoundCone, ActiveCollisionTypes, Collider, MassPropsMode, ColliderDesc, ColliderSet, FeatureType, Ray, RayIntersection, RayColliderIntersection, RayColliderHit, PointProjection, PointColliderProjection, ShapeCastHit, ColliderShapeCastHit, ShapeContact, World, PhysicsPipeline, SerializationPipeline, ActiveEvents, TempContactForceEvent, EventQueue, ActiveHooks, SolverFlags, DebugRenderBuffers, DebugRenderPipeline, QueryFilterFlags, QueryPipeline, CharacterCollision, KinematicCharacterController, DynamicRayCastVehicleController, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _exports__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exports */ \"./lib/@dimforge/rapier3d/exports.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"version\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"version\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Vector3\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"Vector3\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"VectorOps\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"VectorOps\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Quaternion\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"Quaternion\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RotationOps\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"RotationOps\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SdpMatrix3\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"SdpMatrix3\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SdpMatrix3Ops\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"SdpMatrix3Ops\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RigidBodyType\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"RigidBodyType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RigidBody\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"RigidBody\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RigidBodyDesc\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"RigidBodyDesc\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RigidBodySet\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"RigidBodySet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IntegrationParameters\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"IntegrationParameters\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"JointType\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"JointType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MotorModel\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"MotorModel\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"JointAxesMask\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"JointAxesMask\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImpulseJoint\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"ImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UnitImpulseJoint\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"UnitImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FixedImpulseJoint\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"FixedImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RopeImpulseJoint\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"RopeImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SpringImpulseJoint\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"SpringImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PrismaticImpulseJoint\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"PrismaticImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RevoluteImpulseJoint\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"RevoluteImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"GenericImpulseJoint\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"GenericImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SphericalImpulseJoint\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"SphericalImpulseJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"JointData\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"JointData\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ImpulseJointSet\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"ImpulseJointSet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MultibodyJoint\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"MultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"UnitMultibodyJoint\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"UnitMultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FixedMultibodyJoint\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"FixedMultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PrismaticMultibodyJoint\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"PrismaticMultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RevoluteMultibodyJoint\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"RevoluteMultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SphericalMultibodyJoint\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"SphericalMultibodyJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MultibodyJointSet\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"MultibodyJointSet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CoefficientCombineRule\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"CoefficientCombineRule\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CCDSolver\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"CCDSolver\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"IslandManager\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"IslandManager\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BroadPhase\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"BroadPhase\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NarrowPhase\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"NarrowPhase\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TempContactManifold\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"TempContactManifold\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Shape\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"Shape\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ShapeType\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"ShapeType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"HeightFieldFlags\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"HeightFieldFlags\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TriMeshFlags\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"TriMeshFlags\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Ball\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"Ball\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"HalfSpace\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"HalfSpace\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Cuboid\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"Cuboid\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RoundCuboid\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"RoundCuboid\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Capsule\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"Capsule\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Segment\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"Segment\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Triangle\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"Triangle\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RoundTriangle\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"RoundTriangle\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Polyline\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"Polyline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TriMesh\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"TriMesh\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ConvexPolyhedron\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"ConvexPolyhedron\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RoundConvexPolyhedron\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"RoundConvexPolyhedron\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Heightfield\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"Heightfield\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Cylinder\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"Cylinder\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RoundCylinder\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"RoundCylinder\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Cone\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"Cone\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RoundCone\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"RoundCone\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ActiveCollisionTypes\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"ActiveCollisionTypes\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Collider\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"Collider\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MassPropsMode\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"MassPropsMode\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColliderDesc\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"ColliderDesc\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColliderSet\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"ColliderSet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FeatureType\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"FeatureType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Ray\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"Ray\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RayIntersection\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"RayIntersection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RayColliderIntersection\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"RayColliderIntersection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RayColliderHit\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"RayColliderHit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PointProjection\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"PointProjection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PointColliderProjection\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"PointColliderProjection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ShapeCastHit\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"ShapeCastHit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColliderShapeCastHit\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"ColliderShapeCastHit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ShapeContact\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"ShapeContact\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"World\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"World\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PhysicsPipeline\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"PhysicsPipeline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SerializationPipeline\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"SerializationPipeline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ActiveEvents\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"ActiveEvents\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TempContactForceEvent\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"TempContactForceEvent\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EventQueue\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"EventQueue\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ActiveHooks\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"ActiveHooks\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SolverFlags\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"SolverFlags\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DebugRenderBuffers\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"DebugRenderBuffers\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DebugRenderPipeline\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"DebugRenderPipeline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"QueryFilterFlags\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"QueryFilterFlags\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"QueryPipeline\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"QueryPipeline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CharacterCollision\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"CharacterCollision\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"KinematicCharacterController\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"KinematicCharacterController\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DynamicRayCastVehicleController\", function() { return _exports__WEBPACK_IMPORTED_MODULE_0__[\"DynamicRayCastVehicleController\"]; });\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_exports__WEBPACK_IMPORTED_MODULE_0__);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3JhcGllci50cz8xNjQ0Il0sIm5hbWVzIjpbIlJBUElFUiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFtQztBQUNWO0FBQ1ZBLG9HQUFNIiwiZmlsZSI6Ii4vbGliL0BkaW1mb3JnZS9yYXBpZXIzZC9yYXBpZXIuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/rapier.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/rapier_wasm3d.js":
/*!*************************************************!*\
  !*** ./lib/@dimforge/rapier3d/rapier_wasm3d.js ***!
  \*************************************************/
/*! exports provided: __wbg_set_wasm, version, RawFeatureType, RawShapeType, RawJointType, RawJointAxis, RawMotorModel, RawRigidBodyType, RawBroadPhase, RawCCDSolver, RawCharacterCollision, RawColliderSet, RawColliderShapeCastHit, RawContactForceEvent, RawContactManifold, RawContactPair, RawDebugRenderPipeline, RawDeserializedWorld, RawDynamicRayCastVehicleController, RawEventQueue, RawGenericJoint, RawImpulseJointSet, RawIntegrationParameters, RawIslandManager, RawKinematicCharacterController, RawMultibodyJointSet, RawNarrowPhase, RawPhysicsPipeline, RawPointColliderProjection, RawPointProjection, RawQueryPipeline, RawRayColliderHit, RawRayColliderIntersection, RawRayIntersection, RawRigidBodySet, RawRotation, RawSdpMatrix3, RawSerializationPipeline, RawShape, RawShapeCastHit, RawShapeContact, RawVector, __wbindgen_number_new, __wbindgen_boolean_get, __wbindgen_object_drop_ref, __wbindgen_number_get, __wbindgen_is_function, __wbg_rawraycolliderintersection_new, __wbg_rawcontactforceevent_new, __wbg_call_01734de55d61e11d, __wbg_call_4c92f6aec1e1d6e6, __wbg_call_776890ca77946e2f, __wbg_bind_60a9a80cada2f33c, __wbg_buffer_085ec1f694018c4f, __wbg_newwithbyteoffsetandlength_6da8e527659b86aa, __wbg_new_8125e318e6245eed, __wbg_set_5cf90238115182c3, __wbg_length_72e2208bbc0efc61, __wbg_newwithbyteoffsetandlength_69193e31c844b792, __wbg_set_6146c51d49a2c0df, __wbg_length_d7327c75a759af37, __wbg_newwithlength_68d29ab115d0099c, __wbindgen_throw, __wbindgen_memory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _rapier_wasm3d_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rapier_wasm3d_bg.wasm */ \"./lib/@dimforge/rapier3d/rapier_wasm3d_bg.wasm\");\n/* harmony import */ var _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rapier_wasm3d_bg.js */ \"./lib/@dimforge/rapier3d/rapier_wasm3d_bg.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_wasm\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_set_wasm\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"version\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"version\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawFeatureType\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawFeatureType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawShapeType\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawJointType\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawJointType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawJointAxis\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawJointAxis\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawMotorModel\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawMotorModel\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawRigidBodyType\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawRigidBodyType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawBroadPhase\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawBroadPhase\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawCCDSolver\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawCCDSolver\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawCharacterCollision\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawCharacterCollision\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawColliderSet\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawColliderSet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawColliderShapeCastHit\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawColliderShapeCastHit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawContactForceEvent\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawContactForceEvent\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawContactManifold\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawContactManifold\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawContactPair\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawContactPair\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawDebugRenderPipeline\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawDebugRenderPipeline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawDeserializedWorld\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawDeserializedWorld\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawDynamicRayCastVehicleController\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawDynamicRayCastVehicleController\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawEventQueue\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawEventQueue\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawGenericJoint\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawGenericJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawImpulseJointSet\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawImpulseJointSet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawIntegrationParameters\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawIntegrationParameters\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawIslandManager\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawIslandManager\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawKinematicCharacterController\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawKinematicCharacterController\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawMultibodyJointSet\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawMultibodyJointSet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawNarrowPhase\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawNarrowPhase\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawPhysicsPipeline\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawPhysicsPipeline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawPointColliderProjection\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawPointColliderProjection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawPointProjection\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawPointProjection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawQueryPipeline\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawQueryPipeline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawRayColliderHit\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawRayColliderHit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawRayColliderIntersection\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawRayColliderIntersection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawRayIntersection\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawRayIntersection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawRigidBodySet\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawRigidBodySet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawRotation\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawRotation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawSdpMatrix3\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawSdpMatrix3\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawSerializationPipeline\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawSerializationPipeline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawShape\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawShape\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawShapeCastHit\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeCastHit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawShapeContact\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawShapeContact\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawVector\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"RawVector\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_number_new\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_number_new\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_boolean_get\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_boolean_get\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_object_drop_ref\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_number_get\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_number_get\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_is_function\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_is_function\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_rawraycolliderintersection_new\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_rawraycolliderintersection_new\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_rawcontactforceevent_new\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_rawcontactforceevent_new\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_call_01734de55d61e11d\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_call_01734de55d61e11d\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_call_4c92f6aec1e1d6e6\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_call_4c92f6aec1e1d6e6\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_call_776890ca77946e2f\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_call_776890ca77946e2f\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_bind_60a9a80cada2f33c\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_bind_60a9a80cada2f33c\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_buffer_085ec1f694018c4f\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_buffer_085ec1f694018c4f\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_newwithbyteoffsetandlength_6da8e527659b86aa\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_newwithbyteoffsetandlength_6da8e527659b86aa\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_8125e318e6245eed\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_new_8125e318e6245eed\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_5cf90238115182c3\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_set_5cf90238115182c3\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_length_72e2208bbc0efc61\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_length_72e2208bbc0efc61\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_newwithbyteoffsetandlength_69193e31c844b792\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_newwithbyteoffsetandlength_69193e31c844b792\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_6146c51d49a2c0df\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_set_6146c51d49a2c0df\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_length_d7327c75a759af37\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_length_d7327c75a759af37\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_newwithlength_68d29ab115d0099c\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_newwithlength_68d29ab115d0099c\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_throw\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_memory\", function() { return _rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_memory\"]; });\n\n\n\nObject(_rapier_wasm3d_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_set_wasm\"])(_rapier_wasm3d_bg_wasm__WEBPACK_IMPORTED_MODULE_0__);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9saWIvQGRpbWZvcmdlL3JhcGllcjNkL3JhcGllcl93YXNtM2QuanM/NzcxOSJdLCJuYW1lcyI6WyJfX3diZ19zZXRfd2FzbSIsIndhc20iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBZ0Q7QUFDTztBQUN2REEsMkVBQWMsQ0FBQ0MsbURBQUksQ0FBQyIsImZpbGUiOiIuL2xpYi9AZGltZm9yZ2UvcmFwaWVyM2QvcmFwaWVyX3dhc20zZC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHdhc20gZnJvbSBcIi4vcmFwaWVyX3dhc20zZF9iZy53YXNtXCI7XG5pbXBvcnQgeyBfX3diZ19zZXRfd2FzbSB9IGZyb20gXCIuL3JhcGllcl93YXNtM2RfYmcuanNcIjtcbl9fd2JnX3NldF93YXNtKHdhc20pO1xuZXhwb3J0ICogZnJvbSBcIi4vcmFwaWVyX3dhc20zZF9iZy5qc1wiO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/rapier_wasm3d.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/rapier_wasm3d_bg.js":
/*!****************************************************!*\
  !*** ./lib/@dimforge/rapier3d/rapier_wasm3d_bg.js ***!
  \****************************************************/
/*! exports provided: __wbg_set_wasm, version, RawFeatureType, RawShapeType, RawJointType, RawJointAxis, RawMotorModel, RawRigidBodyType, RawBroadPhase, RawCCDSolver, RawCharacterCollision, RawColliderSet, RawColliderShapeCastHit, RawContactForceEvent, RawContactManifold, RawContactPair, RawDebugRenderPipeline, RawDeserializedWorld, RawDynamicRayCastVehicleController, RawEventQueue, RawGenericJoint, RawImpulseJointSet, RawIntegrationParameters, RawIslandManager, RawKinematicCharacterController, RawMultibodyJointSet, RawNarrowPhase, RawPhysicsPipeline, RawPointColliderProjection, RawPointProjection, RawQueryPipeline, RawRayColliderHit, RawRayColliderIntersection, RawRayIntersection, RawRigidBodySet, RawRotation, RawSdpMatrix3, RawSerializationPipeline, RawShape, RawShapeCastHit, RawShapeContact, RawVector, __wbindgen_number_new, __wbindgen_boolean_get, __wbindgen_object_drop_ref, __wbindgen_number_get, __wbindgen_is_function, __wbg_rawraycolliderintersection_new, __wbg_rawcontactforceevent_new, __wbg_call_01734de55d61e11d, __wbg_call_4c92f6aec1e1d6e6, __wbg_call_776890ca77946e2f, __wbg_bind_60a9a80cada2f33c, __wbg_buffer_085ec1f694018c4f, __wbg_newwithbyteoffsetandlength_6da8e527659b86aa, __wbg_new_8125e318e6245eed, __wbg_set_5cf90238115182c3, __wbg_length_72e2208bbc0efc61, __wbg_newwithbyteoffsetandlength_69193e31c844b792, __wbg_set_6146c51d49a2c0df, __wbg_length_d7327c75a759af37, __wbg_newwithlength_68d29ab115d0099c, __wbindgen_throw, __wbindgen_memory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_wasm\", function() { return __wbg_set_wasm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"version\", function() { return version; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawFeatureType\", function() { return RawFeatureType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawShapeType\", function() { return RawShapeType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawJointType\", function() { return RawJointType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawJointAxis\", function() { return RawJointAxis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawMotorModel\", function() { return RawMotorModel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawRigidBodyType\", function() { return RawRigidBodyType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawBroadPhase\", function() { return RawBroadPhase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawCCDSolver\", function() { return RawCCDSolver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawCharacterCollision\", function() { return RawCharacterCollision; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawColliderSet\", function() { return RawColliderSet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawColliderShapeCastHit\", function() { return RawColliderShapeCastHit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawContactForceEvent\", function() { return RawContactForceEvent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawContactManifold\", function() { return RawContactManifold; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawContactPair\", function() { return RawContactPair; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawDebugRenderPipeline\", function() { return RawDebugRenderPipeline; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawDeserializedWorld\", function() { return RawDeserializedWorld; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawDynamicRayCastVehicleController\", function() { return RawDynamicRayCastVehicleController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawEventQueue\", function() { return RawEventQueue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawGenericJoint\", function() { return RawGenericJoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawImpulseJointSet\", function() { return RawImpulseJointSet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawIntegrationParameters\", function() { return RawIntegrationParameters; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawIslandManager\", function() { return RawIslandManager; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawKinematicCharacterController\", function() { return RawKinematicCharacterController; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawMultibodyJointSet\", function() { return RawMultibodyJointSet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawNarrowPhase\", function() { return RawNarrowPhase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawPhysicsPipeline\", function() { return RawPhysicsPipeline; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawPointColliderProjection\", function() { return RawPointColliderProjection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawPointProjection\", function() { return RawPointProjection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawQueryPipeline\", function() { return RawQueryPipeline; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawRayColliderHit\", function() { return RawRayColliderHit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawRayColliderIntersection\", function() { return RawRayColliderIntersection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawRayIntersection\", function() { return RawRayIntersection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawRigidBodySet\", function() { return RawRigidBodySet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawRotation\", function() { return RawRotation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawSdpMatrix3\", function() { return RawSdpMatrix3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawSerializationPipeline\", function() { return RawSerializationPipeline; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawShape\", function() { return RawShape; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawShapeCastHit\", function() { return RawShapeCastHit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawShapeContact\", function() { return RawShapeContact; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RawVector\", function() { return RawVector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_number_new\", function() { return __wbindgen_number_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_boolean_get\", function() { return __wbindgen_boolean_get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_number_get\", function() { return __wbindgen_number_get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_is_function\", function() { return __wbindgen_is_function; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_rawraycolliderintersection_new\", function() { return __wbg_rawraycolliderintersection_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_rawcontactforceevent_new\", function() { return __wbg_rawcontactforceevent_new; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_call_01734de55d61e11d\", function() { return __wbg_call_01734de55d61e11d; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_call_4c92f6aec1e1d6e6\", function() { return __wbg_call_4c92f6aec1e1d6e6; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_call_776890ca77946e2f\", function() { return __wbg_call_776890ca77946e2f; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_bind_60a9a80cada2f33c\", function() { return __wbg_bind_60a9a80cada2f33c; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_buffer_085ec1f694018c4f\", function() { return __wbg_buffer_085ec1f694018c4f; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_newwithbyteoffsetandlength_6da8e527659b86aa\", function() { return __wbg_newwithbyteoffsetandlength_6da8e527659b86aa; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_8125e318e6245eed\", function() { return __wbg_new_8125e318e6245eed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_5cf90238115182c3\", function() { return __wbg_set_5cf90238115182c3; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_length_72e2208bbc0efc61\", function() { return __wbg_length_72e2208bbc0efc61; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_newwithbyteoffsetandlength_69193e31c844b792\", function() { return __wbg_newwithbyteoffsetandlength_69193e31c844b792; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_6146c51d49a2c0df\", function() { return __wbg_set_6146c51d49a2c0df; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_length_d7327c75a759af37\", function() { return __wbg_length_d7327c75a759af37; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_newwithlength_68d29ab115d0099c\", function() { return __wbg_newwithlength_68d29ab115d0099c; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_memory\", function() { return __wbindgen_memory; });\nlet wasm;\nfunction __wbg_set_wasm(val) {\n  wasm = val;\n}\nconst heap = new Array(128).fill(undefined);\nheap.push(undefined, null, true, false);\nlet heap_next = heap.length;\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\nfunction getObject(idx) {\n  return heap[idx];\n}\nfunction dropObject(idx) {\n  if (idx < 132) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\nfunction isLikeNone(x) {\n  return x === undefined || x === null;\n}\nlet cachedFloat64Memory0 = null;\nfunction getFloat64Memory0() {\n  if (cachedFloat64Memory0 === null || cachedFloat64Memory0.byteLength === 0) {\n    cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n  }\n  return cachedFloat64Memory0;\n}\nlet cachedInt32Memory0 = null;\nfunction getInt32Memory0() {\n  if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n  return cachedInt32Memory0;\n}\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nlet cachedTextDecoder = new lTextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\ncachedTextDecoder.decode();\nlet cachedUint8Memory0 = null;\nfunction getUint8Memory0() {\n  if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8Memory0;\n}\nfunction getStringFromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n* @returns {string}\n*/\nfunction version() {\n  let deferred1_0;\n  let deferred1_1;\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.version(retptr);\n    var r0 = getInt32Memory0()[retptr / 4 + 0];\n    var r1 = getInt32Memory0()[retptr / 4 + 1];\n    deferred1_0 = r0;\n    deferred1_1 = r1;\n    return getStringFromWasm0(r0, r1);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n    wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n  }\n}\nfunction _assertClass(instance, klass) {\n  if (!(instance instanceof klass)) {\n    throw new Error(`expected instance of ${klass.name}`);\n  }\n  return instance.ptr;\n}\nlet cachedFloat32Memory0 = null;\nfunction getFloat32Memory0() {\n  if (cachedFloat32Memory0 === null || cachedFloat32Memory0.byteLength === 0) {\n    cachedFloat32Memory0 = new Float32Array(wasm.memory.buffer);\n  }\n  return cachedFloat32Memory0;\n}\nlet stack_pointer = 128;\nfunction addBorrowedObject(obj) {\n  if (stack_pointer == 1) throw new Error('out of js stack');\n  heap[--stack_pointer] = obj;\n  return stack_pointer;\n}\nfunction getArrayF32FromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return getFloat32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\nlet cachedUint32Memory0 = null;\nfunction getUint32Memory0() {\n  if (cachedUint32Memory0 === null || cachedUint32Memory0.byteLength === 0) {\n    cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n  }\n  return cachedUint32Memory0;\n}\nfunction getArrayU32FromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return getUint32Memory0().subarray(ptr / 4, ptr / 4 + len);\n}\nlet WASM_VECTOR_LEN = 0;\nfunction passArrayF32ToWasm0(arg, malloc) {\n  const ptr = malloc(arg.length * 4, 4) >>> 0;\n  getFloat32Memory0().set(arg, ptr / 4);\n  WASM_VECTOR_LEN = arg.length;\n  return ptr;\n}\nfunction passArray32ToWasm0(arg, malloc) {\n  const ptr = malloc(arg.length * 4, 4) >>> 0;\n  getUint32Memory0().set(arg, ptr / 4);\n  WASM_VECTOR_LEN = arg.length;\n  return ptr;\n}\nfunction handleError(f, args) {\n  try {\n    return f.apply(this, args);\n  } catch (e) {\n    wasm.__wbindgen_exn_store(addHeapObject(e));\n  }\n}\n/**\n*/\nconst RawFeatureType = Object.freeze({\n  Vertex: 0,\n  \"0\": \"Vertex\",\n  Edge: 1,\n  \"1\": \"Edge\",\n  Face: 2,\n  \"2\": \"Face\",\n  Unknown: 3,\n  \"3\": \"Unknown\"\n});\n/**\n*/\nconst RawShapeType = Object.freeze({\n  Ball: 0,\n  \"0\": \"Ball\",\n  Cuboid: 1,\n  \"1\": \"Cuboid\",\n  Capsule: 2,\n  \"2\": \"Capsule\",\n  Segment: 3,\n  \"3\": \"Segment\",\n  Polyline: 4,\n  \"4\": \"Polyline\",\n  Triangle: 5,\n  \"5\": \"Triangle\",\n  TriMesh: 6,\n  \"6\": \"TriMesh\",\n  HeightField: 7,\n  \"7\": \"HeightField\",\n  Compound: 8,\n  \"8\": \"Compound\",\n  ConvexPolyhedron: 9,\n  \"9\": \"ConvexPolyhedron\",\n  Cylinder: 10,\n  \"10\": \"Cylinder\",\n  Cone: 11,\n  \"11\": \"Cone\",\n  RoundCuboid: 12,\n  \"12\": \"RoundCuboid\",\n  RoundTriangle: 13,\n  \"13\": \"RoundTriangle\",\n  RoundCylinder: 14,\n  \"14\": \"RoundCylinder\",\n  RoundCone: 15,\n  \"15\": \"RoundCone\",\n  RoundConvexPolyhedron: 16,\n  \"16\": \"RoundConvexPolyhedron\",\n  HalfSpace: 17,\n  \"17\": \"HalfSpace\"\n});\n/**\n*/\nconst RawJointType = Object.freeze({\n  Revolute: 0,\n  \"0\": \"Revolute\",\n  Fixed: 1,\n  \"1\": \"Fixed\",\n  Prismatic: 2,\n  \"2\": \"Prismatic\",\n  Rope: 3,\n  \"3\": \"Rope\",\n  Spring: 4,\n  \"4\": \"Spring\",\n  Spherical: 5,\n  \"5\": \"Spherical\",\n  Generic: 6,\n  \"6\": \"Generic\"\n});\n/**\n*/\nconst RawJointAxis = Object.freeze({\n  X: 0,\n  \"0\": \"X\",\n  Y: 1,\n  \"1\": \"Y\",\n  Z: 2,\n  \"2\": \"Z\",\n  AngX: 3,\n  \"3\": \"AngX\",\n  AngY: 4,\n  \"4\": \"AngY\",\n  AngZ: 5,\n  \"5\": \"AngZ\"\n});\n/**\n*/\nconst RawMotorModel = Object.freeze({\n  AccelerationBased: 0,\n  \"0\": \"AccelerationBased\",\n  ForceBased: 1,\n  \"1\": \"ForceBased\"\n});\n/**\n*/\nconst RawRigidBodyType = Object.freeze({\n  Dynamic: 0,\n  \"0\": \"Dynamic\",\n  Fixed: 1,\n  \"1\": \"Fixed\",\n  KinematicPositionBased: 2,\n  \"2\": \"KinematicPositionBased\",\n  KinematicVelocityBased: 3,\n  \"3\": \"KinematicVelocityBased\"\n});\n/**\n*/\nclass RawBroadPhase {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawBroadPhase.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawbroadphase_free(ptr);\n  }\n  /**\n  */\n  constructor() {\n    const ret = wasm.rawbroadphase_new();\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n}\n/**\n*/\nclass RawCCDSolver {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawccdsolver_free(ptr);\n  }\n  /**\n  */\n  constructor() {\n    const ret = wasm.rawccdsolver_new();\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n}\n/**\n*/\nclass RawCharacterCollision {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawcharactercollision_free(ptr);\n  }\n  /**\n  */\n  constructor() {\n    const ret = wasm.rawcharactercollision_new();\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * @returns {number}\n  */\n  handle() {\n    const ret = wasm.rawcharactercollision_handle(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {RawVector}\n  */\n  translationDeltaApplied() {\n    const ret = wasm.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  translationDeltaRemaining() {\n    const ret = wasm.rawcharactercollision_translationDeltaRemaining(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {number}\n  */\n  toi() {\n    const ret = wasm.rawcharactercollision_toi(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {RawVector}\n  */\n  worldWitness1() {\n    const ret = wasm.rawcharactercollision_worldWitness1(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  worldWitness2() {\n    const ret = wasm.rawcharactercollision_worldWitness2(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  worldNormal1() {\n    const ret = wasm.rawcharactercollision_worldNormal1(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  worldNormal2() {\n    const ret = wasm.rawcharactercollision_worldNormal2(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n}\n/**\n*/\nclass RawColliderSet {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawColliderSet.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawcolliderset_free(ptr);\n  }\n  /**\n  * The world-space translation of this collider.\n  * @param {number} handle\n  * @returns {RawVector}\n  */\n  coTranslation(handle) {\n    const ret = wasm.rawcolliderset_coTranslation(this.__wbg_ptr, handle);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * The world-space orientation of this collider.\n  * @param {number} handle\n  * @returns {RawRotation}\n  */\n  coRotation(handle) {\n    const ret = wasm.rawcolliderset_coRotation(this.__wbg_ptr, handle);\n    return RawRotation.__wrap(ret);\n  }\n  /**\n  * Sets the translation of this collider.\n  *\n  * # Parameters\n  * - `x`: the world-space position of the collider along the `x` axis.\n  * - `y`: the world-space position of the collider along the `y` axis.\n  * - `z`: the world-space position of the collider along the `z` axis.\n  * - `wakeUp`: forces the collider to wake-up so it is properly affected by forces if it\n  * wasn't moving before modifying its position.\n  * @param {number} handle\n  * @param {number} x\n  * @param {number} y\n  * @param {number} z\n  */\n  coSetTranslation(handle, x, y, z) {\n    wasm.rawcolliderset_coSetTranslation(this.__wbg_ptr, handle, x, y, z);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} x\n  * @param {number} y\n  * @param {number} z\n  */\n  coSetTranslationWrtParent(handle, x, y, z) {\n    wasm.rawcolliderset_coSetTranslationWrtParent(this.__wbg_ptr, handle, x, y, z);\n  }\n  /**\n  * Sets the rotation quaternion of this collider.\n  *\n  * This does nothing if a zero quaternion is provided.\n  *\n  * # Parameters\n  * - `x`: the first vector component of the quaternion.\n  * - `y`: the second vector component of the quaternion.\n  * - `z`: the third vector component of the quaternion.\n  * - `w`: the scalar component of the quaternion.\n  * - `wakeUp`: forces the collider to wake-up so it is properly affected by forces if it\n  * wasn't moving before modifying its position.\n  * @param {number} handle\n  * @param {number} x\n  * @param {number} y\n  * @param {number} z\n  * @param {number} w\n  */\n  coSetRotation(handle, x, y, z, w) {\n    wasm.rawcolliderset_coSetRotation(this.__wbg_ptr, handle, x, y, z, w);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} x\n  * @param {number} y\n  * @param {number} z\n  * @param {number} w\n  */\n  coSetRotationWrtParent(handle, x, y, z, w) {\n    wasm.rawcolliderset_coSetRotationWrtParent(this.__wbg_ptr, handle, x, y, z, w);\n  }\n  /**\n  * Is this collider a sensor?\n  * @param {number} handle\n  * @returns {boolean}\n  */\n  coIsSensor(handle) {\n    const ret = wasm.rawcolliderset_coIsSensor(this.__wbg_ptr, handle);\n    return ret !== 0;\n  }\n  /**\n  * The type of the shape of this collider.\n  * @param {number} handle\n  * @returns {RawShapeType}\n  */\n  coShapeType(handle) {\n    const ret = wasm.rawcolliderset_coShapeType(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * @param {number} handle\n  * @returns {RawVector | undefined}\n  */\n  coHalfspaceNormal(handle) {\n    const ret = wasm.rawcolliderset_coHalfspaceNormal(this.__wbg_ptr, handle);\n    return ret === 0 ? undefined : RawVector.__wrap(ret);\n  }\n  /**\n  * The half-extents of this collider if it is has a cuboid shape.\n  * @param {number} handle\n  * @returns {RawVector | undefined}\n  */\n  coHalfExtents(handle) {\n    const ret = wasm.rawcolliderset_coHalfExtents(this.__wbg_ptr, handle);\n    return ret === 0 ? undefined : RawVector.__wrap(ret);\n  }\n  /**\n  * Set the half-extents of this collider if it has a cuboid shape.\n  * @param {number} handle\n  * @param {RawVector} newHalfExtents\n  */\n  coSetHalfExtents(handle, newHalfExtents) {\n    _assertClass(newHalfExtents, RawVector);\n    wasm.rawcolliderset_coSetHalfExtents(this.__wbg_ptr, handle, newHalfExtents.__wbg_ptr);\n  }\n  /**\n  * The radius of this collider if it is a ball, capsule, cylinder, or cone shape.\n  * @param {number} handle\n  * @returns {number | undefined}\n  */\n  coRadius(handle) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawcolliderset_coRadius(retptr, this.__wbg_ptr, handle);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * Set the radius of this collider if it is a ball, capsule, cylinder, or cone shape.\n  * @param {number} handle\n  * @param {number} newRadius\n  */\n  coSetRadius(handle, newRadius) {\n    wasm.rawcolliderset_coSetRadius(this.__wbg_ptr, handle, newRadius);\n  }\n  /**\n  * The half height of this collider if it is a capsule, cylinder, or cone shape.\n  * @param {number} handle\n  * @returns {number | undefined}\n  */\n  coHalfHeight(handle) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawcolliderset_coHalfHeight(retptr, this.__wbg_ptr, handle);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * Set the half height of this collider if it is a capsule, cylinder, or cone shape.\n  * @param {number} handle\n  * @param {number} newHalfheight\n  */\n  coSetHalfHeight(handle, newHalfheight) {\n    wasm.rawcolliderset_coSetHalfHeight(this.__wbg_ptr, handle, newHalfheight);\n  }\n  /**\n  * The radius of the round edges of this collider.\n  * @param {number} handle\n  * @returns {number | undefined}\n  */\n  coRoundRadius(handle) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawcolliderset_coRoundRadius(retptr, this.__wbg_ptr, handle);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * Set the radius of the round edges of this collider.\n  * @param {number} handle\n  * @param {number} newBorderRadius\n  */\n  coSetRoundRadius(handle, newBorderRadius) {\n    wasm.rawcolliderset_coSetRoundRadius(this.__wbg_ptr, handle, newBorderRadius);\n  }\n  /**\n  * The vertices of this triangle mesh, polyline, convex polyhedron, segment, triangle or convex polyhedron, if it is one.\n  * @param {number} handle\n  * @returns {Float32Array | undefined}\n  */\n  coVertices(handle) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawcolliderset_coVertices(retptr, this.__wbg_ptr, handle);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      let v1;\n      if (r0 !== 0) {\n        v1 = getArrayF32FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 4, 4);\n      }\n      return v1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * The indices of this triangle mesh, polyline, or convex polyhedron, if it is one.\n  * @param {number} handle\n  * @returns {Uint32Array | undefined}\n  */\n  coIndices(handle) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawcolliderset_coIndices(retptr, this.__wbg_ptr, handle);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      let v1;\n      if (r0 !== 0) {\n        v1 = getArrayU32FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 4, 4);\n      }\n      return v1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} handle\n  * @returns {number | undefined}\n  */\n  coTriMeshFlags(handle) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawcolliderset_coTriMeshFlags(retptr, this.__wbg_ptr, handle);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1 >>> 0;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} handle\n  * @returns {number | undefined}\n  */\n  coHeightFieldFlags(handle) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawcolliderset_coHeightFieldFlags(retptr, this.__wbg_ptr, handle);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1 >>> 0;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * The height of this heightfield if it is one.\n  * @param {number} handle\n  * @returns {Float32Array | undefined}\n  */\n  coHeightfieldHeights(handle) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawcolliderset_coHeightfieldHeights(retptr, this.__wbg_ptr, handle);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      let v1;\n      if (r0 !== 0) {\n        v1 = getArrayF32FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 4, 4);\n      }\n      return v1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * The scaling factor applied of this heightfield if it is one.\n  * @param {number} handle\n  * @returns {RawVector | undefined}\n  */\n  coHeightfieldScale(handle) {\n    const ret = wasm.rawcolliderset_coHeightfieldScale(this.__wbg_ptr, handle);\n    return ret === 0 ? undefined : RawVector.__wrap(ret);\n  }\n  /**\n  * The number of rows on this heightfield's height matrix, if it is one.\n  * @param {number} handle\n  * @returns {number | undefined}\n  */\n  coHeightfieldNRows(handle) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawcolliderset_coHeightfieldNRows(retptr, this.__wbg_ptr, handle);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1 >>> 0;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * The number of columns on this heightfield's height matrix, if it is one.\n  * @param {number} handle\n  * @returns {number | undefined}\n  */\n  coHeightfieldNCols(handle) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawcolliderset_coHeightfieldNCols(retptr, this.__wbg_ptr, handle);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1 >>> 0;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * The unique integer identifier of the collider this collider is attached to.\n  * @param {number} handle\n  * @returns {number | undefined}\n  */\n  coParent(handle) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawcolliderset_coParent(retptr, this.__wbg_ptr, handle);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r2 = getFloat64Memory0()[retptr / 8 + 1];\n      return r0 === 0 ? undefined : r2;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} handle\n  * @param {boolean} enabled\n  */\n  coSetEnabled(handle, enabled) {\n    wasm.rawcolliderset_coSetEnabled(this.__wbg_ptr, handle, enabled);\n  }\n  /**\n  * @param {number} handle\n  * @returns {boolean}\n  */\n  coIsEnabled(handle) {\n    const ret = wasm.rawcolliderset_coIsEnabled(this.__wbg_ptr, handle);\n    return ret !== 0;\n  }\n  /**\n  * @param {number} handle\n  * @param {number} contact_skin\n  */\n  coSetContactSkin(handle, contact_skin) {\n    wasm.rawcolliderset_coSetContactSkin(this.__wbg_ptr, handle, contact_skin);\n  }\n  /**\n  * @param {number} handle\n  * @returns {number}\n  */\n  coContactSkin(handle) {\n    const ret = wasm.rawcolliderset_coContactSkin(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * The friction coefficient of this collider.\n  * @param {number} handle\n  * @returns {number}\n  */\n  coFriction(handle) {\n    const ret = wasm.rawcolliderset_coFriction(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * The restitution coefficient of this collider.\n  * @param {number} handle\n  * @returns {number}\n  */\n  coRestitution(handle) {\n    const ret = wasm.rawcolliderset_coRestitution(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * The density of this collider.\n  * @param {number} handle\n  * @returns {number}\n  */\n  coDensity(handle) {\n    const ret = wasm.rawcolliderset_coDensity(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * The mass of this collider.\n  * @param {number} handle\n  * @returns {number}\n  */\n  coMass(handle) {\n    const ret = wasm.rawcolliderset_coMass(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * The volume of this collider.\n  * @param {number} handle\n  * @returns {number}\n  */\n  coVolume(handle) {\n    const ret = wasm.rawcolliderset_coVolume(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * The collision groups of this collider.\n  * @param {number} handle\n  * @returns {number}\n  */\n  coCollisionGroups(handle) {\n    const ret = wasm.rawcolliderset_coCollisionGroups(this.__wbg_ptr, handle);\n    return ret >>> 0;\n  }\n  /**\n  * The solver groups of this collider.\n  * @param {number} handle\n  * @returns {number}\n  */\n  coSolverGroups(handle) {\n    const ret = wasm.rawcolliderset_coSolverGroups(this.__wbg_ptr, handle);\n    return ret >>> 0;\n  }\n  /**\n  * The physics hooks enabled for this collider.\n  * @param {number} handle\n  * @returns {number}\n  */\n  coActiveHooks(handle) {\n    const ret = wasm.rawcolliderset_coActiveHooks(this.__wbg_ptr, handle);\n    return ret >>> 0;\n  }\n  /**\n  * The collision types enabled for this collider.\n  * @param {number} handle\n  * @returns {number}\n  */\n  coActiveCollisionTypes(handle) {\n    const ret = wasm.rawcolliderset_coActiveCollisionTypes(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * The events enabled for this collider.\n  * @param {number} handle\n  * @returns {number}\n  */\n  coActiveEvents(handle) {\n    const ret = wasm.rawcolliderset_coActiveEvents(this.__wbg_ptr, handle);\n    return ret >>> 0;\n  }\n  /**\n  * The total force magnitude beyond which a contact force event can be emitted.\n  * @param {number} handle\n  * @returns {number}\n  */\n  coContactForceEventThreshold(handle) {\n    const ret = wasm.rawcolliderset_coContactForceEventThreshold(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * @param {number} handle\n  * @param {RawVector} point\n  * @returns {boolean}\n  */\n  coContainsPoint(handle, point) {\n    _assertClass(point, RawVector);\n    const ret = wasm.rawcolliderset_coContainsPoint(this.__wbg_ptr, handle, point.__wbg_ptr);\n    return ret !== 0;\n  }\n  /**\n  * @param {number} handle\n  * @param {RawVector} colliderVel\n  * @param {RawShape} shape2\n  * @param {RawVector} shape2Pos\n  * @param {RawRotation} shape2Rot\n  * @param {RawVector} shape2Vel\n  * @param {number} target_distance\n  * @param {number} maxToi\n  * @param {boolean} stop_at_penetration\n  * @returns {RawShapeCastHit | undefined}\n  */\n  coCastShape(handle, colliderVel, shape2, shape2Pos, shape2Rot, shape2Vel, target_distance, maxToi, stop_at_penetration) {\n    _assertClass(colliderVel, RawVector);\n    _assertClass(shape2, RawShape);\n    _assertClass(shape2Pos, RawVector);\n    _assertClass(shape2Rot, RawRotation);\n    _assertClass(shape2Vel, RawVector);\n    const ret = wasm.rawcolliderset_coCastShape(this.__wbg_ptr, handle, colliderVel.__wbg_ptr, shape2.__wbg_ptr, shape2Pos.__wbg_ptr, shape2Rot.__wbg_ptr, shape2Vel.__wbg_ptr, target_distance, maxToi, stop_at_penetration);\n    return ret === 0 ? undefined : RawShapeCastHit.__wrap(ret);\n  }\n  /**\n  * @param {number} handle\n  * @param {RawVector} collider1Vel\n  * @param {number} collider2handle\n  * @param {RawVector} collider2Vel\n  * @param {number} target_distance\n  * @param {number} max_toi\n  * @param {boolean} stop_at_penetration\n  * @returns {RawColliderShapeCastHit | undefined}\n  */\n  coCastCollider(handle, collider1Vel, collider2handle, collider2Vel, target_distance, max_toi, stop_at_penetration) {\n    _assertClass(collider1Vel, RawVector);\n    _assertClass(collider2Vel, RawVector);\n    const ret = wasm.rawcolliderset_coCastCollider(this.__wbg_ptr, handle, collider1Vel.__wbg_ptr, collider2handle, collider2Vel.__wbg_ptr, target_distance, max_toi, stop_at_penetration);\n    return ret === 0 ? undefined : RawColliderShapeCastHit.__wrap(ret);\n  }\n  /**\n  * @param {number} handle\n  * @param {RawShape} shape2\n  * @param {RawVector} shapePos2\n  * @param {RawRotation} shapeRot2\n  * @returns {boolean}\n  */\n  coIntersectsShape(handle, shape2, shapePos2, shapeRot2) {\n    _assertClass(shape2, RawShape);\n    _assertClass(shapePos2, RawVector);\n    _assertClass(shapeRot2, RawRotation);\n    const ret = wasm.rawcolliderset_coIntersectsShape(this.__wbg_ptr, handle, shape2.__wbg_ptr, shapePos2.__wbg_ptr, shapeRot2.__wbg_ptr);\n    return ret !== 0;\n  }\n  /**\n  * @param {number} handle\n  * @param {RawShape} shape2\n  * @param {RawVector} shapePos2\n  * @param {RawRotation} shapeRot2\n  * @param {number} prediction\n  * @returns {RawShapeContact | undefined}\n  */\n  coContactShape(handle, shape2, shapePos2, shapeRot2, prediction) {\n    _assertClass(shape2, RawShape);\n    _assertClass(shapePos2, RawVector);\n    _assertClass(shapeRot2, RawRotation);\n    const ret = wasm.rawcolliderset_coContactShape(this.__wbg_ptr, handle, shape2.__wbg_ptr, shapePos2.__wbg_ptr, shapeRot2.__wbg_ptr, prediction);\n    return ret === 0 ? undefined : RawShapeContact.__wrap(ret);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} collider2handle\n  * @param {number} prediction\n  * @returns {RawShapeContact | undefined}\n  */\n  coContactCollider(handle, collider2handle, prediction) {\n    const ret = wasm.rawcolliderset_coContactCollider(this.__wbg_ptr, handle, collider2handle, prediction);\n    return ret === 0 ? undefined : RawShapeContact.__wrap(ret);\n  }\n  /**\n  * @param {number} handle\n  * @param {RawVector} point\n  * @param {boolean} solid\n  * @returns {RawPointProjection}\n  */\n  coProjectPoint(handle, point, solid) {\n    _assertClass(point, RawVector);\n    const ret = wasm.rawcolliderset_coProjectPoint(this.__wbg_ptr, handle, point.__wbg_ptr, solid);\n    return RawPointProjection.__wrap(ret);\n  }\n  /**\n  * @param {number} handle\n  * @param {RawVector} rayOrig\n  * @param {RawVector} rayDir\n  * @param {number} maxToi\n  * @returns {boolean}\n  */\n  coIntersectsRay(handle, rayOrig, rayDir, maxToi) {\n    _assertClass(rayOrig, RawVector);\n    _assertClass(rayDir, RawVector);\n    const ret = wasm.rawcolliderset_coIntersectsRay(this.__wbg_ptr, handle, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi);\n    return ret !== 0;\n  }\n  /**\n  * @param {number} handle\n  * @param {RawVector} rayOrig\n  * @param {RawVector} rayDir\n  * @param {number} maxToi\n  * @param {boolean} solid\n  * @returns {number}\n  */\n  coCastRay(handle, rayOrig, rayDir, maxToi, solid) {\n    _assertClass(rayOrig, RawVector);\n    _assertClass(rayDir, RawVector);\n    const ret = wasm.rawcolliderset_coCastRay(this.__wbg_ptr, handle, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi, solid);\n    return ret;\n  }\n  /**\n  * @param {number} handle\n  * @param {RawVector} rayOrig\n  * @param {RawVector} rayDir\n  * @param {number} maxToi\n  * @param {boolean} solid\n  * @returns {RawRayIntersection | undefined}\n  */\n  coCastRayAndGetNormal(handle, rayOrig, rayDir, maxToi, solid) {\n    _assertClass(rayOrig, RawVector);\n    _assertClass(rayDir, RawVector);\n    const ret = wasm.rawcolliderset_coCastRayAndGetNormal(this.__wbg_ptr, handle, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi, solid);\n    return ret === 0 ? undefined : RawRayIntersection.__wrap(ret);\n  }\n  /**\n  * @param {number} handle\n  * @param {boolean} is_sensor\n  */\n  coSetSensor(handle, is_sensor) {\n    wasm.rawcolliderset_coSetSensor(this.__wbg_ptr, handle, is_sensor);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} restitution\n  */\n  coSetRestitution(handle, restitution) {\n    wasm.rawcolliderset_coSetRestitution(this.__wbg_ptr, handle, restitution);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} friction\n  */\n  coSetFriction(handle, friction) {\n    wasm.rawcolliderset_coSetFriction(this.__wbg_ptr, handle, friction);\n  }\n  /**\n  * @param {number} handle\n  * @returns {number}\n  */\n  coFrictionCombineRule(handle) {\n    const ret = wasm.rawcolliderset_coFrictionCombineRule(this.__wbg_ptr, handle);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} handle\n  * @param {number} rule\n  */\n  coSetFrictionCombineRule(handle, rule) {\n    wasm.rawcolliderset_coSetFrictionCombineRule(this.__wbg_ptr, handle, rule);\n  }\n  /**\n  * @param {number} handle\n  * @returns {number}\n  */\n  coRestitutionCombineRule(handle) {\n    const ret = wasm.rawcolliderset_coRestitutionCombineRule(this.__wbg_ptr, handle);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} handle\n  * @param {number} rule\n  */\n  coSetRestitutionCombineRule(handle, rule) {\n    wasm.rawcolliderset_coSetRestitutionCombineRule(this.__wbg_ptr, handle, rule);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} groups\n  */\n  coSetCollisionGroups(handle, groups) {\n    wasm.rawcolliderset_coSetCollisionGroups(this.__wbg_ptr, handle, groups);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} groups\n  */\n  coSetSolverGroups(handle, groups) {\n    wasm.rawcolliderset_coSetSolverGroups(this.__wbg_ptr, handle, groups);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} hooks\n  */\n  coSetActiveHooks(handle, hooks) {\n    wasm.rawcolliderset_coSetActiveHooks(this.__wbg_ptr, handle, hooks);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} events\n  */\n  coSetActiveEvents(handle, events) {\n    wasm.rawcolliderset_coSetActiveEvents(this.__wbg_ptr, handle, events);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} types\n  */\n  coSetActiveCollisionTypes(handle, types) {\n    wasm.rawcolliderset_coSetActiveCollisionTypes(this.__wbg_ptr, handle, types);\n  }\n  /**\n  * @param {number} handle\n  * @param {RawShape} shape\n  */\n  coSetShape(handle, shape) {\n    _assertClass(shape, RawShape);\n    wasm.rawcolliderset_coSetShape(this.__wbg_ptr, handle, shape.__wbg_ptr);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} threshold\n  */\n  coSetContactForceEventThreshold(handle, threshold) {\n    wasm.rawcolliderset_coSetContactForceEventThreshold(this.__wbg_ptr, handle, threshold);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} density\n  */\n  coSetDensity(handle, density) {\n    wasm.rawcolliderset_coSetDensity(this.__wbg_ptr, handle, density);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} mass\n  */\n  coSetMass(handle, mass) {\n    wasm.rawcolliderset_coSetMass(this.__wbg_ptr, handle, mass);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} mass\n  * @param {RawVector} centerOfMass\n  * @param {RawVector} principalAngularInertia\n  * @param {RawRotation} angularInertiaFrame\n  */\n  coSetMassProperties(handle, mass, centerOfMass, principalAngularInertia, angularInertiaFrame) {\n    _assertClass(centerOfMass, RawVector);\n    _assertClass(principalAngularInertia, RawVector);\n    _assertClass(angularInertiaFrame, RawRotation);\n    wasm.rawcolliderset_coSetMassProperties(this.__wbg_ptr, handle, mass, centerOfMass.__wbg_ptr, principalAngularInertia.__wbg_ptr, angularInertiaFrame.__wbg_ptr);\n  }\n  /**\n  */\n  constructor() {\n    const ret = wasm.rawcolliderset_new();\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * @returns {number}\n  */\n  len() {\n    const ret = wasm.rawcolliderset_len(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} handle\n  * @returns {boolean}\n  */\n  contains(handle) {\n    const ret = wasm.rawcolliderset_contains(this.__wbg_ptr, handle);\n    return ret !== 0;\n  }\n  /**\n  * @param {boolean} enabled\n  * @param {RawShape} shape\n  * @param {RawVector} translation\n  * @param {RawRotation} rotation\n  * @param {number} massPropsMode\n  * @param {number} mass\n  * @param {RawVector} centerOfMass\n  * @param {RawVector} principalAngularInertia\n  * @param {RawRotation} angularInertiaFrame\n  * @param {number} density\n  * @param {number} friction\n  * @param {number} restitution\n  * @param {number} frictionCombineRule\n  * @param {number} restitutionCombineRule\n  * @param {boolean} isSensor\n  * @param {number} collisionGroups\n  * @param {number} solverGroups\n  * @param {number} activeCollisionTypes\n  * @param {number} activeHooks\n  * @param {number} activeEvents\n  * @param {number} contactForceEventThreshold\n  * @param {number} contactSkin\n  * @param {boolean} hasParent\n  * @param {number} parent\n  * @param {RawRigidBodySet} bodies\n  * @returns {number | undefined}\n  */\n  createCollider(enabled, shape, translation, rotation, massPropsMode, mass, centerOfMass, principalAngularInertia, angularInertiaFrame, density, friction, restitution, frictionCombineRule, restitutionCombineRule, isSensor, collisionGroups, solverGroups, activeCollisionTypes, activeHooks, activeEvents, contactForceEventThreshold, contactSkin, hasParent, parent, bodies) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      _assertClass(shape, RawShape);\n      _assertClass(translation, RawVector);\n      _assertClass(rotation, RawRotation);\n      _assertClass(centerOfMass, RawVector);\n      _assertClass(principalAngularInertia, RawVector);\n      _assertClass(angularInertiaFrame, RawRotation);\n      _assertClass(bodies, RawRigidBodySet);\n      wasm.rawcolliderset_createCollider(retptr, this.__wbg_ptr, enabled, shape.__wbg_ptr, translation.__wbg_ptr, rotation.__wbg_ptr, massPropsMode, mass, centerOfMass.__wbg_ptr, principalAngularInertia.__wbg_ptr, angularInertiaFrame.__wbg_ptr, density, friction, restitution, frictionCombineRule, restitutionCombineRule, isSensor, collisionGroups, solverGroups, activeCollisionTypes, activeHooks, activeEvents, contactForceEventThreshold, contactSkin, hasParent, parent, bodies.__wbg_ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r2 = getFloat64Memory0()[retptr / 8 + 1];\n      return r0 === 0 ? undefined : r2;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * Removes a collider from this set and wake-up the rigid-body it is attached to.\n  * @param {number} handle\n  * @param {RawIslandManager} islands\n  * @param {RawRigidBodySet} bodies\n  * @param {boolean} wakeUp\n  */\n  remove(handle, islands, bodies, wakeUp) {\n    _assertClass(islands, RawIslandManager);\n    _assertClass(bodies, RawRigidBodySet);\n    wasm.rawcolliderset_remove(this.__wbg_ptr, handle, islands.__wbg_ptr, bodies.__wbg_ptr, wakeUp);\n  }\n  /**\n  * Checks if a collider with the given integer handle exists.\n  * @param {number} handle\n  * @returns {boolean}\n  */\n  isHandleValid(handle) {\n    const ret = wasm.rawcolliderset_contains(this.__wbg_ptr, handle);\n    return ret !== 0;\n  }\n  /**\n  * Applies the given JavaScript function to the integer handle of each collider managed by this collider set.\n  *\n  * # Parameters\n  * - `f(handle)`: the function to apply to the integer handle of each collider managed by this collider set. Called as `f(handle)`.\n  * @param {Function} f\n  */\n  forEachColliderHandle(f) {\n    try {\n      wasm.rawcolliderset_forEachColliderHandle(this.__wbg_ptr, addBorrowedObject(f));\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n}\n/**\n*/\nclass RawColliderShapeCastHit {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawColliderShapeCastHit.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawcollidershapecasthit_free(ptr);\n  }\n  /**\n  * @returns {number}\n  */\n  colliderHandle() {\n    const ret = wasm.rawcharactercollision_handle(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {number}\n  */\n  time_of_impact() {\n    const ret = wasm.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {RawVector}\n  */\n  witness1() {\n    const ret = wasm.rawcollidershapecasthit_witness1(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  witness2() {\n    const ret = wasm.rawcollidershapecasthit_witness2(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  normal1() {\n    const ret = wasm.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  normal2() {\n    const ret = wasm.rawcharactercollision_translationDeltaRemaining(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n}\n/**\n*/\nclass RawContactForceEvent {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawContactForceEvent.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawcontactforceevent_free(ptr);\n  }\n  /**\n  * The first collider involved in the contact.\n  * @returns {number}\n  */\n  collider1() {\n    const ret = wasm.rawcharactercollision_handle(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * The second collider involved in the contact.\n  * @returns {number}\n  */\n  collider2() {\n    const ret = wasm.rawcontactforceevent_collider2(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * The sum of all the forces between the two colliders.\n  * @returns {RawVector}\n  */\n  total_force() {\n    const ret = wasm.rawcontactforceevent_total_force(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * The sum of the magnitudes of each force between the two colliders.\n  *\n  * Note that this is **not** the same as the magnitude of `self.total_force`.\n  * Here we are summing the magnitude of all the forces, instead of taking\n  * the magnitude of their sum.\n  * @returns {number}\n  */\n  total_force_magnitude() {\n    const ret = wasm.rawcontactforceevent_total_force_magnitude(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * The world-space (unit) direction of the force with strongest magnitude.\n  * @returns {RawVector}\n  */\n  max_force_direction() {\n    const ret = wasm.rawcontactforceevent_max_force_direction(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * The magnitude of the largest force at a contact point of this contact pair.\n  * @returns {number}\n  */\n  max_force_magnitude() {\n    const ret = wasm.rawcontactforceevent_max_force_magnitude(this.__wbg_ptr);\n    return ret;\n  }\n}\n/**\n*/\nclass RawContactManifold {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawContactManifold.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawcontactmanifold_free(ptr);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  normal() {\n    const ret = wasm.rawcontactmanifold_normal(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  local_n1() {\n    const ret = wasm.rawcontactmanifold_local_n1(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  local_n2() {\n    const ret = wasm.rawcontactmanifold_local_n2(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {number}\n  */\n  subshape1() {\n    const ret = wasm.rawcontactmanifold_subshape1(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @returns {number}\n  */\n  subshape2() {\n    const ret = wasm.rawcontactmanifold_subshape2(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @returns {number}\n  */\n  num_contacts() {\n    const ret = wasm.rawcontactmanifold_num_contacts(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} i\n  * @returns {RawVector | undefined}\n  */\n  contact_local_p1(i) {\n    const ret = wasm.rawcontactmanifold_contact_local_p1(this.__wbg_ptr, i);\n    return ret === 0 ? undefined : RawVector.__wrap(ret);\n  }\n  /**\n  * @param {number} i\n  * @returns {RawVector | undefined}\n  */\n  contact_local_p2(i) {\n    const ret = wasm.rawcontactmanifold_contact_local_p2(this.__wbg_ptr, i);\n    return ret === 0 ? undefined : RawVector.__wrap(ret);\n  }\n  /**\n  * @param {number} i\n  * @returns {number}\n  */\n  contact_dist(i) {\n    const ret = wasm.rawcontactmanifold_contact_dist(this.__wbg_ptr, i);\n    return ret;\n  }\n  /**\n  * @param {number} i\n  * @returns {number}\n  */\n  contact_fid1(i) {\n    const ret = wasm.rawcontactmanifold_contact_fid1(this.__wbg_ptr, i);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} i\n  * @returns {number}\n  */\n  contact_fid2(i) {\n    const ret = wasm.rawcontactmanifold_contact_fid2(this.__wbg_ptr, i);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} i\n  * @returns {number}\n  */\n  contact_impulse(i) {\n    const ret = wasm.rawcontactmanifold_contact_impulse(this.__wbg_ptr, i);\n    return ret;\n  }\n  /**\n  * @param {number} i\n  * @returns {number}\n  */\n  contact_tangent_impulse_x(i) {\n    const ret = wasm.rawcontactmanifold_contact_tangent_impulse_x(this.__wbg_ptr, i);\n    return ret;\n  }\n  /**\n  * @param {number} i\n  * @returns {number}\n  */\n  contact_tangent_impulse_y(i) {\n    const ret = wasm.rawcontactmanifold_contact_tangent_impulse_y(this.__wbg_ptr, i);\n    return ret;\n  }\n  /**\n  * @returns {number}\n  */\n  num_solver_contacts() {\n    const ret = wasm.rawcontactmanifold_num_solver_contacts(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} i\n  * @returns {RawVector | undefined}\n  */\n  solver_contact_point(i) {\n    const ret = wasm.rawcontactmanifold_solver_contact_point(this.__wbg_ptr, i);\n    return ret === 0 ? undefined : RawVector.__wrap(ret);\n  }\n  /**\n  * @param {number} i\n  * @returns {number}\n  */\n  solver_contact_dist(i) {\n    const ret = wasm.rawcontactmanifold_solver_contact_dist(this.__wbg_ptr, i);\n    return ret;\n  }\n  /**\n  * @param {number} i\n  * @returns {number}\n  */\n  solver_contact_friction(i) {\n    const ret = wasm.rawcontactmanifold_solver_contact_friction(this.__wbg_ptr, i);\n    return ret;\n  }\n  /**\n  * @param {number} i\n  * @returns {number}\n  */\n  solver_contact_restitution(i) {\n    const ret = wasm.rawcontactmanifold_solver_contact_restitution(this.__wbg_ptr, i);\n    return ret;\n  }\n  /**\n  * @param {number} i\n  * @returns {RawVector}\n  */\n  solver_contact_tangent_velocity(i) {\n    const ret = wasm.rawcontactmanifold_solver_contact_tangent_velocity(this.__wbg_ptr, i);\n    return RawVector.__wrap(ret);\n  }\n}\n/**\n*/\nclass RawContactPair {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawContactPair.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawcontactpair_free(ptr);\n  }\n  /**\n  * @returns {number}\n  */\n  collider1() {\n    const ret = wasm.rawcontactpair_collider1(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {number}\n  */\n  collider2() {\n    const ret = wasm.rawcontactpair_collider2(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {number}\n  */\n  numContactManifolds() {\n    const ret = wasm.rawcontactpair_numContactManifolds(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} i\n  * @returns {RawContactManifold | undefined}\n  */\n  contactManifold(i) {\n    const ret = wasm.rawcontactpair_contactManifold(this.__wbg_ptr, i);\n    return ret === 0 ? undefined : RawContactManifold.__wrap(ret);\n  }\n}\n/**\n*/\nclass RawDebugRenderPipeline {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawdebugrenderpipeline_free(ptr);\n  }\n  /**\n  */\n  constructor() {\n    const ret = wasm.rawdebugrenderpipeline_new();\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * @returns {Float32Array}\n  */\n  vertices() {\n    const ret = wasm.rawdebugrenderpipeline_vertices(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  /**\n  * @returns {Float32Array}\n  */\n  colors() {\n    const ret = wasm.rawdebugrenderpipeline_colors(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n  /**\n  * @param {RawRigidBodySet} bodies\n  * @param {RawColliderSet} colliders\n  * @param {RawImpulseJointSet} impulse_joints\n  * @param {RawMultibodyJointSet} multibody_joints\n  * @param {RawNarrowPhase} narrow_phase\n  */\n  render(bodies, colliders, impulse_joints, multibody_joints, narrow_phase) {\n    _assertClass(bodies, RawRigidBodySet);\n    _assertClass(colliders, RawColliderSet);\n    _assertClass(impulse_joints, RawImpulseJointSet);\n    _assertClass(multibody_joints, RawMultibodyJointSet);\n    _assertClass(narrow_phase, RawNarrowPhase);\n    wasm.rawdebugrenderpipeline_render(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, impulse_joints.__wbg_ptr, multibody_joints.__wbg_ptr, narrow_phase.__wbg_ptr);\n  }\n}\n/**\n*/\nclass RawDeserializedWorld {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawDeserializedWorld.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawdeserializedworld_free(ptr);\n  }\n  /**\n  * @returns {RawVector | undefined}\n  */\n  takeGravity() {\n    const ret = wasm.rawdeserializedworld_takeGravity(this.__wbg_ptr);\n    return ret === 0 ? undefined : RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {RawIntegrationParameters | undefined}\n  */\n  takeIntegrationParameters() {\n    const ret = wasm.rawdeserializedworld_takeIntegrationParameters(this.__wbg_ptr);\n    return ret === 0 ? undefined : RawIntegrationParameters.__wrap(ret);\n  }\n  /**\n  * @returns {RawIslandManager | undefined}\n  */\n  takeIslandManager() {\n    const ret = wasm.rawdeserializedworld_takeIslandManager(this.__wbg_ptr);\n    return ret === 0 ? undefined : RawIslandManager.__wrap(ret);\n  }\n  /**\n  * @returns {RawBroadPhase | undefined}\n  */\n  takeBroadPhase() {\n    const ret = wasm.rawdeserializedworld_takeBroadPhase(this.__wbg_ptr);\n    return ret === 0 ? undefined : RawBroadPhase.__wrap(ret);\n  }\n  /**\n  * @returns {RawNarrowPhase | undefined}\n  */\n  takeNarrowPhase() {\n    const ret = wasm.rawdeserializedworld_takeNarrowPhase(this.__wbg_ptr);\n    return ret === 0 ? undefined : RawNarrowPhase.__wrap(ret);\n  }\n  /**\n  * @returns {RawRigidBodySet | undefined}\n  */\n  takeBodies() {\n    const ret = wasm.rawdeserializedworld_takeBodies(this.__wbg_ptr);\n    return ret === 0 ? undefined : RawRigidBodySet.__wrap(ret);\n  }\n  /**\n  * @returns {RawColliderSet | undefined}\n  */\n  takeColliders() {\n    const ret = wasm.rawdeserializedworld_takeColliders(this.__wbg_ptr);\n    return ret === 0 ? undefined : RawColliderSet.__wrap(ret);\n  }\n  /**\n  * @returns {RawImpulseJointSet | undefined}\n  */\n  takeImpulseJoints() {\n    const ret = wasm.rawdeserializedworld_takeImpulseJoints(this.__wbg_ptr);\n    return ret === 0 ? undefined : RawImpulseJointSet.__wrap(ret);\n  }\n  /**\n  * @returns {RawMultibodyJointSet | undefined}\n  */\n  takeMultibodyJoints() {\n    const ret = wasm.rawdeserializedworld_takeMultibodyJoints(this.__wbg_ptr);\n    return ret === 0 ? undefined : RawMultibodyJointSet.__wrap(ret);\n  }\n}\n/**\n*/\nclass RawDynamicRayCastVehicleController {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawdynamicraycastvehiclecontroller_free(ptr);\n  }\n  /**\n  * @param {number} chassis\n  */\n  constructor(chassis) {\n    const ret = wasm.rawdynamicraycastvehiclecontroller_new(chassis);\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * @returns {number}\n  */\n  current_vehicle_speed() {\n    const ret = wasm.rawdynamicraycastvehiclecontroller_current_vehicle_speed(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {number}\n  */\n  chassis() {\n    const ret = wasm.rawdynamicraycastvehiclecontroller_chassis(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {number}\n  */\n  index_up_axis() {\n    const ret = wasm.rawdynamicraycastvehiclecontroller_index_up_axis(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} axis\n  */\n  set_index_up_axis(axis) {\n    wasm.rawdynamicraycastvehiclecontroller_set_index_up_axis(this.__wbg_ptr, axis);\n  }\n  /**\n  * @returns {number}\n  */\n  index_forward_axis() {\n    const ret = wasm.rawdynamicraycastvehiclecontroller_index_forward_axis(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} axis\n  */\n  set_index_forward_axis(axis) {\n    wasm.rawdynamicraycastvehiclecontroller_set_index_forward_axis(this.__wbg_ptr, axis);\n  }\n  /**\n  * @param {RawVector} chassis_connection_cs\n  * @param {RawVector} direction_cs\n  * @param {RawVector} axle_cs\n  * @param {number} suspension_rest_length\n  * @param {number} radius\n  */\n  add_wheel(chassis_connection_cs, direction_cs, axle_cs, suspension_rest_length, radius) {\n    _assertClass(chassis_connection_cs, RawVector);\n    _assertClass(direction_cs, RawVector);\n    _assertClass(axle_cs, RawVector);\n    wasm.rawdynamicraycastvehiclecontroller_add_wheel(this.__wbg_ptr, chassis_connection_cs.__wbg_ptr, direction_cs.__wbg_ptr, axle_cs.__wbg_ptr, suspension_rest_length, radius);\n  }\n  /**\n  * @returns {number}\n  */\n  num_wheels() {\n    const ret = wasm.rawdynamicraycastvehiclecontroller_num_wheels(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} dt\n  * @param {RawRigidBodySet} bodies\n  * @param {RawColliderSet} colliders\n  * @param {RawQueryPipeline} queries\n  * @param {number} filter_flags\n  * @param {number | undefined} filter_groups\n  * @param {Function} filter_predicate\n  */\n  update_vehicle(dt, bodies, colliders, queries, filter_flags, filter_groups, filter_predicate) {\n    try {\n      _assertClass(bodies, RawRigidBodySet);\n      _assertClass(colliders, RawColliderSet);\n      _assertClass(queries, RawQueryPipeline);\n      wasm.rawdynamicraycastvehiclecontroller_update_vehicle(this.__wbg_ptr, dt, bodies.__wbg_ptr, colliders.__wbg_ptr, queries.__wbg_ptr, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, addBorrowedObject(filter_predicate));\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  /**\n  * @param {number} i\n  * @returns {RawVector | undefined}\n  */\n  wheel_chassis_connection_point_cs(i) {\n    const ret = wasm.rawdynamicraycastvehiclecontroller_wheel_chassis_connection_point_cs(this.__wbg_ptr, i);\n    return ret === 0 ? undefined : RawVector.__wrap(ret);\n  }\n  /**\n  * @param {number} i\n  * @param {RawVector} value\n  */\n  set_wheel_chassis_connection_point_cs(i, value) {\n    _assertClass(value, RawVector);\n    wasm.rawdynamicraycastvehiclecontroller_set_wheel_chassis_connection_point_cs(this.__wbg_ptr, i, value.__wbg_ptr);\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_suspension_rest_length(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_suspension_rest_length(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @param {number} value\n  */\n  set_wheel_suspension_rest_length(i, value) {\n    wasm.rawdynamicraycastvehiclecontroller_set_wheel_suspension_rest_length(this.__wbg_ptr, i, value);\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_max_suspension_travel(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_max_suspension_travel(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @param {number} value\n  */\n  set_wheel_max_suspension_travel(i, value) {\n    wasm.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_travel(this.__wbg_ptr, i, value);\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_radius(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_radius(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @param {number} value\n  */\n  set_wheel_radius(i, value) {\n    wasm.rawdynamicraycastvehiclecontroller_set_wheel_radius(this.__wbg_ptr, i, value);\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_suspension_stiffness(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_suspension_stiffness(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @param {number} value\n  */\n  set_wheel_suspension_stiffness(i, value) {\n    wasm.rawdynamicraycastvehiclecontroller_set_wheel_suspension_stiffness(this.__wbg_ptr, i, value);\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_suspension_compression(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_suspension_compression(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @param {number} value\n  */\n  set_wheel_suspension_compression(i, value) {\n    wasm.rawdynamicraycastvehiclecontroller_set_wheel_suspension_compression(this.__wbg_ptr, i, value);\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_suspension_relaxation(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_suspension_relaxation(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @param {number} value\n  */\n  set_wheel_suspension_relaxation(i, value) {\n    wasm.rawdynamicraycastvehiclecontroller_set_wheel_suspension_relaxation(this.__wbg_ptr, i, value);\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_max_suspension_force(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_max_suspension_force(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @param {number} value\n  */\n  set_wheel_max_suspension_force(i, value) {\n    wasm.rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_force(this.__wbg_ptr, i, value);\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_brake(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_brake(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @param {number} value\n  */\n  set_wheel_brake(i, value) {\n    wasm.rawdynamicraycastvehiclecontroller_set_wheel_brake(this.__wbg_ptr, i, value);\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_steering(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_steering(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @param {number} value\n  */\n  set_wheel_steering(i, value) {\n    wasm.rawdynamicraycastvehiclecontroller_set_wheel_steering(this.__wbg_ptr, i, value);\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_engine_force(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_engine_force(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @param {number} value\n  */\n  set_wheel_engine_force(i, value) {\n    wasm.rawdynamicraycastvehiclecontroller_set_wheel_engine_force(this.__wbg_ptr, i, value);\n  }\n  /**\n  * @param {number} i\n  * @returns {RawVector | undefined}\n  */\n  wheel_direction_cs(i) {\n    const ret = wasm.rawdynamicraycastvehiclecontroller_wheel_direction_cs(this.__wbg_ptr, i);\n    return ret === 0 ? undefined : RawVector.__wrap(ret);\n  }\n  /**\n  * @param {number} i\n  * @param {RawVector} value\n  */\n  set_wheel_direction_cs(i, value) {\n    _assertClass(value, RawVector);\n    wasm.rawdynamicraycastvehiclecontroller_set_wheel_direction_cs(this.__wbg_ptr, i, value.__wbg_ptr);\n  }\n  /**\n  * @param {number} i\n  * @returns {RawVector | undefined}\n  */\n  wheel_axle_cs(i) {\n    const ret = wasm.rawdynamicraycastvehiclecontroller_wheel_axle_cs(this.__wbg_ptr, i);\n    return ret === 0 ? undefined : RawVector.__wrap(ret);\n  }\n  /**\n  * @param {number} i\n  * @param {RawVector} value\n  */\n  set_wheel_axle_cs(i, value) {\n    _assertClass(value, RawVector);\n    wasm.rawdynamicraycastvehiclecontroller_set_wheel_axle_cs(this.__wbg_ptr, i, value.__wbg_ptr);\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_friction_slip(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_friction_slip(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @param {number} value\n  */\n  set_wheel_friction_slip(i, value) {\n    wasm.rawdynamicraycastvehiclecontroller_set_wheel_friction_slip(this.__wbg_ptr, i, value);\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_side_friction_stiffness(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_side_friction_stiffness(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @param {number} stiffness\n  */\n  set_wheel_side_friction_stiffness(i, stiffness) {\n    wasm.rawdynamicraycastvehiclecontroller_set_wheel_side_friction_stiffness(this.__wbg_ptr, i, stiffness);\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_rotation(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_rotation(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_forward_impulse(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_forward_impulse(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_side_impulse(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_side_impulse(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_suspension_force(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_suspension_force(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @returns {RawVector | undefined}\n  */\n  wheel_contact_normal_ws(i) {\n    const ret = wasm.rawdynamicraycastvehiclecontroller_wheel_contact_normal_ws(this.__wbg_ptr, i);\n    return ret === 0 ? undefined : RawVector.__wrap(ret);\n  }\n  /**\n  * @param {number} i\n  * @returns {RawVector | undefined}\n  */\n  wheel_contact_point_ws(i) {\n    const ret = wasm.rawdynamicraycastvehiclecontroller_wheel_contact_point_ws(this.__wbg_ptr, i);\n    return ret === 0 ? undefined : RawVector.__wrap(ret);\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_suspension_length(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_suspension_length(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} i\n  * @returns {RawVector | undefined}\n  */\n  wheel_hard_point_ws(i) {\n    const ret = wasm.rawdynamicraycastvehiclecontroller_wheel_hard_point_ws(this.__wbg_ptr, i);\n    return ret === 0 ? undefined : RawVector.__wrap(ret);\n  }\n  /**\n  * @param {number} i\n  * @returns {boolean}\n  */\n  wheel_is_in_contact(i) {\n    const ret = wasm.rawdynamicraycastvehiclecontroller_wheel_is_in_contact(this.__wbg_ptr, i);\n    return ret !== 0;\n  }\n  /**\n  * @param {number} i\n  * @returns {number | undefined}\n  */\n  wheel_ground_object(i) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawdynamicraycastvehiclecontroller_wheel_ground_object(retptr, this.__wbg_ptr, i);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r2 = getFloat64Memory0()[retptr / 8 + 1];\n      return r0 === 0 ? undefined : r2;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\n/**\n* A structure responsible for collecting events generated\n* by the physics engine.\n*/\nclass RawEventQueue {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_raweventqueue_free(ptr);\n  }\n  /**\n  * Creates a new event collector.\n  *\n  * # Parameters\n  * - `autoDrain`: setting this to `true` is strongly recommended. If true, the collector will\n  * be automatically drained before each `world.step(collector)`. If false, the collector will\n  * keep all events in memory unless it is manually drained/cleared; this may lead to unbounded use of\n  * RAM if no drain is performed.\n  * @param {boolean} autoDrain\n  */\n  constructor(autoDrain) {\n    const ret = wasm.raweventqueue_new(autoDrain);\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * Applies the given javascript closure on each collision event of this collector, then clear\n  * the internal collision event buffer.\n  *\n  * # Parameters\n  * - `f(handle1, handle2, started)`:  JavaScript closure applied to each collision event. The\n  * closure should take three arguments: two integers representing the handles of the colliders\n  * involved in the collision, and a boolean indicating if the collision started (true) or stopped\n  * (false).\n  * @param {Function} f\n  */\n  drainCollisionEvents(f) {\n    try {\n      wasm.raweventqueue_drainCollisionEvents(this.__wbg_ptr, addBorrowedObject(f));\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  /**\n  * @param {Function} f\n  */\n  drainContactForceEvents(f) {\n    try {\n      wasm.raweventqueue_drainContactForceEvents(this.__wbg_ptr, addBorrowedObject(f));\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  /**\n  * Removes all events contained by this collector.\n  */\n  clear() {\n    wasm.raweventqueue_clear(this.__wbg_ptr);\n  }\n}\n/**\n*/\nclass RawGenericJoint {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawGenericJoint.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawgenericjoint_free(ptr);\n  }\n  /**\n  * Creates a new joint descriptor that builds generic joints.\n  *\n  * Generic joints allow arbitrary axes of freedom to be selected\n  * for the joint from the available 6 degrees of freedom.\n  * @param {RawVector} anchor1\n  * @param {RawVector} anchor2\n  * @param {RawVector} axis\n  * @param {number} lockedAxes\n  * @returns {RawGenericJoint | undefined}\n  */\n  static generic(anchor1, anchor2, axis, lockedAxes) {\n    _assertClass(anchor1, RawVector);\n    _assertClass(anchor2, RawVector);\n    _assertClass(axis, RawVector);\n    const ret = wasm.rawgenericjoint_generic(anchor1.__wbg_ptr, anchor2.__wbg_ptr, axis.__wbg_ptr, lockedAxes);\n    return ret === 0 ? undefined : RawGenericJoint.__wrap(ret);\n  }\n  /**\n  * @param {number} rest_length\n  * @param {number} stiffness\n  * @param {number} damping\n  * @param {RawVector} anchor1\n  * @param {RawVector} anchor2\n  * @returns {RawGenericJoint}\n  */\n  static spring(rest_length, stiffness, damping, anchor1, anchor2) {\n    _assertClass(anchor1, RawVector);\n    _assertClass(anchor2, RawVector);\n    const ret = wasm.rawgenericjoint_spring(rest_length, stiffness, damping, anchor1.__wbg_ptr, anchor2.__wbg_ptr);\n    return RawGenericJoint.__wrap(ret);\n  }\n  /**\n  * @param {number} length\n  * @param {RawVector} anchor1\n  * @param {RawVector} anchor2\n  * @returns {RawGenericJoint}\n  */\n  static rope(length, anchor1, anchor2) {\n    _assertClass(anchor1, RawVector);\n    _assertClass(anchor2, RawVector);\n    const ret = wasm.rawgenericjoint_rope(length, anchor1.__wbg_ptr, anchor2.__wbg_ptr);\n    return RawGenericJoint.__wrap(ret);\n  }\n  /**\n  * Create a new joint descriptor that builds spherical joints.\n  *\n  * A spherical joints allows three relative rotational degrees of freedom\n  * by preventing any relative translation between the anchors of the\n  * two attached rigid-bodies.\n  * @param {RawVector} anchor1\n  * @param {RawVector} anchor2\n  * @returns {RawGenericJoint}\n  */\n  static spherical(anchor1, anchor2) {\n    _assertClass(anchor1, RawVector);\n    _assertClass(anchor2, RawVector);\n    const ret = wasm.rawgenericjoint_spherical(anchor1.__wbg_ptr, anchor2.__wbg_ptr);\n    return RawGenericJoint.__wrap(ret);\n  }\n  /**\n  * Creates a new joint descriptor that builds a Prismatic joint.\n  *\n  * A prismatic joint removes all the degrees of freedom between the\n  * affected bodies, except for the translation along one axis.\n  *\n  * Returns `None` if any of the provided axes cannot be normalized.\n  * @param {RawVector} anchor1\n  * @param {RawVector} anchor2\n  * @param {RawVector} axis\n  * @param {boolean} limitsEnabled\n  * @param {number} limitsMin\n  * @param {number} limitsMax\n  * @returns {RawGenericJoint | undefined}\n  */\n  static prismatic(anchor1, anchor2, axis, limitsEnabled, limitsMin, limitsMax) {\n    _assertClass(anchor1, RawVector);\n    _assertClass(anchor2, RawVector);\n    _assertClass(axis, RawVector);\n    const ret = wasm.rawgenericjoint_prismatic(anchor1.__wbg_ptr, anchor2.__wbg_ptr, axis.__wbg_ptr, limitsEnabled, limitsMin, limitsMax);\n    return ret === 0 ? undefined : RawGenericJoint.__wrap(ret);\n  }\n  /**\n  * Creates a new joint descriptor that builds a Fixed joint.\n  *\n  * A fixed joint removes all the degrees of freedom between the affected bodies.\n  * @param {RawVector} anchor1\n  * @param {RawRotation} axes1\n  * @param {RawVector} anchor2\n  * @param {RawRotation} axes2\n  * @returns {RawGenericJoint}\n  */\n  static fixed(anchor1, axes1, anchor2, axes2) {\n    _assertClass(anchor1, RawVector);\n    _assertClass(axes1, RawRotation);\n    _assertClass(anchor2, RawVector);\n    _assertClass(axes2, RawRotation);\n    const ret = wasm.rawgenericjoint_fixed(anchor1.__wbg_ptr, axes1.__wbg_ptr, anchor2.__wbg_ptr, axes2.__wbg_ptr);\n    return RawGenericJoint.__wrap(ret);\n  }\n  /**\n  * Create a new joint descriptor that builds Revolute joints.\n  *\n  * A revolute joint removes all degrees of freedom between the affected\n  * bodies except for the rotation along one axis.\n  * @param {RawVector} anchor1\n  * @param {RawVector} anchor2\n  * @param {RawVector} axis\n  * @returns {RawGenericJoint | undefined}\n  */\n  static revolute(anchor1, anchor2, axis) {\n    _assertClass(anchor1, RawVector);\n    _assertClass(anchor2, RawVector);\n    _assertClass(axis, RawVector);\n    const ret = wasm.rawgenericjoint_revolute(anchor1.__wbg_ptr, anchor2.__wbg_ptr, axis.__wbg_ptr);\n    return ret === 0 ? undefined : RawGenericJoint.__wrap(ret);\n  }\n}\n/**\n*/\nclass RawImpulseJointSet {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawImpulseJointSet.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawimpulsejointset_free(ptr);\n  }\n  /**\n  * The type of this joint.\n  * @param {number} handle\n  * @returns {RawJointType}\n  */\n  jointType(handle) {\n    const ret = wasm.rawimpulsejointset_jointType(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * The unique integer identifier of the first rigid-body this joint it attached to.\n  * @param {number} handle\n  * @returns {number}\n  */\n  jointBodyHandle1(handle) {\n    const ret = wasm.rawimpulsejointset_jointBodyHandle1(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * The unique integer identifier of the second rigid-body this joint is attached to.\n  * @param {number} handle\n  * @returns {number}\n  */\n  jointBodyHandle2(handle) {\n    const ret = wasm.rawimpulsejointset_jointBodyHandle2(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * The angular part of the joint’s local frame relative to the first rigid-body it is attached to.\n  * @param {number} handle\n  * @returns {RawRotation}\n  */\n  jointFrameX1(handle) {\n    const ret = wasm.rawimpulsejointset_jointFrameX1(this.__wbg_ptr, handle);\n    return RawRotation.__wrap(ret);\n  }\n  /**\n  * The angular part of the joint’s local frame relative to the second rigid-body it is attached to.\n  * @param {number} handle\n  * @returns {RawRotation}\n  */\n  jointFrameX2(handle) {\n    const ret = wasm.rawimpulsejointset_jointFrameX2(this.__wbg_ptr, handle);\n    return RawRotation.__wrap(ret);\n  }\n  /**\n  * The position of the first anchor of this joint.\n  *\n  * The first anchor gives the position of the points application point on the\n  * local frame of the first rigid-body it is attached to.\n  * @param {number} handle\n  * @returns {RawVector}\n  */\n  jointAnchor1(handle) {\n    const ret = wasm.rawimpulsejointset_jointAnchor1(this.__wbg_ptr, handle);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * The position of the second anchor of this joint.\n  *\n  * The second anchor gives the position of the points application point on the\n  * local frame of the second rigid-body it is attached to.\n  * @param {number} handle\n  * @returns {RawVector}\n  */\n  jointAnchor2(handle) {\n    const ret = wasm.rawimpulsejointset_jointAnchor2(this.__wbg_ptr, handle);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * Sets the position of the first local anchor\n  * @param {number} handle\n  * @param {RawVector} newPos\n  */\n  jointSetAnchor1(handle, newPos) {\n    _assertClass(newPos, RawVector);\n    wasm.rawimpulsejointset_jointSetAnchor1(this.__wbg_ptr, handle, newPos.__wbg_ptr);\n  }\n  /**\n  * Sets the position of the second local anchor\n  * @param {number} handle\n  * @param {RawVector} newPos\n  */\n  jointSetAnchor2(handle, newPos) {\n    _assertClass(newPos, RawVector);\n    wasm.rawimpulsejointset_jointSetAnchor2(this.__wbg_ptr, handle, newPos.__wbg_ptr);\n  }\n  /**\n  * Are contacts between the rigid-bodies attached by this joint enabled?\n  * @param {number} handle\n  * @returns {boolean}\n  */\n  jointContactsEnabled(handle) {\n    const ret = wasm.rawimpulsejointset_jointContactsEnabled(this.__wbg_ptr, handle);\n    return ret !== 0;\n  }\n  /**\n  * Sets whether contacts are enabled between the rigid-bodies attached by this joint.\n  * @param {number} handle\n  * @param {boolean} enabled\n  */\n  jointSetContactsEnabled(handle, enabled) {\n    wasm.rawimpulsejointset_jointSetContactsEnabled(this.__wbg_ptr, handle, enabled);\n  }\n  /**\n  * Are the limits for this joint enabled?\n  * @param {number} handle\n  * @param {RawJointAxis} axis\n  * @returns {boolean}\n  */\n  jointLimitsEnabled(handle, axis) {\n    const ret = wasm.rawimpulsejointset_jointLimitsEnabled(this.__wbg_ptr, handle, axis);\n    return ret !== 0;\n  }\n  /**\n  * Return the lower limit along the given joint axis.\n  * @param {number} handle\n  * @param {RawJointAxis} axis\n  * @returns {number}\n  */\n  jointLimitsMin(handle, axis) {\n    const ret = wasm.rawimpulsejointset_jointLimitsMin(this.__wbg_ptr, handle, axis);\n    return ret;\n  }\n  /**\n  * If this is a prismatic joint, returns its upper limit.\n  * @param {number} handle\n  * @param {RawJointAxis} axis\n  * @returns {number}\n  */\n  jointLimitsMax(handle, axis) {\n    const ret = wasm.rawimpulsejointset_jointLimitsMax(this.__wbg_ptr, handle, axis);\n    return ret;\n  }\n  /**\n  * Enables and sets the joint limits\n  * @param {number} handle\n  * @param {RawJointAxis} axis\n  * @param {number} min\n  * @param {number} max\n  */\n  jointSetLimits(handle, axis, min, max) {\n    wasm.rawimpulsejointset_jointSetLimits(this.__wbg_ptr, handle, axis, min, max);\n  }\n  /**\n  * @param {number} handle\n  * @param {RawJointAxis} axis\n  * @param {RawMotorModel} model\n  */\n  jointConfigureMotorModel(handle, axis, model) {\n    wasm.rawimpulsejointset_jointConfigureMotorModel(this.__wbg_ptr, handle, axis, model);\n  }\n  /**\n  * @param {number} handle\n  * @param {RawJointAxis} axis\n  * @param {number} targetVel\n  * @param {number} factor\n  */\n  jointConfigureMotorVelocity(handle, axis, targetVel, factor) {\n    wasm.rawimpulsejointset_jointConfigureMotorVelocity(this.__wbg_ptr, handle, axis, targetVel, factor);\n  }\n  /**\n  * @param {number} handle\n  * @param {RawJointAxis} axis\n  * @param {number} targetPos\n  * @param {number} stiffness\n  * @param {number} damping\n  */\n  jointConfigureMotorPosition(handle, axis, targetPos, stiffness, damping) {\n    wasm.rawimpulsejointset_jointConfigureMotorPosition(this.__wbg_ptr, handle, axis, targetPos, stiffness, damping);\n  }\n  /**\n  * @param {number} handle\n  * @param {RawJointAxis} axis\n  * @param {number} targetPos\n  * @param {number} targetVel\n  * @param {number} stiffness\n  * @param {number} damping\n  */\n  jointConfigureMotor(handle, axis, targetPos, targetVel, stiffness, damping) {\n    wasm.rawimpulsejointset_jointConfigureMotor(this.__wbg_ptr, handle, axis, targetPos, targetVel, stiffness, damping);\n  }\n  /**\n  */\n  constructor() {\n    const ret = wasm.rawimpulsejointset_new();\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * @param {RawGenericJoint} params\n  * @param {number} parent1\n  * @param {number} parent2\n  * @param {boolean} wake_up\n  * @returns {number}\n  */\n  createJoint(params, parent1, parent2, wake_up) {\n    _assertClass(params, RawGenericJoint);\n    const ret = wasm.rawimpulsejointset_createJoint(this.__wbg_ptr, params.__wbg_ptr, parent1, parent2, wake_up);\n    return ret;\n  }\n  /**\n  * @param {number} handle\n  * @param {boolean} wakeUp\n  */\n  remove(handle, wakeUp) {\n    wasm.rawimpulsejointset_remove(this.__wbg_ptr, handle, wakeUp);\n  }\n  /**\n  * @returns {number}\n  */\n  len() {\n    const ret = wasm.rawimpulsejointset_len(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} handle\n  * @returns {boolean}\n  */\n  contains(handle) {\n    const ret = wasm.rawimpulsejointset_contains(this.__wbg_ptr, handle);\n    return ret !== 0;\n  }\n  /**\n  * Applies the given JavaScript function to the integer handle of each joint managed by this physics world.\n  *\n  * # Parameters\n  * - `f(handle)`: the function to apply to the integer handle of each joint managed by this set. Called as `f(collider)`.\n  * @param {Function} f\n  */\n  forEachJointHandle(f) {\n    try {\n      wasm.rawimpulsejointset_forEachJointHandle(this.__wbg_ptr, addBorrowedObject(f));\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  /**\n  * Applies the given JavaScript function to the integer handle of each joint attached to the given rigid-body.\n  *\n  * # Parameters\n  * - `f(handle)`: the function to apply to the integer handle of each joint attached to the rigid-body. Called as `f(collider)`.\n  * @param {number} body\n  * @param {Function} f\n  */\n  forEachJointAttachedToRigidBody(body, f) {\n    try {\n      wasm.rawimpulsejointset_forEachJointAttachedToRigidBody(this.__wbg_ptr, body, addBorrowedObject(f));\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n}\n/**\n*/\nclass RawIntegrationParameters {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawIntegrationParameters.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawintegrationparameters_free(ptr);\n  }\n  /**\n  */\n  constructor() {\n    const ret = wasm.rawintegrationparameters_new();\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * @returns {number}\n  */\n  get dt() {\n    const ret = wasm.rawintegrationparameters_dt(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {number}\n  */\n  get erp() {\n    const ret = wasm.rawintegrationparameters_erp(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {number}\n  */\n  get normalizedAllowedLinearError() {\n    const ret = wasm.rawdynamicraycastvehiclecontroller_current_vehicle_speed(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {number}\n  */\n  get normalizedPredictionDistance() {\n    const ret = wasm.rawcontactforceevent_max_force_magnitude(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {number}\n  */\n  get numSolverIterations() {\n    const ret = wasm.rawintegrationparameters_numSolverIterations(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @returns {number}\n  */\n  get numAdditionalFrictionIterations() {\n    const ret = wasm.rawdynamicraycastvehiclecontroller_index_up_axis(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @returns {number}\n  */\n  get numInternalPgsIterations() {\n    const ret = wasm.rawdynamicraycastvehiclecontroller_index_forward_axis(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @returns {number}\n  */\n  get minIslandSize() {\n    const ret = wasm.rawimpulsejointset_len(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @returns {number}\n  */\n  get maxCcdSubsteps() {\n    const ret = wasm.rawintegrationparameters_maxCcdSubsteps(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @returns {number}\n  */\n  get lengthUnit() {\n    const ret = wasm.rawintegrationparameters_lengthUnit(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @param {number} value\n  */\n  set dt(value) {\n    wasm.rawintegrationparameters_set_dt(this.__wbg_ptr, value);\n  }\n  /**\n  * @param {number} value\n  */\n  set erp(value) {\n    wasm.rawintegrationparameters_set_erp(this.__wbg_ptr, value);\n  }\n  /**\n  * @param {number} value\n  */\n  set normalizedAllowedLinearError(value) {\n    wasm.rawintegrationparameters_set_normalizedAllowedLinearError(this.__wbg_ptr, value);\n  }\n  /**\n  * @param {number} value\n  */\n  set normalizedPredictionDistance(value) {\n    wasm.rawintegrationparameters_set_normalizedPredictionDistance(this.__wbg_ptr, value);\n  }\n  /**\n  * @param {number} value\n  */\n  set numSolverIterations(value) {\n    wasm.rawintegrationparameters_set_numSolverIterations(this.__wbg_ptr, value);\n  }\n  /**\n  * @param {number} value\n  */\n  set numAdditionalFrictionIterations(value) {\n    wasm.rawdynamicraycastvehiclecontroller_set_index_up_axis(this.__wbg_ptr, value);\n  }\n  /**\n  * @param {number} value\n  */\n  set numInternalPgsIterations(value) {\n    wasm.rawdynamicraycastvehiclecontroller_set_index_forward_axis(this.__wbg_ptr, value);\n  }\n  /**\n  * @param {number} value\n  */\n  set minIslandSize(value) {\n    wasm.rawintegrationparameters_set_minIslandSize(this.__wbg_ptr, value);\n  }\n  /**\n  * @param {number} value\n  */\n  set maxCcdSubsteps(value) {\n    wasm.rawintegrationparameters_set_maxCcdSubsteps(this.__wbg_ptr, value);\n  }\n  /**\n  * @param {number} value\n  */\n  set lengthUnit(value) {\n    wasm.rawintegrationparameters_set_lengthUnit(this.__wbg_ptr, value);\n  }\n  /**\n  */\n  switchToStandardPgsSolver() {\n    wasm.rawintegrationparameters_switchToStandardPgsSolver(this.__wbg_ptr);\n  }\n  /**\n  */\n  switchToSmallStepsPgsSolver() {\n    wasm.rawintegrationparameters_switchToSmallStepsPgsSolver(this.__wbg_ptr);\n  }\n  /**\n  */\n  switchToSmallStepsPgsSolverWithoutWarmstart() {\n    wasm.rawintegrationparameters_switchToSmallStepsPgsSolverWithoutWarmstart(this.__wbg_ptr);\n  }\n}\n/**\n*/\nclass RawIslandManager {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawIslandManager.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawislandmanager_free(ptr);\n  }\n  /**\n  */\n  constructor() {\n    const ret = wasm.rawislandmanager_new();\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * Applies the given JavaScript function to the integer handle of each active rigid-body\n  * managed by this island manager.\n  *\n  * After a short time of inactivity, a rigid-body is automatically deactivated (\"asleep\") by\n  * the physics engine in order to save computational power. A sleeping rigid-body never moves\n  * unless it is moved manually by the user.\n  *\n  * # Parameters\n  * - `f(handle)`: the function to apply to the integer handle of each active rigid-body managed by this\n  *   set. Called as `f(collider)`.\n  * @param {Function} f\n  */\n  forEachActiveRigidBodyHandle(f) {\n    try {\n      wasm.rawislandmanager_forEachActiveRigidBodyHandle(this.__wbg_ptr, addBorrowedObject(f));\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n}\n/**\n*/\nclass RawKinematicCharacterController {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawkinematiccharactercontroller_free(ptr);\n  }\n  /**\n  * @param {number} offset\n  */\n  constructor(offset) {\n    const ret = wasm.rawkinematiccharactercontroller_new(offset);\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * @returns {RawVector}\n  */\n  up() {\n    const ret = wasm.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @param {RawVector} vector\n  */\n  setUp(vector) {\n    _assertClass(vector, RawVector);\n    wasm.rawkinematiccharactercontroller_setUp(this.__wbg_ptr, vector.__wbg_ptr);\n  }\n  /**\n  * @returns {number}\n  */\n  normalNudgeFactor() {\n    const ret = wasm.rawkinematiccharactercontroller_normalNudgeFactor(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @param {number} value\n  */\n  setNormalNudgeFactor(value) {\n    wasm.rawkinematiccharactercontroller_setNormalNudgeFactor(this.__wbg_ptr, value);\n  }\n  /**\n  * @returns {number}\n  */\n  offset() {\n    const ret = wasm.rawintegrationparameters_dt(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @param {number} value\n  */\n  setOffset(value) {\n    wasm.rawkinematiccharactercontroller_setOffset(this.__wbg_ptr, value);\n  }\n  /**\n  * @returns {boolean}\n  */\n  slideEnabled() {\n    const ret = wasm.rawkinematiccharactercontroller_slideEnabled(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  /**\n  * @param {boolean} enabled\n  */\n  setSlideEnabled(enabled) {\n    wasm.rawkinematiccharactercontroller_setSlideEnabled(this.__wbg_ptr, enabled);\n  }\n  /**\n  * @returns {number | undefined}\n  */\n  autostepMaxHeight() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawkinematiccharactercontroller_autostepMaxHeight(retptr, this.__wbg_ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @returns {number | undefined}\n  */\n  autostepMinWidth() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawkinematiccharactercontroller_autostepMinWidth(retptr, this.__wbg_ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @returns {boolean | undefined}\n  */\n  autostepIncludesDynamicBodies() {\n    const ret = wasm.rawkinematiccharactercontroller_autostepIncludesDynamicBodies(this.__wbg_ptr);\n    return ret === 0xFFFFFF ? undefined : ret !== 0;\n  }\n  /**\n  * @returns {boolean}\n  */\n  autostepEnabled() {\n    const ret = wasm.rawkinematiccharactercontroller_autostepEnabled(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  /**\n  * @param {number} maxHeight\n  * @param {number} minWidth\n  * @param {boolean} includeDynamicBodies\n  */\n  enableAutostep(maxHeight, minWidth, includeDynamicBodies) {\n    wasm.rawkinematiccharactercontroller_enableAutostep(this.__wbg_ptr, maxHeight, minWidth, includeDynamicBodies);\n  }\n  /**\n  */\n  disableAutostep() {\n    wasm.rawkinematiccharactercontroller_disableAutostep(this.__wbg_ptr);\n  }\n  /**\n  * @returns {number}\n  */\n  maxSlopeClimbAngle() {\n    const ret = wasm.rawkinematiccharactercontroller_maxSlopeClimbAngle(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @param {number} angle\n  */\n  setMaxSlopeClimbAngle(angle) {\n    wasm.rawkinematiccharactercontroller_setMaxSlopeClimbAngle(this.__wbg_ptr, angle);\n  }\n  /**\n  * @returns {number}\n  */\n  minSlopeSlideAngle() {\n    const ret = wasm.rawkinematiccharactercontroller_minSlopeSlideAngle(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @param {number} angle\n  */\n  setMinSlopeSlideAngle(angle) {\n    wasm.rawkinematiccharactercontroller_setMinSlopeSlideAngle(this.__wbg_ptr, angle);\n  }\n  /**\n  * @returns {number | undefined}\n  */\n  snapToGroundDistance() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawkinematiccharactercontroller_snapToGroundDistance(retptr, this.__wbg_ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getFloat32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {number} distance\n  */\n  enableSnapToGround(distance) {\n    wasm.rawkinematiccharactercontroller_enableSnapToGround(this.__wbg_ptr, distance);\n  }\n  /**\n  */\n  disableSnapToGround() {\n    wasm.rawkinematiccharactercontroller_disableSnapToGround(this.__wbg_ptr);\n  }\n  /**\n  * @returns {boolean}\n  */\n  snapToGroundEnabled() {\n    const ret = wasm.rawkinematiccharactercontroller_snapToGroundEnabled(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  /**\n  * @param {number} dt\n  * @param {RawRigidBodySet} bodies\n  * @param {RawColliderSet} colliders\n  * @param {RawQueryPipeline} queries\n  * @param {number} collider_handle\n  * @param {RawVector} desired_translation_delta\n  * @param {boolean} apply_impulses_to_dynamic_bodies\n  * @param {number | undefined} character_mass\n  * @param {number} filter_flags\n  * @param {number | undefined} filter_groups\n  * @param {Function} filter_predicate\n  */\n  computeColliderMovement(dt, bodies, colliders, queries, collider_handle, desired_translation_delta, apply_impulses_to_dynamic_bodies, character_mass, filter_flags, filter_groups, filter_predicate) {\n    try {\n      _assertClass(bodies, RawRigidBodySet);\n      _assertClass(colliders, RawColliderSet);\n      _assertClass(queries, RawQueryPipeline);\n      _assertClass(desired_translation_delta, RawVector);\n      wasm.rawkinematiccharactercontroller_computeColliderMovement(this.__wbg_ptr, dt, bodies.__wbg_ptr, colliders.__wbg_ptr, queries.__wbg_ptr, collider_handle, desired_translation_delta.__wbg_ptr, apply_impulses_to_dynamic_bodies, !isLikeNone(character_mass), isLikeNone(character_mass) ? 0 : character_mass, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, addBorrowedObject(filter_predicate));\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  /**\n  * @returns {RawVector}\n  */\n  computedMovement() {\n    const ret = wasm.rawkinematiccharactercontroller_computedMovement(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {boolean}\n  */\n  computedGrounded() {\n    const ret = wasm.rawkinematiccharactercontroller_computedGrounded(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  /**\n  * @returns {number}\n  */\n  numComputedCollisions() {\n    const ret = wasm.rawkinematiccharactercontroller_numComputedCollisions(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} i\n  * @param {RawCharacterCollision} collision\n  * @returns {boolean}\n  */\n  computedCollision(i, collision) {\n    _assertClass(collision, RawCharacterCollision);\n    const ret = wasm.rawkinematiccharactercontroller_computedCollision(this.__wbg_ptr, i, collision.__wbg_ptr);\n    return ret !== 0;\n  }\n}\n/**\n*/\nclass RawMultibodyJointSet {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawMultibodyJointSet.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawmultibodyjointset_free(ptr);\n  }\n  /**\n  * The type of this joint.\n  * @param {number} handle\n  * @returns {RawJointType}\n  */\n  jointType(handle) {\n    const ret = wasm.rawmultibodyjointset_jointType(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * The angular part of the joint’s local frame relative to the first rigid-body it is attached to.\n  * @param {number} handle\n  * @returns {RawRotation}\n  */\n  jointFrameX1(handle) {\n    const ret = wasm.rawmultibodyjointset_jointFrameX1(this.__wbg_ptr, handle);\n    return RawRotation.__wrap(ret);\n  }\n  /**\n  * The angular part of the joint’s local frame relative to the second rigid-body it is attached to.\n  * @param {number} handle\n  * @returns {RawRotation}\n  */\n  jointFrameX2(handle) {\n    const ret = wasm.rawmultibodyjointset_jointFrameX2(this.__wbg_ptr, handle);\n    return RawRotation.__wrap(ret);\n  }\n  /**\n  * The position of the first anchor of this joint.\n  *\n  * The first anchor gives the position of the points application point on the\n  * local frame of the first rigid-body it is attached to.\n  * @param {number} handle\n  * @returns {RawVector}\n  */\n  jointAnchor1(handle) {\n    const ret = wasm.rawmultibodyjointset_jointAnchor1(this.__wbg_ptr, handle);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * The position of the second anchor of this joint.\n  *\n  * The second anchor gives the position of the points application point on the\n  * local frame of the second rigid-body it is attached to.\n  * @param {number} handle\n  * @returns {RawVector}\n  */\n  jointAnchor2(handle) {\n    const ret = wasm.rawmultibodyjointset_jointAnchor2(this.__wbg_ptr, handle);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * Are contacts between the rigid-bodies attached by this joint enabled?\n  * @param {number} handle\n  * @returns {boolean}\n  */\n  jointContactsEnabled(handle) {\n    const ret = wasm.rawmultibodyjointset_jointContactsEnabled(this.__wbg_ptr, handle);\n    return ret !== 0;\n  }\n  /**\n  * Sets whether contacts are enabled between the rigid-bodies attached by this joint.\n  * @param {number} handle\n  * @param {boolean} enabled\n  */\n  jointSetContactsEnabled(handle, enabled) {\n    wasm.rawmultibodyjointset_jointSetContactsEnabled(this.__wbg_ptr, handle, enabled);\n  }\n  /**\n  * Are the limits for this joint enabled?\n  * @param {number} handle\n  * @param {RawJointAxis} axis\n  * @returns {boolean}\n  */\n  jointLimitsEnabled(handle, axis) {\n    const ret = wasm.rawmultibodyjointset_jointLimitsEnabled(this.__wbg_ptr, handle, axis);\n    return ret !== 0;\n  }\n  /**\n  * Return the lower limit along the given joint axis.\n  * @param {number} handle\n  * @param {RawJointAxis} axis\n  * @returns {number}\n  */\n  jointLimitsMin(handle, axis) {\n    const ret = wasm.rawmultibodyjointset_jointLimitsMin(this.__wbg_ptr, handle, axis);\n    return ret;\n  }\n  /**\n  * If this is a prismatic joint, returns its upper limit.\n  * @param {number} handle\n  * @param {RawJointAxis} axis\n  * @returns {number}\n  */\n  jointLimitsMax(handle, axis) {\n    const ret = wasm.rawmultibodyjointset_jointLimitsMax(this.__wbg_ptr, handle, axis);\n    return ret;\n  }\n  /**\n  */\n  constructor() {\n    const ret = wasm.rawmultibodyjointset_new();\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * @param {RawGenericJoint} params\n  * @param {number} parent1\n  * @param {number} parent2\n  * @param {boolean} wakeUp\n  * @returns {number}\n  */\n  createJoint(params, parent1, parent2, wakeUp) {\n    _assertClass(params, RawGenericJoint);\n    const ret = wasm.rawmultibodyjointset_createJoint(this.__wbg_ptr, params.__wbg_ptr, parent1, parent2, wakeUp);\n    return ret;\n  }\n  /**\n  * @param {number} handle\n  * @param {boolean} wakeUp\n  */\n  remove(handle, wakeUp) {\n    wasm.rawmultibodyjointset_remove(this.__wbg_ptr, handle, wakeUp);\n  }\n  /**\n  * @param {number} handle\n  * @returns {boolean}\n  */\n  contains(handle) {\n    const ret = wasm.rawmultibodyjointset_contains(this.__wbg_ptr, handle);\n    return ret !== 0;\n  }\n  /**\n  * Applies the given JavaScript function to the integer handle of each joint managed by this physics world.\n  *\n  * # Parameters\n  * - `f(handle)`: the function to apply to the integer handle of each joint managed by this set. Called as `f(collider)`.\n  * @param {Function} f\n  */\n  forEachJointHandle(f) {\n    try {\n      wasm.rawmultibodyjointset_forEachJointHandle(this.__wbg_ptr, addBorrowedObject(f));\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  /**\n  * Applies the given JavaScript function to the integer handle of each joint attached to the given rigid-body.\n  *\n  * # Parameters\n  * - `f(handle)`: the function to apply to the integer handle of each joint attached to the rigid-body. Called as `f(collider)`.\n  * @param {number} body\n  * @param {Function} f\n  */\n  forEachJointAttachedToRigidBody(body, f) {\n    try {\n      wasm.rawmultibodyjointset_forEachJointAttachedToRigidBody(this.__wbg_ptr, body, addBorrowedObject(f));\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n}\n/**\n*/\nclass RawNarrowPhase {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawNarrowPhase.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawnarrowphase_free(ptr);\n  }\n  /**\n  */\n  constructor() {\n    const ret = wasm.rawnarrowphase_new();\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * @param {number} handle1\n  * @param {Function} f\n  */\n  contact_pairs_with(handle1, f) {\n    wasm.rawnarrowphase_contact_pairs_with(this.__wbg_ptr, handle1, addHeapObject(f));\n  }\n  /**\n  * @param {number} handle1\n  * @param {number} handle2\n  * @returns {RawContactPair | undefined}\n  */\n  contact_pair(handle1, handle2) {\n    const ret = wasm.rawnarrowphase_contact_pair(this.__wbg_ptr, handle1, handle2);\n    return ret === 0 ? undefined : RawContactPair.__wrap(ret);\n  }\n  /**\n  * @param {number} handle1\n  * @param {Function} f\n  */\n  intersection_pairs_with(handle1, f) {\n    wasm.rawnarrowphase_intersection_pairs_with(this.__wbg_ptr, handle1, addHeapObject(f));\n  }\n  /**\n  * @param {number} handle1\n  * @param {number} handle2\n  * @returns {boolean}\n  */\n  intersection_pair(handle1, handle2) {\n    const ret = wasm.rawnarrowphase_intersection_pair(this.__wbg_ptr, handle1, handle2);\n    return ret !== 0;\n  }\n}\n/**\n*/\nclass RawPhysicsPipeline {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawphysicspipeline_free(ptr);\n  }\n  /**\n  */\n  constructor() {\n    const ret = wasm.rawphysicspipeline_new();\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * @param {RawVector} gravity\n  * @param {RawIntegrationParameters} integrationParameters\n  * @param {RawIslandManager} islands\n  * @param {RawBroadPhase} broadPhase\n  * @param {RawNarrowPhase} narrowPhase\n  * @param {RawRigidBodySet} bodies\n  * @param {RawColliderSet} colliders\n  * @param {RawImpulseJointSet} joints\n  * @param {RawMultibodyJointSet} articulations\n  * @param {RawCCDSolver} ccd_solver\n  */\n  step(gravity, integrationParameters, islands, broadPhase, narrowPhase, bodies, colliders, joints, articulations, ccd_solver) {\n    _assertClass(gravity, RawVector);\n    _assertClass(integrationParameters, RawIntegrationParameters);\n    _assertClass(islands, RawIslandManager);\n    _assertClass(broadPhase, RawBroadPhase);\n    _assertClass(narrowPhase, RawNarrowPhase);\n    _assertClass(bodies, RawRigidBodySet);\n    _assertClass(colliders, RawColliderSet);\n    _assertClass(joints, RawImpulseJointSet);\n    _assertClass(articulations, RawMultibodyJointSet);\n    _assertClass(ccd_solver, RawCCDSolver);\n    wasm.rawphysicspipeline_step(this.__wbg_ptr, gravity.__wbg_ptr, integrationParameters.__wbg_ptr, islands.__wbg_ptr, broadPhase.__wbg_ptr, narrowPhase.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, joints.__wbg_ptr, articulations.__wbg_ptr, ccd_solver.__wbg_ptr);\n  }\n  /**\n  * @param {RawVector} gravity\n  * @param {RawIntegrationParameters} integrationParameters\n  * @param {RawIslandManager} islands\n  * @param {RawBroadPhase} broadPhase\n  * @param {RawNarrowPhase} narrowPhase\n  * @param {RawRigidBodySet} bodies\n  * @param {RawColliderSet} colliders\n  * @param {RawImpulseJointSet} joints\n  * @param {RawMultibodyJointSet} articulations\n  * @param {RawCCDSolver} ccd_solver\n  * @param {RawEventQueue} eventQueue\n  * @param {object} hookObject\n  * @param {Function} hookFilterContactPair\n  * @param {Function} hookFilterIntersectionPair\n  */\n  stepWithEvents(gravity, integrationParameters, islands, broadPhase, narrowPhase, bodies, colliders, joints, articulations, ccd_solver, eventQueue, hookObject, hookFilterContactPair, hookFilterIntersectionPair) {\n    _assertClass(gravity, RawVector);\n    _assertClass(integrationParameters, RawIntegrationParameters);\n    _assertClass(islands, RawIslandManager);\n    _assertClass(broadPhase, RawBroadPhase);\n    _assertClass(narrowPhase, RawNarrowPhase);\n    _assertClass(bodies, RawRigidBodySet);\n    _assertClass(colliders, RawColliderSet);\n    _assertClass(joints, RawImpulseJointSet);\n    _assertClass(articulations, RawMultibodyJointSet);\n    _assertClass(ccd_solver, RawCCDSolver);\n    _assertClass(eventQueue, RawEventQueue);\n    wasm.rawphysicspipeline_stepWithEvents(this.__wbg_ptr, gravity.__wbg_ptr, integrationParameters.__wbg_ptr, islands.__wbg_ptr, broadPhase.__wbg_ptr, narrowPhase.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, joints.__wbg_ptr, articulations.__wbg_ptr, ccd_solver.__wbg_ptr, eventQueue.__wbg_ptr, addHeapObject(hookObject), addHeapObject(hookFilterContactPair), addHeapObject(hookFilterIntersectionPair));\n  }\n}\n/**\n*/\nclass RawPointColliderProjection {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawPointColliderProjection.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawpointcolliderprojection_free(ptr);\n  }\n  /**\n  * @returns {number}\n  */\n  colliderHandle() {\n    const ret = wasm.rawpointcolliderprojection_colliderHandle(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {RawVector}\n  */\n  point() {\n    const ret = wasm.rawpointcolliderprojection_point(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {boolean}\n  */\n  isInside() {\n    const ret = wasm.rawpointcolliderprojection_isInside(this.__wbg_ptr);\n    return ret !== 0;\n  }\n  /**\n  * @returns {RawFeatureType}\n  */\n  featureType() {\n    const ret = wasm.rawpointcolliderprojection_featureType(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {number | undefined}\n  */\n  featureId() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawpointcolliderprojection_featureId(retptr, this.__wbg_ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1 >>> 0;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\n/**\n*/\nclass RawPointProjection {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawPointProjection.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawpointprojection_free(ptr);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  point() {\n    const ret = wasm.rawpointprojection_point(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {boolean}\n  */\n  isInside() {\n    const ret = wasm.rawpointprojection_isInside(this.__wbg_ptr);\n    return ret !== 0;\n  }\n}\n/**\n*/\nclass RawQueryPipeline {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawquerypipeline_free(ptr);\n  }\n  /**\n  */\n  constructor() {\n    const ret = wasm.rawquerypipeline_new();\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * @param {RawRigidBodySet} bodies\n  * @param {RawColliderSet} colliders\n  */\n  update(bodies, colliders) {\n    _assertClass(bodies, RawRigidBodySet);\n    _assertClass(colliders, RawColliderSet);\n    wasm.rawquerypipeline_update(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr);\n  }\n  /**\n  * @param {RawRigidBodySet} bodies\n  * @param {RawColliderSet} colliders\n  * @param {RawVector} rayOrig\n  * @param {RawVector} rayDir\n  * @param {number} maxToi\n  * @param {boolean} solid\n  * @param {number} filter_flags\n  * @param {number | undefined} filter_groups\n  * @param {number | undefined} filter_exclude_collider\n  * @param {number | undefined} filter_exclude_rigid_body\n  * @param {Function} filter_predicate\n  * @returns {RawRayColliderHit | undefined}\n  */\n  castRay(bodies, colliders, rayOrig, rayDir, maxToi, solid, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n    try {\n      _assertClass(bodies, RawRigidBodySet);\n      _assertClass(colliders, RawColliderSet);\n      _assertClass(rayOrig, RawVector);\n      _assertClass(rayDir, RawVector);\n      const ret = wasm.rawquerypipeline_castRay(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi, solid, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n      return ret === 0 ? undefined : RawRayColliderHit.__wrap(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  /**\n  * @param {RawRigidBodySet} bodies\n  * @param {RawColliderSet} colliders\n  * @param {RawVector} rayOrig\n  * @param {RawVector} rayDir\n  * @param {number} maxToi\n  * @param {boolean} solid\n  * @param {number} filter_flags\n  * @param {number | undefined} filter_groups\n  * @param {number | undefined} filter_exclude_collider\n  * @param {number | undefined} filter_exclude_rigid_body\n  * @param {Function} filter_predicate\n  * @returns {RawRayColliderIntersection | undefined}\n  */\n  castRayAndGetNormal(bodies, colliders, rayOrig, rayDir, maxToi, solid, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n    try {\n      _assertClass(bodies, RawRigidBodySet);\n      _assertClass(colliders, RawColliderSet);\n      _assertClass(rayOrig, RawVector);\n      _assertClass(rayDir, RawVector);\n      const ret = wasm.rawquerypipeline_castRayAndGetNormal(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi, solid, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n      return ret === 0 ? undefined : RawRayColliderIntersection.__wrap(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  /**\n  * @param {RawRigidBodySet} bodies\n  * @param {RawColliderSet} colliders\n  * @param {RawVector} rayOrig\n  * @param {RawVector} rayDir\n  * @param {number} maxToi\n  * @param {boolean} solid\n  * @param {Function} callback\n  * @param {number} filter_flags\n  * @param {number | undefined} filter_groups\n  * @param {number | undefined} filter_exclude_collider\n  * @param {number | undefined} filter_exclude_rigid_body\n  * @param {Function} filter_predicate\n  */\n  intersectionsWithRay(bodies, colliders, rayOrig, rayDir, maxToi, solid, callback, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n    try {\n      _assertClass(bodies, RawRigidBodySet);\n      _assertClass(colliders, RawColliderSet);\n      _assertClass(rayOrig, RawVector);\n      _assertClass(rayDir, RawVector);\n      wasm.rawquerypipeline_intersectionsWithRay(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi, solid, addBorrowedObject(callback), filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n    } finally {\n      heap[stack_pointer++] = undefined;\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  /**\n  * @param {RawRigidBodySet} bodies\n  * @param {RawColliderSet} colliders\n  * @param {RawVector} shapePos\n  * @param {RawRotation} shapeRot\n  * @param {RawShape} shape\n  * @param {number} filter_flags\n  * @param {number | undefined} filter_groups\n  * @param {number | undefined} filter_exclude_collider\n  * @param {number | undefined} filter_exclude_rigid_body\n  * @param {Function} filter_predicate\n  * @returns {number | undefined}\n  */\n  intersectionWithShape(bodies, colliders, shapePos, shapeRot, shape, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      _assertClass(bodies, RawRigidBodySet);\n      _assertClass(colliders, RawColliderSet);\n      _assertClass(shapePos, RawVector);\n      _assertClass(shapeRot, RawRotation);\n      _assertClass(shape, RawShape);\n      wasm.rawquerypipeline_intersectionWithShape(retptr, this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, shapePos.__wbg_ptr, shapeRot.__wbg_ptr, shape.__wbg_ptr, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r2 = getFloat64Memory0()[retptr / 8 + 1];\n      return r0 === 0 ? undefined : r2;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  /**\n  * @param {RawRigidBodySet} bodies\n  * @param {RawColliderSet} colliders\n  * @param {RawVector} point\n  * @param {boolean} solid\n  * @param {number} filter_flags\n  * @param {number | undefined} filter_groups\n  * @param {number | undefined} filter_exclude_collider\n  * @param {number | undefined} filter_exclude_rigid_body\n  * @param {Function} filter_predicate\n  * @returns {RawPointColliderProjection | undefined}\n  */\n  projectPoint(bodies, colliders, point, solid, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n    try {\n      _assertClass(bodies, RawRigidBodySet);\n      _assertClass(colliders, RawColliderSet);\n      _assertClass(point, RawVector);\n      const ret = wasm.rawquerypipeline_projectPoint(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, point.__wbg_ptr, solid, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n      return ret === 0 ? undefined : RawPointColliderProjection.__wrap(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  /**\n  * @param {RawRigidBodySet} bodies\n  * @param {RawColliderSet} colliders\n  * @param {RawVector} point\n  * @param {number} filter_flags\n  * @param {number | undefined} filter_groups\n  * @param {number | undefined} filter_exclude_collider\n  * @param {number | undefined} filter_exclude_rigid_body\n  * @param {Function} filter_predicate\n  * @returns {RawPointColliderProjection | undefined}\n  */\n  projectPointAndGetFeature(bodies, colliders, point, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n    try {\n      _assertClass(bodies, RawRigidBodySet);\n      _assertClass(colliders, RawColliderSet);\n      _assertClass(point, RawVector);\n      const ret = wasm.rawquerypipeline_projectPointAndGetFeature(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, point.__wbg_ptr, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n      return ret === 0 ? undefined : RawPointColliderProjection.__wrap(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  /**\n  * @param {RawRigidBodySet} bodies\n  * @param {RawColliderSet} colliders\n  * @param {RawVector} point\n  * @param {Function} callback\n  * @param {number} filter_flags\n  * @param {number | undefined} filter_groups\n  * @param {number | undefined} filter_exclude_collider\n  * @param {number | undefined} filter_exclude_rigid_body\n  * @param {Function} filter_predicate\n  */\n  intersectionsWithPoint(bodies, colliders, point, callback, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n    try {\n      _assertClass(bodies, RawRigidBodySet);\n      _assertClass(colliders, RawColliderSet);\n      _assertClass(point, RawVector);\n      wasm.rawquerypipeline_intersectionsWithPoint(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, point.__wbg_ptr, addBorrowedObject(callback), filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n    } finally {\n      heap[stack_pointer++] = undefined;\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  /**\n  * @param {RawRigidBodySet} bodies\n  * @param {RawColliderSet} colliders\n  * @param {RawVector} shapePos\n  * @param {RawRotation} shapeRot\n  * @param {RawVector} shapeVel\n  * @param {RawShape} shape\n  * @param {number} target_distance\n  * @param {number} maxToi\n  * @param {boolean} stop_at_penetration\n  * @param {number} filter_flags\n  * @param {number | undefined} filter_groups\n  * @param {number | undefined} filter_exclude_collider\n  * @param {number | undefined} filter_exclude_rigid_body\n  * @param {Function} filter_predicate\n  * @returns {RawColliderShapeCastHit | undefined}\n  */\n  castShape(bodies, colliders, shapePos, shapeRot, shapeVel, shape, target_distance, maxToi, stop_at_penetration, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n    try {\n      _assertClass(bodies, RawRigidBodySet);\n      _assertClass(colliders, RawColliderSet);\n      _assertClass(shapePos, RawVector);\n      _assertClass(shapeRot, RawRotation);\n      _assertClass(shapeVel, RawVector);\n      _assertClass(shape, RawShape);\n      const ret = wasm.rawquerypipeline_castShape(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, shapePos.__wbg_ptr, shapeRot.__wbg_ptr, shapeVel.__wbg_ptr, shape.__wbg_ptr, target_distance, maxToi, stop_at_penetration, filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n      return ret === 0 ? undefined : RawColliderShapeCastHit.__wrap(ret);\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  /**\n  * @param {RawRigidBodySet} bodies\n  * @param {RawColliderSet} colliders\n  * @param {RawVector} shapePos\n  * @param {RawRotation} shapeRot\n  * @param {RawShape} shape\n  * @param {Function} callback\n  * @param {number} filter_flags\n  * @param {number | undefined} filter_groups\n  * @param {number | undefined} filter_exclude_collider\n  * @param {number | undefined} filter_exclude_rigid_body\n  * @param {Function} filter_predicate\n  */\n  intersectionsWithShape(bodies, colliders, shapePos, shapeRot, shape, callback, filter_flags, filter_groups, filter_exclude_collider, filter_exclude_rigid_body, filter_predicate) {\n    try {\n      _assertClass(bodies, RawRigidBodySet);\n      _assertClass(colliders, RawColliderSet);\n      _assertClass(shapePos, RawVector);\n      _assertClass(shapeRot, RawRotation);\n      _assertClass(shape, RawShape);\n      wasm.rawquerypipeline_intersectionsWithShape(this.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, shapePos.__wbg_ptr, shapeRot.__wbg_ptr, shape.__wbg_ptr, addBorrowedObject(callback), filter_flags, !isLikeNone(filter_groups), isLikeNone(filter_groups) ? 0 : filter_groups, !isLikeNone(filter_exclude_collider), isLikeNone(filter_exclude_collider) ? 0 : filter_exclude_collider, !isLikeNone(filter_exclude_rigid_body), isLikeNone(filter_exclude_rigid_body) ? 0 : filter_exclude_rigid_body, addBorrowedObject(filter_predicate));\n    } finally {\n      heap[stack_pointer++] = undefined;\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  /**\n  * @param {RawVector} aabbCenter\n  * @param {RawVector} aabbHalfExtents\n  * @param {Function} callback\n  */\n  collidersWithAabbIntersectingAabb(aabbCenter, aabbHalfExtents, callback) {\n    try {\n      _assertClass(aabbCenter, RawVector);\n      _assertClass(aabbHalfExtents, RawVector);\n      wasm.rawquerypipeline_collidersWithAabbIntersectingAabb(this.__wbg_ptr, aabbCenter.__wbg_ptr, aabbHalfExtents.__wbg_ptr, addBorrowedObject(callback));\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n}\n/**\n*/\nclass RawRayColliderHit {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawRayColliderHit.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawraycolliderhit_free(ptr);\n  }\n  /**\n  * @returns {number}\n  */\n  colliderHandle() {\n    const ret = wasm.rawcharactercollision_handle(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {number}\n  */\n  timeOfImpact() {\n    const ret = wasm.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr);\n    return ret;\n  }\n}\n/**\n*/\nclass RawRayColliderIntersection {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawRayColliderIntersection.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawraycolliderintersection_free(ptr);\n  }\n  /**\n  * @returns {number}\n  */\n  colliderHandle() {\n    const ret = wasm.rawpointcolliderprojection_colliderHandle(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {RawVector}\n  */\n  normal() {\n    const ret = wasm.rawcollidershapecasthit_witness1(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {number}\n  */\n  time_of_impact() {\n    const ret = wasm.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {RawFeatureType}\n  */\n  featureType() {\n    const ret = wasm.rawpointcolliderprojection_featureType(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {number | undefined}\n  */\n  featureId() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawpointcolliderprojection_featureId(retptr, this.__wbg_ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1 >>> 0;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\n/**\n*/\nclass RawRayIntersection {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawRayIntersection.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawrayintersection_free(ptr);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  normal() {\n    const ret = wasm.rawcollidershapecasthit_witness1(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {number}\n  */\n  time_of_impact() {\n    const ret = wasm.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {RawFeatureType}\n  */\n  featureType() {\n    const ret = wasm.rawpointcolliderprojection_featureType(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {number | undefined}\n  */\n  featureId() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.rawpointcolliderprojection_featureId(retptr, this.__wbg_ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      return r0 === 0 ? undefined : r1 >>> 0;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n}\n/**\n*/\nclass RawRigidBodySet {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawRigidBodySet.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawrigidbodyset_free(ptr);\n  }\n  /**\n  * The world-space translation of this rigid-body.\n  * @param {number} handle\n  * @returns {RawVector}\n  */\n  rbTranslation(handle) {\n    const ret = wasm.rawrigidbodyset_rbTranslation(this.__wbg_ptr, handle);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * The world-space orientation of this rigid-body.\n  * @param {number} handle\n  * @returns {RawRotation}\n  */\n  rbRotation(handle) {\n    const ret = wasm.rawrigidbodyset_rbRotation(this.__wbg_ptr, handle);\n    return RawRotation.__wrap(ret);\n  }\n  /**\n  * Put the given rigid-body to sleep.\n  * @param {number} handle\n  */\n  rbSleep(handle) {\n    wasm.rawrigidbodyset_rbSleep(this.__wbg_ptr, handle);\n  }\n  /**\n  * Is this rigid-body sleeping?\n  * @param {number} handle\n  * @returns {boolean}\n  */\n  rbIsSleeping(handle) {\n    const ret = wasm.rawrigidbodyset_rbIsSleeping(this.__wbg_ptr, handle);\n    return ret !== 0;\n  }\n  /**\n  * Is the velocity of this rigid-body not zero?\n  * @param {number} handle\n  * @returns {boolean}\n  */\n  rbIsMoving(handle) {\n    const ret = wasm.rawrigidbodyset_rbIsMoving(this.__wbg_ptr, handle);\n    return ret !== 0;\n  }\n  /**\n  * The world-space predicted translation of this rigid-body.\n  *\n  * If this rigid-body is kinematic this value is set by the `setNextKinematicTranslation`\n  * method and is used for estimating the kinematic body velocity at the next timestep.\n  * For non-kinematic bodies, this value is currently unspecified.\n  * @param {number} handle\n  * @returns {RawVector}\n  */\n  rbNextTranslation(handle) {\n    const ret = wasm.rawrigidbodyset_rbNextTranslation(this.__wbg_ptr, handle);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * The world-space predicted orientation of this rigid-body.\n  *\n  * If this rigid-body is kinematic this value is set by the `setNextKinematicRotation`\n  * method and is used for estimating the kinematic body velocity at the next timestep.\n  * For non-kinematic bodies, this value is currently unspecified.\n  * @param {number} handle\n  * @returns {RawRotation}\n  */\n  rbNextRotation(handle) {\n    const ret = wasm.rawrigidbodyset_rbNextRotation(this.__wbg_ptr, handle);\n    return RawRotation.__wrap(ret);\n  }\n  /**\n  * Sets the translation of this rigid-body.\n  *\n  * # Parameters\n  * - `x`: the world-space position of the rigid-body along the `x` axis.\n  * - `y`: the world-space position of the rigid-body along the `y` axis.\n  * - `z`: the world-space position of the rigid-body along the `z` axis.\n  * - `wakeUp`: forces the rigid-body to wake-up so it is properly affected by forces if it\n  * wasn't moving before modifying its position.\n  * @param {number} handle\n  * @param {number} x\n  * @param {number} y\n  * @param {number} z\n  * @param {boolean} wakeUp\n  */\n  rbSetTranslation(handle, x, y, z, wakeUp) {\n    wasm.rawrigidbodyset_rbSetTranslation(this.__wbg_ptr, handle, x, y, z, wakeUp);\n  }\n  /**\n  * Sets the rotation quaternion of this rigid-body.\n  *\n  * This does nothing if a zero quaternion is provided.\n  *\n  * # Parameters\n  * - `x`: the first vector component of the quaternion.\n  * - `y`: the second vector component of the quaternion.\n  * - `z`: the third vector component of the quaternion.\n  * - `w`: the scalar component of the quaternion.\n  * - `wakeUp`: forces the rigid-body to wake-up so it is properly affected by forces if it\n  * wasn't moving before modifying its position.\n  * @param {number} handle\n  * @param {number} x\n  * @param {number} y\n  * @param {number} z\n  * @param {number} w\n  * @param {boolean} wakeUp\n  */\n  rbSetRotation(handle, x, y, z, w, wakeUp) {\n    wasm.rawrigidbodyset_rbSetRotation(this.__wbg_ptr, handle, x, y, z, w, wakeUp);\n  }\n  /**\n  * Sets the linear velocity of this rigid-body.\n  * @param {number} handle\n  * @param {RawVector} linvel\n  * @param {boolean} wakeUp\n  */\n  rbSetLinvel(handle, linvel, wakeUp) {\n    _assertClass(linvel, RawVector);\n    wasm.rawrigidbodyset_rbSetLinvel(this.__wbg_ptr, handle, linvel.__wbg_ptr, wakeUp);\n  }\n  /**\n  * Sets the angular velocity of this rigid-body.\n  * @param {number} handle\n  * @param {RawVector} angvel\n  * @param {boolean} wakeUp\n  */\n  rbSetAngvel(handle, angvel, wakeUp) {\n    _assertClass(angvel, RawVector);\n    wasm.rawrigidbodyset_rbSetAngvel(this.__wbg_ptr, handle, angvel.__wbg_ptr, wakeUp);\n  }\n  /**\n  * If this rigid body is kinematic, sets its future translation after the next timestep integration.\n  *\n  * This should be used instead of `rigidBody.setTranslation` to make the dynamic object\n  * interacting with this kinematic body behave as expected. Internally, Rapier will compute\n  * an artificial velocity for this rigid-body from its current position and its next kinematic\n  * position. This velocity will be used to compute forces on dynamic bodies interacting with\n  * this body.\n  *\n  * # Parameters\n  * - `x`: the world-space position of the rigid-body along the `x` axis.\n  * - `y`: the world-space position of the rigid-body along the `y` axis.\n  * - `z`: the world-space position of the rigid-body along the `z` axis.\n  * @param {number} handle\n  * @param {number} x\n  * @param {number} y\n  * @param {number} z\n  */\n  rbSetNextKinematicTranslation(handle, x, y, z) {\n    wasm.rawrigidbodyset_rbSetNextKinematicTranslation(this.__wbg_ptr, handle, x, y, z);\n  }\n  /**\n  * If this rigid body is kinematic, sets its future rotation after the next timestep integration.\n  *\n  * This should be used instead of `rigidBody.setRotation` to make the dynamic object\n  * interacting with this kinematic body behave as expected. Internally, Rapier will compute\n  * an artificial velocity for this rigid-body from its current position and its next kinematic\n  * position. This velocity will be used to compute forces on dynamic bodies interacting with\n  * this body.\n  *\n  * # Parameters\n  * - `x`: the first vector component of the quaternion.\n  * - `y`: the second vector component of the quaternion.\n  * - `z`: the third vector component of the quaternion.\n  * - `w`: the scalar component of the quaternion.\n  * @param {number} handle\n  * @param {number} x\n  * @param {number} y\n  * @param {number} z\n  * @param {number} w\n  */\n  rbSetNextKinematicRotation(handle, x, y, z, w) {\n    wasm.rawrigidbodyset_rbSetNextKinematicRotation(this.__wbg_ptr, handle, x, y, z, w);\n  }\n  /**\n  * @param {number} handle\n  * @param {RawColliderSet} colliders\n  */\n  rbRecomputeMassPropertiesFromColliders(handle, colliders) {\n    _assertClass(colliders, RawColliderSet);\n    wasm.rawrigidbodyset_rbRecomputeMassPropertiesFromColliders(this.__wbg_ptr, handle, colliders.__wbg_ptr);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} mass\n  * @param {boolean} wake_up\n  */\n  rbSetAdditionalMass(handle, mass, wake_up) {\n    wasm.rawrigidbodyset_rbSetAdditionalMass(this.__wbg_ptr, handle, mass, wake_up);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} mass\n  * @param {RawVector} centerOfMass\n  * @param {RawVector} principalAngularInertia\n  * @param {RawRotation} angularInertiaFrame\n  * @param {boolean} wake_up\n  */\n  rbSetAdditionalMassProperties(handle, mass, centerOfMass, principalAngularInertia, angularInertiaFrame, wake_up) {\n    _assertClass(centerOfMass, RawVector);\n    _assertClass(principalAngularInertia, RawVector);\n    _assertClass(angularInertiaFrame, RawRotation);\n    wasm.rawrigidbodyset_rbSetAdditionalMassProperties(this.__wbg_ptr, handle, mass, centerOfMass.__wbg_ptr, principalAngularInertia.__wbg_ptr, angularInertiaFrame.__wbg_ptr, wake_up);\n  }\n  /**\n  * The linear velocity of this rigid-body.\n  * @param {number} handle\n  * @returns {RawVector}\n  */\n  rbLinvel(handle) {\n    const ret = wasm.rawrigidbodyset_rbLinvel(this.__wbg_ptr, handle);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * The angular velocity of this rigid-body.\n  * @param {number} handle\n  * @returns {RawVector}\n  */\n  rbAngvel(handle) {\n    const ret = wasm.rawrigidbodyset_rbAngvel(this.__wbg_ptr, handle);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @param {number} handle\n  * @param {boolean} locked\n  * @param {boolean} wake_up\n  */\n  rbLockTranslations(handle, locked, wake_up) {\n    wasm.rawrigidbodyset_rbLockTranslations(this.__wbg_ptr, handle, locked, wake_up);\n  }\n  /**\n  * @param {number} handle\n  * @param {boolean} allow_x\n  * @param {boolean} allow_y\n  * @param {boolean} allow_z\n  * @param {boolean} wake_up\n  */\n  rbSetEnabledTranslations(handle, allow_x, allow_y, allow_z, wake_up) {\n    wasm.rawrigidbodyset_rbSetEnabledTranslations(this.__wbg_ptr, handle, allow_x, allow_y, allow_z, wake_up);\n  }\n  /**\n  * @param {number} handle\n  * @param {boolean} locked\n  * @param {boolean} wake_up\n  */\n  rbLockRotations(handle, locked, wake_up) {\n    wasm.rawrigidbodyset_rbLockRotations(this.__wbg_ptr, handle, locked, wake_up);\n  }\n  /**\n  * @param {number} handle\n  * @param {boolean} allow_x\n  * @param {boolean} allow_y\n  * @param {boolean} allow_z\n  * @param {boolean} wake_up\n  */\n  rbSetEnabledRotations(handle, allow_x, allow_y, allow_z, wake_up) {\n    wasm.rawrigidbodyset_rbSetEnabledRotations(this.__wbg_ptr, handle, allow_x, allow_y, allow_z, wake_up);\n  }\n  /**\n  * @param {number} handle\n  * @returns {number}\n  */\n  rbDominanceGroup(handle) {\n    const ret = wasm.rawrigidbodyset_rbDominanceGroup(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * @param {number} handle\n  * @param {number} group\n  */\n  rbSetDominanceGroup(handle, group) {\n    wasm.rawrigidbodyset_rbSetDominanceGroup(this.__wbg_ptr, handle, group);\n  }\n  /**\n  * @param {number} handle\n  * @param {boolean} enabled\n  */\n  rbEnableCcd(handle, enabled) {\n    wasm.rawrigidbodyset_rbEnableCcd(this.__wbg_ptr, handle, enabled);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} prediction\n  */\n  rbSetSoftCcdPrediction(handle, prediction) {\n    wasm.rawrigidbodyset_rbSetSoftCcdPrediction(this.__wbg_ptr, handle, prediction);\n  }\n  /**\n  * The mass of this rigid-body.\n  * @param {number} handle\n  * @returns {number}\n  */\n  rbMass(handle) {\n    const ret = wasm.rawrigidbodyset_rbMass(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * The inverse of the mass of a rigid-body.\n  *\n  * If this is zero, the rigid-body is assumed to have infinite mass.\n  * @param {number} handle\n  * @returns {number}\n  */\n  rbInvMass(handle) {\n    const ret = wasm.rawrigidbodyset_rbInvMass(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * The inverse mass taking into account translation locking.\n  * @param {number} handle\n  * @returns {RawVector}\n  */\n  rbEffectiveInvMass(handle) {\n    const ret = wasm.rawrigidbodyset_rbEffectiveInvMass(this.__wbg_ptr, handle);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * The center of mass of a rigid-body expressed in its local-space.\n  * @param {number} handle\n  * @returns {RawVector}\n  */\n  rbLocalCom(handle) {\n    const ret = wasm.rawrigidbodyset_rbLocalCom(this.__wbg_ptr, handle);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * The world-space center of mass of the rigid-body.\n  * @param {number} handle\n  * @returns {RawVector}\n  */\n  rbWorldCom(handle) {\n    const ret = wasm.rawrigidbodyset_rbWorldCom(this.__wbg_ptr, handle);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * The inverse of the principal angular inertia of the rigid-body.\n  *\n  * Components set to zero are assumed to be infinite along the corresponding principal axis.\n  * @param {number} handle\n  * @returns {RawVector}\n  */\n  rbInvPrincipalInertiaSqrt(handle) {\n    const ret = wasm.rawrigidbodyset_rbInvPrincipalInertiaSqrt(this.__wbg_ptr, handle);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * The principal vectors of the local angular inertia tensor of the rigid-body.\n  * @param {number} handle\n  * @returns {RawRotation}\n  */\n  rbPrincipalInertiaLocalFrame(handle) {\n    const ret = wasm.rawrigidbodyset_rbPrincipalInertiaLocalFrame(this.__wbg_ptr, handle);\n    return RawRotation.__wrap(ret);\n  }\n  /**\n  * The angular inertia along the principal inertia axes of the rigid-body.\n  * @param {number} handle\n  * @returns {RawVector}\n  */\n  rbPrincipalInertia(handle) {\n    const ret = wasm.rawrigidbodyset_rbPrincipalInertia(this.__wbg_ptr, handle);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * The square-root of the world-space inverse angular inertia tensor of the rigid-body,\n  * taking into account rotation locking.\n  * @param {number} handle\n  * @returns {RawSdpMatrix3}\n  */\n  rbEffectiveWorldInvInertiaSqrt(handle) {\n    const ret = wasm.rawrigidbodyset_rbEffectiveWorldInvInertiaSqrt(this.__wbg_ptr, handle);\n    return RawSdpMatrix3.__wrap(ret);\n  }\n  /**\n  * The effective world-space angular inertia (that takes the potential rotation locking into account) of\n  * this rigid-body.\n  * @param {number} handle\n  * @returns {RawSdpMatrix3}\n  */\n  rbEffectiveAngularInertia(handle) {\n    const ret = wasm.rawrigidbodyset_rbEffectiveAngularInertia(this.__wbg_ptr, handle);\n    return RawSdpMatrix3.__wrap(ret);\n  }\n  /**\n  * Wakes this rigid-body up.\n  *\n  * A dynamic rigid-body that does not move during several consecutive frames will\n  * be put to sleep by the physics engine, i.e., it will stop being simulated in order\n  * to avoid useless computations.\n  * This method forces a sleeping rigid-body to wake-up. This is useful, e.g., before modifying\n  * the position of a dynamic body so that it is properly simulated afterwards.\n  * @param {number} handle\n  */\n  rbWakeUp(handle) {\n    wasm.rawrigidbodyset_rbWakeUp(this.__wbg_ptr, handle);\n  }\n  /**\n  * Is Continuous Collision Detection enabled for this rigid-body?\n  * @param {number} handle\n  * @returns {boolean}\n  */\n  rbIsCcdEnabled(handle) {\n    const ret = wasm.rawrigidbodyset_rbIsCcdEnabled(this.__wbg_ptr, handle);\n    return ret !== 0;\n  }\n  /**\n  * @param {number} handle\n  * @returns {number}\n  */\n  rbSoftCcdPrediction(handle) {\n    const ret = wasm.rawrigidbodyset_rbSoftCcdPrediction(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * The number of colliders attached to this rigid-body.\n  * @param {number} handle\n  * @returns {number}\n  */\n  rbNumColliders(handle) {\n    const ret = wasm.rawrigidbodyset_rbNumColliders(this.__wbg_ptr, handle);\n    return ret >>> 0;\n  }\n  /**\n  * Retrieves the `i-th` collider attached to this rigid-body.\n  *\n  * # Parameters\n  * - `at`: The index of the collider to retrieve. Must be a number in `[0, this.numColliders()[`.\n  *         This index is **not** the same as the unique identifier of the collider.\n  * @param {number} handle\n  * @param {number} at\n  * @returns {number}\n  */\n  rbCollider(handle, at) {\n    const ret = wasm.rawrigidbodyset_rbCollider(this.__wbg_ptr, handle, at);\n    return ret;\n  }\n  /**\n  * The status of this rigid-body: fixed, dynamic, or kinematic.\n  * @param {number} handle\n  * @returns {RawRigidBodyType}\n  */\n  rbBodyType(handle) {\n    const ret = wasm.rawrigidbodyset_rbBodyType(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * Set a new status for this rigid-body: fixed, dynamic, or kinematic.\n  * @param {number} handle\n  * @param {RawRigidBodyType} status\n  * @param {boolean} wake_up\n  */\n  rbSetBodyType(handle, status, wake_up) {\n    wasm.rawrigidbodyset_rbSetBodyType(this.__wbg_ptr, handle, status, wake_up);\n  }\n  /**\n  * Is this rigid-body fixed?\n  * @param {number} handle\n  * @returns {boolean}\n  */\n  rbIsFixed(handle) {\n    const ret = wasm.rawrigidbodyset_rbIsFixed(this.__wbg_ptr, handle);\n    return ret !== 0;\n  }\n  /**\n  * Is this rigid-body kinematic?\n  * @param {number} handle\n  * @returns {boolean}\n  */\n  rbIsKinematic(handle) {\n    const ret = wasm.rawrigidbodyset_rbIsKinematic(this.__wbg_ptr, handle);\n    return ret !== 0;\n  }\n  /**\n  * Is this rigid-body dynamic?\n  * @param {number} handle\n  * @returns {boolean}\n  */\n  rbIsDynamic(handle) {\n    const ret = wasm.rawrigidbodyset_rbIsDynamic(this.__wbg_ptr, handle);\n    return ret !== 0;\n  }\n  /**\n  * The linear damping coefficient of this rigid-body.\n  * @param {number} handle\n  * @returns {number}\n  */\n  rbLinearDamping(handle) {\n    const ret = wasm.rawrigidbodyset_rbLinearDamping(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * The angular damping coefficient of this rigid-body.\n  * @param {number} handle\n  * @returns {number}\n  */\n  rbAngularDamping(handle) {\n    const ret = wasm.rawrigidbodyset_rbAngularDamping(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * @param {number} handle\n  * @param {number} factor\n  */\n  rbSetLinearDamping(handle, factor) {\n    wasm.rawrigidbodyset_rbSetLinearDamping(this.__wbg_ptr, handle, factor);\n  }\n  /**\n  * @param {number} handle\n  * @param {number} factor\n  */\n  rbSetAngularDamping(handle, factor) {\n    wasm.rawrigidbodyset_rbSetAngularDamping(this.__wbg_ptr, handle, factor);\n  }\n  /**\n  * @param {number} handle\n  * @param {boolean} enabled\n  */\n  rbSetEnabled(handle, enabled) {\n    wasm.rawrigidbodyset_rbSetEnabled(this.__wbg_ptr, handle, enabled);\n  }\n  /**\n  * @param {number} handle\n  * @returns {boolean}\n  */\n  rbIsEnabled(handle) {\n    const ret = wasm.rawrigidbodyset_rbIsEnabled(this.__wbg_ptr, handle);\n    return ret !== 0;\n  }\n  /**\n  * @param {number} handle\n  * @returns {number}\n  */\n  rbGravityScale(handle) {\n    const ret = wasm.rawrigidbodyset_rbGravityScale(this.__wbg_ptr, handle);\n    return ret;\n  }\n  /**\n  * @param {number} handle\n  * @param {number} factor\n  * @param {boolean} wakeUp\n  */\n  rbSetGravityScale(handle, factor, wakeUp) {\n    wasm.rawrigidbodyset_rbSetGravityScale(this.__wbg_ptr, handle, factor, wakeUp);\n  }\n  /**\n  * Resets to zero all user-added forces added to this rigid-body.\n  * @param {number} handle\n  * @param {boolean} wakeUp\n  */\n  rbResetForces(handle, wakeUp) {\n    wasm.rawrigidbodyset_rbResetForces(this.__wbg_ptr, handle, wakeUp);\n  }\n  /**\n  * Resets to zero all user-added torques added to this rigid-body.\n  * @param {number} handle\n  * @param {boolean} wakeUp\n  */\n  rbResetTorques(handle, wakeUp) {\n    wasm.rawrigidbodyset_rbResetTorques(this.__wbg_ptr, handle, wakeUp);\n  }\n  /**\n  * Adds a force at the center-of-mass of this rigid-body.\n  *\n  * # Parameters\n  * - `force`: the world-space force to apply on the rigid-body.\n  * - `wakeUp`: should the rigid-body be automatically woken-up?\n  * @param {number} handle\n  * @param {RawVector} force\n  * @param {boolean} wakeUp\n  */\n  rbAddForce(handle, force, wakeUp) {\n    _assertClass(force, RawVector);\n    wasm.rawrigidbodyset_rbAddForce(this.__wbg_ptr, handle, force.__wbg_ptr, wakeUp);\n  }\n  /**\n  * Applies an impulse at the center-of-mass of this rigid-body.\n  *\n  * # Parameters\n  * - `impulse`: the world-space impulse to apply on the rigid-body.\n  * - `wakeUp`: should the rigid-body be automatically woken-up?\n  * @param {number} handle\n  * @param {RawVector} impulse\n  * @param {boolean} wakeUp\n  */\n  rbApplyImpulse(handle, impulse, wakeUp) {\n    _assertClass(impulse, RawVector);\n    wasm.rawrigidbodyset_rbApplyImpulse(this.__wbg_ptr, handle, impulse.__wbg_ptr, wakeUp);\n  }\n  /**\n  * Adds a torque at the center-of-mass of this rigid-body.\n  *\n  * # Parameters\n  * - `torque`: the world-space torque to apply on the rigid-body.\n  * - `wakeUp`: should the rigid-body be automatically woken-up?\n  * @param {number} handle\n  * @param {RawVector} torque\n  * @param {boolean} wakeUp\n  */\n  rbAddTorque(handle, torque, wakeUp) {\n    _assertClass(torque, RawVector);\n    wasm.rawrigidbodyset_rbAddTorque(this.__wbg_ptr, handle, torque.__wbg_ptr, wakeUp);\n  }\n  /**\n  * Applies an impulsive torque at the center-of-mass of this rigid-body.\n  *\n  * # Parameters\n  * - `torque impulse`: the world-space torque impulse to apply on the rigid-body.\n  * - `wakeUp`: should the rigid-body be automatically woken-up?\n  * @param {number} handle\n  * @param {RawVector} torque_impulse\n  * @param {boolean} wakeUp\n  */\n  rbApplyTorqueImpulse(handle, torque_impulse, wakeUp) {\n    _assertClass(torque_impulse, RawVector);\n    wasm.rawrigidbodyset_rbApplyTorqueImpulse(this.__wbg_ptr, handle, torque_impulse.__wbg_ptr, wakeUp);\n  }\n  /**\n  * Adds a force at the given world-space point of this rigid-body.\n  *\n  * # Parameters\n  * - `force`: the world-space force to apply on the rigid-body.\n  * - `point`: the world-space point where the impulse is to be applied on the rigid-body.\n  * - `wakeUp`: should the rigid-body be automatically woken-up?\n  * @param {number} handle\n  * @param {RawVector} force\n  * @param {RawVector} point\n  * @param {boolean} wakeUp\n  */\n  rbAddForceAtPoint(handle, force, point, wakeUp) {\n    _assertClass(force, RawVector);\n    _assertClass(point, RawVector);\n    wasm.rawrigidbodyset_rbAddForceAtPoint(this.__wbg_ptr, handle, force.__wbg_ptr, point.__wbg_ptr, wakeUp);\n  }\n  /**\n  * Applies an impulse at the given world-space point of this rigid-body.\n  *\n  * # Parameters\n  * - `impulse`: the world-space impulse to apply on the rigid-body.\n  * - `point`: the world-space point where the impulse is to be applied on the rigid-body.\n  * - `wakeUp`: should the rigid-body be automatically woken-up?\n  * @param {number} handle\n  * @param {RawVector} impulse\n  * @param {RawVector} point\n  * @param {boolean} wakeUp\n  */\n  rbApplyImpulseAtPoint(handle, impulse, point, wakeUp) {\n    _assertClass(impulse, RawVector);\n    _assertClass(point, RawVector);\n    wasm.rawrigidbodyset_rbApplyImpulseAtPoint(this.__wbg_ptr, handle, impulse.__wbg_ptr, point.__wbg_ptr, wakeUp);\n  }\n  /**\n  * @param {number} handle\n  * @returns {number}\n  */\n  rbAdditionalSolverIterations(handle) {\n    const ret = wasm.rawrigidbodyset_rbAdditionalSolverIterations(this.__wbg_ptr, handle);\n    return ret >>> 0;\n  }\n  /**\n  * @param {number} handle\n  * @param {number} iters\n  */\n  rbSetAdditionalSolverIterations(handle, iters) {\n    wasm.rawrigidbodyset_rbSetAdditionalSolverIterations(this.__wbg_ptr, handle, iters);\n  }\n  /**\n  * An arbitrary user-defined 32-bit integer\n  * @param {number} handle\n  * @returns {number}\n  */\n  rbUserData(handle) {\n    const ret = wasm.rawrigidbodyset_rbUserData(this.__wbg_ptr, handle);\n    return ret >>> 0;\n  }\n  /**\n  * Sets the user-defined 32-bit integer of this rigid-body.\n  *\n  * # Parameters\n  * - `data`: an arbitrary user-defined 32-bit integer.\n  * @param {number} handle\n  * @param {number} data\n  */\n  rbSetUserData(handle, data) {\n    wasm.rawrigidbodyset_rbSetUserData(this.__wbg_ptr, handle, data);\n  }\n  /**\n  */\n  constructor() {\n    const ret = wasm.rawrigidbodyset_new();\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * @param {boolean} enabled\n  * @param {RawVector} translation\n  * @param {RawRotation} rotation\n  * @param {number} gravityScale\n  * @param {number} mass\n  * @param {boolean} massOnly\n  * @param {RawVector} centerOfMass\n  * @param {RawVector} linvel\n  * @param {RawVector} angvel\n  * @param {RawVector} principalAngularInertia\n  * @param {RawRotation} angularInertiaFrame\n  * @param {boolean} translationEnabledX\n  * @param {boolean} translationEnabledY\n  * @param {boolean} translationEnabledZ\n  * @param {boolean} rotationEnabledX\n  * @param {boolean} rotationEnabledY\n  * @param {boolean} rotationEnabledZ\n  * @param {number} linearDamping\n  * @param {number} angularDamping\n  * @param {RawRigidBodyType} rb_type\n  * @param {boolean} canSleep\n  * @param {boolean} sleeping\n  * @param {number} softCcdPrediction\n  * @param {boolean} ccdEnabled\n  * @param {number} dominanceGroup\n  * @param {number} additional_solver_iterations\n  * @returns {number}\n  */\n  createRigidBody(enabled, translation, rotation, gravityScale, mass, massOnly, centerOfMass, linvel, angvel, principalAngularInertia, angularInertiaFrame, translationEnabledX, translationEnabledY, translationEnabledZ, rotationEnabledX, rotationEnabledY, rotationEnabledZ, linearDamping, angularDamping, rb_type, canSleep, sleeping, softCcdPrediction, ccdEnabled, dominanceGroup, additional_solver_iterations) {\n    _assertClass(translation, RawVector);\n    _assertClass(rotation, RawRotation);\n    _assertClass(centerOfMass, RawVector);\n    _assertClass(linvel, RawVector);\n    _assertClass(angvel, RawVector);\n    _assertClass(principalAngularInertia, RawVector);\n    _assertClass(angularInertiaFrame, RawRotation);\n    const ret = wasm.rawrigidbodyset_createRigidBody(this.__wbg_ptr, enabled, translation.__wbg_ptr, rotation.__wbg_ptr, gravityScale, mass, massOnly, centerOfMass.__wbg_ptr, linvel.__wbg_ptr, angvel.__wbg_ptr, principalAngularInertia.__wbg_ptr, angularInertiaFrame.__wbg_ptr, translationEnabledX, translationEnabledY, translationEnabledZ, rotationEnabledX, rotationEnabledY, rotationEnabledZ, linearDamping, angularDamping, rb_type, canSleep, sleeping, softCcdPrediction, ccdEnabled, dominanceGroup, additional_solver_iterations);\n    return ret;\n  }\n  /**\n  * @param {number} handle\n  * @param {RawIslandManager} islands\n  * @param {RawColliderSet} colliders\n  * @param {RawImpulseJointSet} joints\n  * @param {RawMultibodyJointSet} articulations\n  */\n  remove(handle, islands, colliders, joints, articulations) {\n    _assertClass(islands, RawIslandManager);\n    _assertClass(colliders, RawColliderSet);\n    _assertClass(joints, RawImpulseJointSet);\n    _assertClass(articulations, RawMultibodyJointSet);\n    wasm.rawrigidbodyset_remove(this.__wbg_ptr, handle, islands.__wbg_ptr, colliders.__wbg_ptr, joints.__wbg_ptr, articulations.__wbg_ptr);\n  }\n  /**\n  * The number of rigid-bodies on this set.\n  * @returns {number}\n  */\n  len() {\n    const ret = wasm.rawcolliderset_len(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * Checks if a rigid-body with the given integer handle exists.\n  * @param {number} handle\n  * @returns {boolean}\n  */\n  contains(handle) {\n    const ret = wasm.rawrigidbodyset_contains(this.__wbg_ptr, handle);\n    return ret !== 0;\n  }\n  /**\n  * Applies the given JavaScript function to the integer handle of each rigid-body managed by this set.\n  *\n  * # Parameters\n  * - `f(handle)`: the function to apply to the integer handle of each rigid-body managed by this set. Called as `f(collider)`.\n  * @param {Function} f\n  */\n  forEachRigidBodyHandle(f) {\n    try {\n      wasm.rawrigidbodyset_forEachRigidBodyHandle(this.__wbg_ptr, addBorrowedObject(f));\n    } finally {\n      heap[stack_pointer++] = undefined;\n    }\n  }\n  /**\n  * @param {RawColliderSet} colliders\n  */\n  propagateModifiedBodyPositionsToColliders(colliders) {\n    _assertClass(colliders, RawColliderSet);\n    wasm.rawrigidbodyset_propagateModifiedBodyPositionsToColliders(this.__wbg_ptr, colliders.__wbg_ptr);\n  }\n}\n/**\n* A rotation quaternion.\n*/\nclass RawRotation {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawRotation.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawrotation_free(ptr);\n  }\n  /**\n  * @param {number} x\n  * @param {number} y\n  * @param {number} z\n  * @param {number} w\n  */\n  constructor(x, y, z, w) {\n    const ret = wasm.rawrotation_new(x, y, z, w);\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * The identity quaternion.\n  * @returns {RawRotation}\n  */\n  static identity() {\n    const ret = wasm.rawrotation_identity();\n    return RawRotation.__wrap(ret);\n  }\n  /**\n  * The `x` component of this quaternion.\n  * @returns {number}\n  */\n  get x() {\n    const ret = wasm.rawrotation_x(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * The `y` component of this quaternion.\n  * @returns {number}\n  */\n  get y() {\n    const ret = wasm.rawintegrationparameters_dt(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * The `z` component of this quaternion.\n  * @returns {number}\n  */\n  get z() {\n    const ret = wasm.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * The `w` component of this quaternion.\n  * @returns {number}\n  */\n  get w() {\n    const ret = wasm.rawintegrationparameters_erp(this.__wbg_ptr);\n    return ret;\n  }\n}\n/**\n*/\nclass RawSdpMatrix3 {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawSdpMatrix3.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawsdpmatrix3_free(ptr);\n  }\n  /**\n  * Row major list of the upper-triangular part of the symmetric matrix.\n  * @returns {Float32Array}\n  */\n  elements() {\n    const ret = wasm.rawsdpmatrix3_elements(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n}\n/**\n*/\nclass RawSerializationPipeline {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawserializationpipeline_free(ptr);\n  }\n  /**\n  */\n  constructor() {\n    const ret = wasm.rawserializationpipeline_new();\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * @param {RawVector} gravity\n  * @param {RawIntegrationParameters} integrationParameters\n  * @param {RawIslandManager} islands\n  * @param {RawBroadPhase} broadPhase\n  * @param {RawNarrowPhase} narrowPhase\n  * @param {RawRigidBodySet} bodies\n  * @param {RawColliderSet} colliders\n  * @param {RawImpulseJointSet} impulse_joints\n  * @param {RawMultibodyJointSet} multibody_joints\n  * @returns {Uint8Array | undefined}\n  */\n  serializeAll(gravity, integrationParameters, islands, broadPhase, narrowPhase, bodies, colliders, impulse_joints, multibody_joints) {\n    _assertClass(gravity, RawVector);\n    _assertClass(integrationParameters, RawIntegrationParameters);\n    _assertClass(islands, RawIslandManager);\n    _assertClass(broadPhase, RawBroadPhase);\n    _assertClass(narrowPhase, RawNarrowPhase);\n    _assertClass(bodies, RawRigidBodySet);\n    _assertClass(colliders, RawColliderSet);\n    _assertClass(impulse_joints, RawImpulseJointSet);\n    _assertClass(multibody_joints, RawMultibodyJointSet);\n    const ret = wasm.rawserializationpipeline_serializeAll(this.__wbg_ptr, gravity.__wbg_ptr, integrationParameters.__wbg_ptr, islands.__wbg_ptr, broadPhase.__wbg_ptr, narrowPhase.__wbg_ptr, bodies.__wbg_ptr, colliders.__wbg_ptr, impulse_joints.__wbg_ptr, multibody_joints.__wbg_ptr);\n    return takeObject(ret);\n  }\n  /**\n  * @param {Uint8Array} data\n  * @returns {RawDeserializedWorld | undefined}\n  */\n  deserializeAll(data) {\n    const ret = wasm.rawserializationpipeline_deserializeAll(this.__wbg_ptr, addHeapObject(data));\n    return ret === 0 ? undefined : RawDeserializedWorld.__wrap(ret);\n  }\n}\n/**\n*/\nclass RawShape {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawShape.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawshape_free(ptr);\n  }\n  /**\n  * @param {number} hx\n  * @param {number} hy\n  * @param {number} hz\n  * @returns {RawShape}\n  */\n  static cuboid(hx, hy, hz) {\n    const ret = wasm.rawshape_cuboid(hx, hy, hz);\n    return RawShape.__wrap(ret);\n  }\n  /**\n  * @param {number} hx\n  * @param {number} hy\n  * @param {number} hz\n  * @param {number} borderRadius\n  * @returns {RawShape}\n  */\n  static roundCuboid(hx, hy, hz, borderRadius) {\n    const ret = wasm.rawshape_roundCuboid(hx, hy, hz, borderRadius);\n    return RawShape.__wrap(ret);\n  }\n  /**\n  * @param {number} radius\n  * @returns {RawShape}\n  */\n  static ball(radius) {\n    const ret = wasm.rawshape_ball(radius);\n    return RawShape.__wrap(ret);\n  }\n  /**\n  * @param {RawVector} normal\n  * @returns {RawShape}\n  */\n  static halfspace(normal) {\n    _assertClass(normal, RawVector);\n    const ret = wasm.rawshape_halfspace(normal.__wbg_ptr);\n    return RawShape.__wrap(ret);\n  }\n  /**\n  * @param {number} halfHeight\n  * @param {number} radius\n  * @returns {RawShape}\n  */\n  static capsule(halfHeight, radius) {\n    const ret = wasm.rawshape_capsule(halfHeight, radius);\n    return RawShape.__wrap(ret);\n  }\n  /**\n  * @param {number} halfHeight\n  * @param {number} radius\n  * @returns {RawShape}\n  */\n  static cylinder(halfHeight, radius) {\n    const ret = wasm.rawshape_cylinder(halfHeight, radius);\n    return RawShape.__wrap(ret);\n  }\n  /**\n  * @param {number} halfHeight\n  * @param {number} radius\n  * @param {number} borderRadius\n  * @returns {RawShape}\n  */\n  static roundCylinder(halfHeight, radius, borderRadius) {\n    const ret = wasm.rawshape_roundCylinder(halfHeight, radius, borderRadius);\n    return RawShape.__wrap(ret);\n  }\n  /**\n  * @param {number} halfHeight\n  * @param {number} radius\n  * @returns {RawShape}\n  */\n  static cone(halfHeight, radius) {\n    const ret = wasm.rawshape_cone(halfHeight, radius);\n    return RawShape.__wrap(ret);\n  }\n  /**\n  * @param {number} halfHeight\n  * @param {number} radius\n  * @param {number} borderRadius\n  * @returns {RawShape}\n  */\n  static roundCone(halfHeight, radius, borderRadius) {\n    const ret = wasm.rawshape_roundCone(halfHeight, radius, borderRadius);\n    return RawShape.__wrap(ret);\n  }\n  /**\n  * @param {Float32Array} vertices\n  * @param {Uint32Array} indices\n  * @returns {RawShape}\n  */\n  static polyline(vertices, indices) {\n    const ptr0 = passArrayF32ToWasm0(vertices, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArray32ToWasm0(indices, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.rawshape_polyline(ptr0, len0, ptr1, len1);\n    return RawShape.__wrap(ret);\n  }\n  /**\n  * @param {Float32Array} vertices\n  * @param {Uint32Array} indices\n  * @param {number} flags\n  * @returns {RawShape}\n  */\n  static trimesh(vertices, indices, flags) {\n    const ptr0 = passArrayF32ToWasm0(vertices, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArray32ToWasm0(indices, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.rawshape_trimesh(ptr0, len0, ptr1, len1, flags);\n    return RawShape.__wrap(ret);\n  }\n  /**\n  * @param {number} nrows\n  * @param {number} ncols\n  * @param {Float32Array} heights\n  * @param {RawVector} scale\n  * @param {number} flags\n  * @returns {RawShape}\n  */\n  static heightfield(nrows, ncols, heights, scale, flags) {\n    const ptr0 = passArrayF32ToWasm0(heights, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    _assertClass(scale, RawVector);\n    const ret = wasm.rawshape_heightfield(nrows, ncols, ptr0, len0, scale.__wbg_ptr, flags);\n    return RawShape.__wrap(ret);\n  }\n  /**\n  * @param {RawVector} p1\n  * @param {RawVector} p2\n  * @returns {RawShape}\n  */\n  static segment(p1, p2) {\n    _assertClass(p1, RawVector);\n    _assertClass(p2, RawVector);\n    const ret = wasm.rawshape_segment(p1.__wbg_ptr, p2.__wbg_ptr);\n    return RawShape.__wrap(ret);\n  }\n  /**\n  * @param {RawVector} p1\n  * @param {RawVector} p2\n  * @param {RawVector} p3\n  * @returns {RawShape}\n  */\n  static triangle(p1, p2, p3) {\n    _assertClass(p1, RawVector);\n    _assertClass(p2, RawVector);\n    _assertClass(p3, RawVector);\n    const ret = wasm.rawshape_triangle(p1.__wbg_ptr, p2.__wbg_ptr, p3.__wbg_ptr);\n    return RawShape.__wrap(ret);\n  }\n  /**\n  * @param {RawVector} p1\n  * @param {RawVector} p2\n  * @param {RawVector} p3\n  * @param {number} borderRadius\n  * @returns {RawShape}\n  */\n  static roundTriangle(p1, p2, p3, borderRadius) {\n    _assertClass(p1, RawVector);\n    _assertClass(p2, RawVector);\n    _assertClass(p3, RawVector);\n    const ret = wasm.rawshape_roundTriangle(p1.__wbg_ptr, p2.__wbg_ptr, p3.__wbg_ptr, borderRadius);\n    return RawShape.__wrap(ret);\n  }\n  /**\n  * @param {Float32Array} points\n  * @returns {RawShape | undefined}\n  */\n  static convexHull(points) {\n    const ptr0 = passArrayF32ToWasm0(points, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.rawshape_convexHull(ptr0, len0);\n    return ret === 0 ? undefined : RawShape.__wrap(ret);\n  }\n  /**\n  * @param {Float32Array} points\n  * @param {number} borderRadius\n  * @returns {RawShape | undefined}\n  */\n  static roundConvexHull(points, borderRadius) {\n    const ptr0 = passArrayF32ToWasm0(points, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.rawshape_roundConvexHull(ptr0, len0, borderRadius);\n    return ret === 0 ? undefined : RawShape.__wrap(ret);\n  }\n  /**\n  * @param {Float32Array} vertices\n  * @param {Uint32Array} indices\n  * @returns {RawShape | undefined}\n  */\n  static convexMesh(vertices, indices) {\n    const ptr0 = passArrayF32ToWasm0(vertices, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArray32ToWasm0(indices, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.rawshape_convexMesh(ptr0, len0, ptr1, len1);\n    return ret === 0 ? undefined : RawShape.__wrap(ret);\n  }\n  /**\n  * @param {Float32Array} vertices\n  * @param {Uint32Array} indices\n  * @param {number} borderRadius\n  * @returns {RawShape | undefined}\n  */\n  static roundConvexMesh(vertices, indices, borderRadius) {\n    const ptr0 = passArrayF32ToWasm0(vertices, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArray32ToWasm0(indices, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.rawshape_roundConvexMesh(ptr0, len0, ptr1, len1, borderRadius);\n    return ret === 0 ? undefined : RawShape.__wrap(ret);\n  }\n  /**\n  * @param {RawVector} shapePos1\n  * @param {RawRotation} shapeRot1\n  * @param {RawVector} shapeVel1\n  * @param {RawShape} shape2\n  * @param {RawVector} shapePos2\n  * @param {RawRotation} shapeRot2\n  * @param {RawVector} shapeVel2\n  * @param {number} target_distance\n  * @param {number} maxToi\n  * @param {boolean} stop_at_penetration\n  * @returns {RawShapeCastHit | undefined}\n  */\n  castShape(shapePos1, shapeRot1, shapeVel1, shape2, shapePos2, shapeRot2, shapeVel2, target_distance, maxToi, stop_at_penetration) {\n    _assertClass(shapePos1, RawVector);\n    _assertClass(shapeRot1, RawRotation);\n    _assertClass(shapeVel1, RawVector);\n    _assertClass(shape2, RawShape);\n    _assertClass(shapePos2, RawVector);\n    _assertClass(shapeRot2, RawRotation);\n    _assertClass(shapeVel2, RawVector);\n    const ret = wasm.rawshape_castShape(this.__wbg_ptr, shapePos1.__wbg_ptr, shapeRot1.__wbg_ptr, shapeVel1.__wbg_ptr, shape2.__wbg_ptr, shapePos2.__wbg_ptr, shapeRot2.__wbg_ptr, shapeVel2.__wbg_ptr, target_distance, maxToi, stop_at_penetration);\n    return ret === 0 ? undefined : RawShapeCastHit.__wrap(ret);\n  }\n  /**\n  * @param {RawVector} shapePos1\n  * @param {RawRotation} shapeRot1\n  * @param {RawShape} shape2\n  * @param {RawVector} shapePos2\n  * @param {RawRotation} shapeRot2\n  * @returns {boolean}\n  */\n  intersectsShape(shapePos1, shapeRot1, shape2, shapePos2, shapeRot2) {\n    _assertClass(shapePos1, RawVector);\n    _assertClass(shapeRot1, RawRotation);\n    _assertClass(shape2, RawShape);\n    _assertClass(shapePos2, RawVector);\n    _assertClass(shapeRot2, RawRotation);\n    const ret = wasm.rawshape_intersectsShape(this.__wbg_ptr, shapePos1.__wbg_ptr, shapeRot1.__wbg_ptr, shape2.__wbg_ptr, shapePos2.__wbg_ptr, shapeRot2.__wbg_ptr);\n    return ret !== 0;\n  }\n  /**\n  * @param {RawVector} shapePos1\n  * @param {RawRotation} shapeRot1\n  * @param {RawShape} shape2\n  * @param {RawVector} shapePos2\n  * @param {RawRotation} shapeRot2\n  * @param {number} prediction\n  * @returns {RawShapeContact | undefined}\n  */\n  contactShape(shapePos1, shapeRot1, shape2, shapePos2, shapeRot2, prediction) {\n    _assertClass(shapePos1, RawVector);\n    _assertClass(shapeRot1, RawRotation);\n    _assertClass(shape2, RawShape);\n    _assertClass(shapePos2, RawVector);\n    _assertClass(shapeRot2, RawRotation);\n    const ret = wasm.rawshape_contactShape(this.__wbg_ptr, shapePos1.__wbg_ptr, shapeRot1.__wbg_ptr, shape2.__wbg_ptr, shapePos2.__wbg_ptr, shapeRot2.__wbg_ptr, prediction);\n    return ret === 0 ? undefined : RawShapeContact.__wrap(ret);\n  }\n  /**\n  * @param {RawVector} shapePos\n  * @param {RawRotation} shapeRot\n  * @param {RawVector} point\n  * @returns {boolean}\n  */\n  containsPoint(shapePos, shapeRot, point) {\n    _assertClass(shapePos, RawVector);\n    _assertClass(shapeRot, RawRotation);\n    _assertClass(point, RawVector);\n    const ret = wasm.rawshape_containsPoint(this.__wbg_ptr, shapePos.__wbg_ptr, shapeRot.__wbg_ptr, point.__wbg_ptr);\n    return ret !== 0;\n  }\n  /**\n  * @param {RawVector} shapePos\n  * @param {RawRotation} shapeRot\n  * @param {RawVector} point\n  * @param {boolean} solid\n  * @returns {RawPointProjection}\n  */\n  projectPoint(shapePos, shapeRot, point, solid) {\n    _assertClass(shapePos, RawVector);\n    _assertClass(shapeRot, RawRotation);\n    _assertClass(point, RawVector);\n    const ret = wasm.rawshape_projectPoint(this.__wbg_ptr, shapePos.__wbg_ptr, shapeRot.__wbg_ptr, point.__wbg_ptr, solid);\n    return RawPointProjection.__wrap(ret);\n  }\n  /**\n  * @param {RawVector} shapePos\n  * @param {RawRotation} shapeRot\n  * @param {RawVector} rayOrig\n  * @param {RawVector} rayDir\n  * @param {number} maxToi\n  * @returns {boolean}\n  */\n  intersectsRay(shapePos, shapeRot, rayOrig, rayDir, maxToi) {\n    _assertClass(shapePos, RawVector);\n    _assertClass(shapeRot, RawRotation);\n    _assertClass(rayOrig, RawVector);\n    _assertClass(rayDir, RawVector);\n    const ret = wasm.rawshape_intersectsRay(this.__wbg_ptr, shapePos.__wbg_ptr, shapeRot.__wbg_ptr, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi);\n    return ret !== 0;\n  }\n  /**\n  * @param {RawVector} shapePos\n  * @param {RawRotation} shapeRot\n  * @param {RawVector} rayOrig\n  * @param {RawVector} rayDir\n  * @param {number} maxToi\n  * @param {boolean} solid\n  * @returns {number}\n  */\n  castRay(shapePos, shapeRot, rayOrig, rayDir, maxToi, solid) {\n    _assertClass(shapePos, RawVector);\n    _assertClass(shapeRot, RawRotation);\n    _assertClass(rayOrig, RawVector);\n    _assertClass(rayDir, RawVector);\n    const ret = wasm.rawshape_castRay(this.__wbg_ptr, shapePos.__wbg_ptr, shapeRot.__wbg_ptr, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi, solid);\n    return ret;\n  }\n  /**\n  * @param {RawVector} shapePos\n  * @param {RawRotation} shapeRot\n  * @param {RawVector} rayOrig\n  * @param {RawVector} rayDir\n  * @param {number} maxToi\n  * @param {boolean} solid\n  * @returns {RawRayIntersection | undefined}\n  */\n  castRayAndGetNormal(shapePos, shapeRot, rayOrig, rayDir, maxToi, solid) {\n    _assertClass(shapePos, RawVector);\n    _assertClass(shapeRot, RawRotation);\n    _assertClass(rayOrig, RawVector);\n    _assertClass(rayDir, RawVector);\n    const ret = wasm.rawshape_castRayAndGetNormal(this.__wbg_ptr, shapePos.__wbg_ptr, shapeRot.__wbg_ptr, rayOrig.__wbg_ptr, rayDir.__wbg_ptr, maxToi, solid);\n    return ret === 0 ? undefined : RawRayIntersection.__wrap(ret);\n  }\n}\n/**\n*/\nclass RawShapeCastHit {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawShapeCastHit.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawshapecasthit_free(ptr);\n  }\n  /**\n  * @returns {number}\n  */\n  time_of_impact() {\n    const ret = wasm.rawrotation_x(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {RawVector}\n  */\n  witness1() {\n    const ret = wasm.rawshapecasthit_witness1(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  witness2() {\n    const ret = wasm.rawcontactforceevent_total_force(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  normal1() {\n    const ret = wasm.rawshapecasthit_normal1(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  normal2() {\n    const ret = wasm.rawshapecasthit_normal2(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n}\n/**\n*/\nclass RawShapeContact {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawShapeContact.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawshapecontact_free(ptr);\n  }\n  /**\n  * @returns {number}\n  */\n  distance() {\n    const ret = wasm.rawkinematiccharactercontroller_maxSlopeClimbAngle(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @returns {RawVector}\n  */\n  point1() {\n    const ret = wasm.rawpointprojection_point(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  point2() {\n    const ret = wasm.rawcollidershapecasthit_witness1(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  normal1() {\n    const ret = wasm.rawcollidershapecasthit_witness2(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * @returns {RawVector}\n  */\n  normal2() {\n    const ret = wasm.rawcharactercollision_translationDeltaApplied(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n}\n/**\n* A vector.\n*/\nclass RawVector {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(RawVector.prototype);\n    obj.__wbg_ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_rawvector_free(ptr);\n  }\n  /**\n  * Creates a new vector filled with zeros.\n  * @returns {RawVector}\n  */\n  static zero() {\n    const ret = wasm.rawvector_zero();\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * Creates a new 3D vector from its two components.\n  *\n  * # Parameters\n  * - `x`: the `x` component of this 3D vector.\n  * - `y`: the `y` component of this 3D vector.\n  * - `z`: the `z` component of this 3D vector.\n  * @param {number} x\n  * @param {number} y\n  * @param {number} z\n  */\n  constructor(x, y, z) {\n    const ret = wasm.rawvector_new(x, y, z);\n    this.__wbg_ptr = ret >>> 0;\n    return this;\n  }\n  /**\n  * The `x` component of this vector.\n  * @returns {number}\n  */\n  get x() {\n    const ret = wasm.rawrotation_x(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * Sets the `x` component of this vector.\n  * @param {number} x\n  */\n  set x(x) {\n    wasm.rawvector_set_x(this.__wbg_ptr, x);\n  }\n  /**\n  * The `y` component of this vector.\n  * @returns {number}\n  */\n  get y() {\n    const ret = wasm.rawintegrationparameters_dt(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * Sets the `y` component of this vector.\n  * @param {number} y\n  */\n  set y(y) {\n    wasm.rawintegrationparameters_set_dt(this.__wbg_ptr, y);\n  }\n  /**\n  * The `z` component of this vector.\n  * @returns {number}\n  */\n  get z() {\n    const ret = wasm.rawcollidershapecasthit_time_of_impact(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * Sets the `z` component of this vector.\n  * @param {number} z\n  */\n  set z(z) {\n    wasm.rawvector_set_z(this.__wbg_ptr, z);\n  }\n  /**\n  * Create a new 3D vector from this vector with its components rearranged as `{x, y, z}`.\n  *\n  * This will effectively return a copy of `this`. This method exist for completeness with the\n  * other swizzling functions.\n  * @returns {RawVector}\n  */\n  xyz() {\n    const ret = wasm.rawvector_xyz(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * Create a new 3D vector from this vector with its components rearranged as `{y, x, z}`.\n  * @returns {RawVector}\n  */\n  yxz() {\n    const ret = wasm.rawvector_yxz(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * Create a new 3D vector from this vector with its components rearranged as `{z, x, y}`.\n  * @returns {RawVector}\n  */\n  zxy() {\n    const ret = wasm.rawvector_zxy(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * Create a new 3D vector from this vector with its components rearranged as `{x, z, y}`.\n  * @returns {RawVector}\n  */\n  xzy() {\n    const ret = wasm.rawvector_xzy(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * Create a new 3D vector from this vector with its components rearranged as `{y, z, x}`.\n  * @returns {RawVector}\n  */\n  yzx() {\n    const ret = wasm.rawvector_yzx(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n  /**\n  * Create a new 3D vector from this vector with its components rearranged as `{z, y, x}`.\n  * @returns {RawVector}\n  */\n  zyx() {\n    const ret = wasm.rawvector_zyx(this.__wbg_ptr);\n    return RawVector.__wrap(ret);\n  }\n}\nfunction __wbindgen_number_new(arg0) {\n  const ret = arg0;\n  return addHeapObject(ret);\n}\n;\nfunction __wbindgen_boolean_get(arg0) {\n  const v = getObject(arg0);\n  const ret = typeof v === 'boolean' ? v ? 1 : 0 : 2;\n  return ret;\n}\n;\nfunction __wbindgen_object_drop_ref(arg0) {\n  takeObject(arg0);\n}\n;\nfunction __wbindgen_number_get(arg0, arg1) {\n  const obj = getObject(arg1);\n  const ret = typeof obj === 'number' ? obj : undefined;\n  getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n  getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n}\n;\nfunction __wbindgen_is_function(arg0) {\n  const ret = typeof getObject(arg0) === 'function';\n  return ret;\n}\n;\nfunction __wbg_rawraycolliderintersection_new(arg0) {\n  const ret = RawRayColliderIntersection.__wrap(arg0);\n  return addHeapObject(ret);\n}\n;\nfunction __wbg_rawcontactforceevent_new(arg0) {\n  const ret = RawContactForceEvent.__wrap(arg0);\n  return addHeapObject(ret);\n}\n;\nfunction __wbg_call_01734de55d61e11d() {\n  return handleError(function (arg0, arg1, arg2) {\n    const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n  }, arguments);\n}\n;\nfunction __wbg_call_4c92f6aec1e1d6e6() {\n  return handleError(function (arg0, arg1, arg2, arg3) {\n    const ret = getObject(arg0).call(getObject(arg1), getObject(arg2), getObject(arg3));\n    return addHeapObject(ret);\n  }, arguments);\n}\n;\nfunction __wbg_call_776890ca77946e2f() {\n  return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n    const ret = getObject(arg0).call(getObject(arg1), getObject(arg2), getObject(arg3), getObject(arg4));\n    return addHeapObject(ret);\n  }, arguments);\n}\n;\nfunction __wbg_bind_60a9a80cada2f33c(arg0, arg1, arg2, arg3) {\n  const ret = getObject(arg0).bind(getObject(arg1), getObject(arg2), getObject(arg3));\n  return addHeapObject(ret);\n}\n;\nfunction __wbg_buffer_085ec1f694018c4f(arg0) {\n  const ret = getObject(arg0).buffer;\n  return addHeapObject(ret);\n}\n;\nfunction __wbg_newwithbyteoffsetandlength_6da8e527659b86aa(arg0, arg1, arg2) {\n  const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n  return addHeapObject(ret);\n}\n;\nfunction __wbg_new_8125e318e6245eed(arg0) {\n  const ret = new Uint8Array(getObject(arg0));\n  return addHeapObject(ret);\n}\n;\nfunction __wbg_set_5cf90238115182c3(arg0, arg1, arg2) {\n  getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n}\n;\nfunction __wbg_length_72e2208bbc0efc61(arg0) {\n  const ret = getObject(arg0).length;\n  return ret;\n}\n;\nfunction __wbg_newwithbyteoffsetandlength_69193e31c844b792(arg0, arg1, arg2) {\n  const ret = new Float32Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n  return addHeapObject(ret);\n}\n;\nfunction __wbg_set_6146c51d49a2c0df(arg0, arg1, arg2) {\n  getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n}\n;\nfunction __wbg_length_d7327c75a759af37(arg0) {\n  const ret = getObject(arg0).length;\n  return ret;\n}\n;\nfunction __wbg_newwithlength_68d29ab115d0099c(arg0) {\n  const ret = new Float32Array(arg0 >>> 0);\n  return addHeapObject(ret);\n}\n;\nfunction __wbindgen_throw(arg0, arg1) {\n  throw new Error(getStringFromWasm0(arg0, arg1));\n}\n;\nfunction __wbindgen_memory() {\n  const ret = wasm.memory;\n  return addHeapObject(ret);\n}\n;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../Phat-Kitty-2/node_modules/webpack/buildin/harmony-module.js */ \"../Phat-Kitty-2/node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/rapier_wasm3d_bg.js\n");

/***/ }),

/***/ "./lib/@dimforge/rapier3d/rapier_wasm3d_bg.wasm":
/*!******************************************************!*\
  !*** ./lib/@dimforge/rapier3d/rapier_wasm3d_bg.wasm ***!
  \******************************************************/
/*! exports provided: memory, version, __wbg_rawkinematiccharactercontroller_free, rawkinematiccharactercontroller_new, rawkinematiccharactercontroller_setUp, rawkinematiccharactercontroller_normalNudgeFactor, rawkinematiccharactercontroller_setNormalNudgeFactor, rawkinematiccharactercontroller_setOffset, rawkinematiccharactercontroller_slideEnabled, rawkinematiccharactercontroller_setSlideEnabled, rawkinematiccharactercontroller_autostepMaxHeight, rawkinematiccharactercontroller_autostepMinWidth, rawkinematiccharactercontroller_autostepIncludesDynamicBodies, rawkinematiccharactercontroller_autostepEnabled, rawkinematiccharactercontroller_enableAutostep, rawkinematiccharactercontroller_disableAutostep, rawkinematiccharactercontroller_maxSlopeClimbAngle, rawkinematiccharactercontroller_setMaxSlopeClimbAngle, rawkinematiccharactercontroller_minSlopeSlideAngle, rawkinematiccharactercontroller_setMinSlopeSlideAngle, rawkinematiccharactercontroller_snapToGroundDistance, rawkinematiccharactercontroller_enableSnapToGround, rawkinematiccharactercontroller_disableSnapToGround, rawkinematiccharactercontroller_snapToGroundEnabled, rawkinematiccharactercontroller_computeColliderMovement, rawkinematiccharactercontroller_computedMovement, rawkinematiccharactercontroller_computedGrounded, rawkinematiccharactercontroller_numComputedCollisions, rawkinematiccharactercontroller_computedCollision, __wbg_rawcharactercollision_free, rawcharactercollision_new, rawcharactercollision_handle, rawcharactercollision_translationDeltaApplied, rawcharactercollision_translationDeltaRemaining, rawcharactercollision_toi, rawcharactercollision_worldWitness1, rawcharactercollision_worldWitness2, rawcharactercollision_worldNormal1, rawcharactercollision_worldNormal2, __wbg_rawdynamicraycastvehiclecontroller_free, rawdynamicraycastvehiclecontroller_new, rawdynamicraycastvehiclecontroller_current_vehicle_speed, rawdynamicraycastvehiclecontroller_chassis, rawdynamicraycastvehiclecontroller_index_up_axis, rawdynamicraycastvehiclecontroller_set_index_up_axis, rawdynamicraycastvehiclecontroller_index_forward_axis, rawdynamicraycastvehiclecontroller_set_index_forward_axis, rawdynamicraycastvehiclecontroller_add_wheel, rawdynamicraycastvehiclecontroller_num_wheels, rawdynamicraycastvehiclecontroller_update_vehicle, rawdynamicraycastvehiclecontroller_wheel_chassis_connection_point_cs, rawdynamicraycastvehiclecontroller_set_wheel_chassis_connection_point_cs, rawdynamicraycastvehiclecontroller_wheel_suspension_rest_length, rawdynamicraycastvehiclecontroller_set_wheel_suspension_rest_length, rawdynamicraycastvehiclecontroller_wheel_max_suspension_travel, rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_travel, rawdynamicraycastvehiclecontroller_wheel_radius, rawdynamicraycastvehiclecontroller_set_wheel_radius, rawdynamicraycastvehiclecontroller_wheel_suspension_stiffness, rawdynamicraycastvehiclecontroller_set_wheel_suspension_stiffness, rawdynamicraycastvehiclecontroller_wheel_suspension_compression, rawdynamicraycastvehiclecontroller_set_wheel_suspension_compression, rawdynamicraycastvehiclecontroller_wheel_suspension_relaxation, rawdynamicraycastvehiclecontroller_set_wheel_suspension_relaxation, rawdynamicraycastvehiclecontroller_wheel_max_suspension_force, rawdynamicraycastvehiclecontroller_set_wheel_max_suspension_force, rawdynamicraycastvehiclecontroller_wheel_brake, rawdynamicraycastvehiclecontroller_set_wheel_brake, rawdynamicraycastvehiclecontroller_wheel_steering, rawdynamicraycastvehiclecontroller_set_wheel_steering, rawdynamicraycastvehiclecontroller_wheel_engine_force, rawdynamicraycastvehiclecontroller_set_wheel_engine_force, rawdynamicraycastvehiclecontroller_wheel_direction_cs, rawdynamicraycastvehiclecontroller_set_wheel_direction_cs, rawdynamicraycastvehiclecontroller_wheel_axle_cs, rawdynamicraycastvehiclecontroller_set_wheel_axle_cs, rawdynamicraycastvehiclecontroller_wheel_friction_slip, rawdynamicraycastvehiclecontroller_set_wheel_friction_slip, rawdynamicraycastvehiclecontroller_wheel_side_friction_stiffness, rawdynamicraycastvehiclecontroller_set_wheel_side_friction_stiffness, rawdynamicraycastvehiclecontroller_wheel_rotation, rawdynamicraycastvehiclecontroller_wheel_forward_impulse, rawdynamicraycastvehiclecontroller_wheel_side_impulse, rawdynamicraycastvehiclecontroller_wheel_suspension_force, rawdynamicraycastvehiclecontroller_wheel_contact_normal_ws, rawdynamicraycastvehiclecontroller_wheel_contact_point_ws, rawdynamicraycastvehiclecontroller_wheel_suspension_length, rawdynamicraycastvehiclecontroller_wheel_hard_point_ws, rawdynamicraycastvehiclecontroller_wheel_is_in_contact, rawdynamicraycastvehiclecontroller_wheel_ground_object, __wbg_rawccdsolver_free, rawccdsolver_new, rawimpulsejointset_jointType, rawimpulsejointset_jointBodyHandle1, rawimpulsejointset_jointBodyHandle2, rawimpulsejointset_jointFrameX1, rawimpulsejointset_jointFrameX2, rawimpulsejointset_jointAnchor1, rawimpulsejointset_jointAnchor2, rawimpulsejointset_jointSetAnchor1, rawimpulsejointset_jointSetAnchor2, rawimpulsejointset_jointContactsEnabled, rawimpulsejointset_jointSetContactsEnabled, rawimpulsejointset_jointLimitsEnabled, rawimpulsejointset_jointLimitsMin, rawimpulsejointset_jointLimitsMax, rawimpulsejointset_jointSetLimits, rawimpulsejointset_jointConfigureMotorModel, rawimpulsejointset_jointConfigureMotorVelocity, rawimpulsejointset_jointConfigureMotorPosition, rawimpulsejointset_jointConfigureMotor, __wbg_rawimpulsejointset_free, rawimpulsejointset_new, rawimpulsejointset_createJoint, rawimpulsejointset_remove, rawimpulsejointset_len, rawimpulsejointset_contains, rawimpulsejointset_forEachJointHandle, rawimpulsejointset_forEachJointAttachedToRigidBody, __wbg_rawintegrationparameters_free, rawintegrationparameters_new, rawintegrationparameters_dt, rawintegrationparameters_erp, rawintegrationparameters_numSolverIterations, rawintegrationparameters_maxCcdSubsteps, rawintegrationparameters_lengthUnit, rawintegrationparameters_set_dt, rawintegrationparameters_set_erp, rawintegrationparameters_set_normalizedAllowedLinearError, rawintegrationparameters_set_normalizedPredictionDistance, rawintegrationparameters_set_numSolverIterations, rawintegrationparameters_set_minIslandSize, rawintegrationparameters_set_maxCcdSubsteps, rawintegrationparameters_set_lengthUnit, rawintegrationparameters_switchToStandardPgsSolver, rawintegrationparameters_switchToSmallStepsPgsSolver, rawintegrationparameters_switchToSmallStepsPgsSolverWithoutWarmstart, __wbg_rawislandmanager_free, rawislandmanager_new, rawislandmanager_forEachActiveRigidBodyHandle, __wbg_rawgenericjoint_free, rawgenericjoint_generic, rawgenericjoint_spring, rawgenericjoint_rope, rawgenericjoint_spherical, rawgenericjoint_prismatic, rawgenericjoint_fixed, rawgenericjoint_revolute, rawmultibodyjointset_jointType, rawmultibodyjointset_jointFrameX1, rawmultibodyjointset_jointFrameX2, rawmultibodyjointset_jointAnchor1, rawmultibodyjointset_jointAnchor2, rawmultibodyjointset_jointContactsEnabled, rawmultibodyjointset_jointSetContactsEnabled, rawmultibodyjointset_jointLimitsEnabled, rawmultibodyjointset_jointLimitsMin, rawmultibodyjointset_jointLimitsMax, __wbg_rawmultibodyjointset_free, rawmultibodyjointset_new, rawmultibodyjointset_createJoint, rawmultibodyjointset_remove, rawmultibodyjointset_contains, rawmultibodyjointset_forEachJointHandle, rawmultibodyjointset_forEachJointAttachedToRigidBody, rawrigidbodyset_rbTranslation, rawrigidbodyset_rbRotation, rawrigidbodyset_rbSleep, rawrigidbodyset_rbIsSleeping, rawrigidbodyset_rbIsMoving, rawrigidbodyset_rbNextTranslation, rawrigidbodyset_rbNextRotation, rawrigidbodyset_rbSetTranslation, rawrigidbodyset_rbSetRotation, rawrigidbodyset_rbSetLinvel, rawrigidbodyset_rbSetAngvel, rawrigidbodyset_rbSetNextKinematicTranslation, rawrigidbodyset_rbSetNextKinematicRotation, rawrigidbodyset_rbRecomputeMassPropertiesFromColliders, rawrigidbodyset_rbSetAdditionalMass, rawrigidbodyset_rbSetAdditionalMassProperties, rawrigidbodyset_rbLinvel, rawrigidbodyset_rbAngvel, rawrigidbodyset_rbLockTranslations, rawrigidbodyset_rbSetEnabledTranslations, rawrigidbodyset_rbLockRotations, rawrigidbodyset_rbSetEnabledRotations, rawrigidbodyset_rbDominanceGroup, rawrigidbodyset_rbSetDominanceGroup, rawrigidbodyset_rbEnableCcd, rawrigidbodyset_rbSetSoftCcdPrediction, rawrigidbodyset_rbMass, rawrigidbodyset_rbInvMass, rawrigidbodyset_rbEffectiveInvMass, rawrigidbodyset_rbLocalCom, rawrigidbodyset_rbWorldCom, rawrigidbodyset_rbInvPrincipalInertiaSqrt, rawrigidbodyset_rbPrincipalInertiaLocalFrame, rawrigidbodyset_rbPrincipalInertia, rawrigidbodyset_rbEffectiveWorldInvInertiaSqrt, rawrigidbodyset_rbEffectiveAngularInertia, rawrigidbodyset_rbWakeUp, rawrigidbodyset_rbIsCcdEnabled, rawrigidbodyset_rbSoftCcdPrediction, rawrigidbodyset_rbNumColliders, rawrigidbodyset_rbCollider, rawrigidbodyset_rbBodyType, rawrigidbodyset_rbSetBodyType, rawrigidbodyset_rbIsFixed, rawrigidbodyset_rbIsKinematic, rawrigidbodyset_rbIsDynamic, rawrigidbodyset_rbLinearDamping, rawrigidbodyset_rbAngularDamping, rawrigidbodyset_rbSetLinearDamping, rawrigidbodyset_rbSetAngularDamping, rawrigidbodyset_rbSetEnabled, rawrigidbodyset_rbIsEnabled, rawrigidbodyset_rbGravityScale, rawrigidbodyset_rbSetGravityScale, rawrigidbodyset_rbResetForces, rawrigidbodyset_rbResetTorques, rawrigidbodyset_rbAddForce, rawrigidbodyset_rbApplyImpulse, rawrigidbodyset_rbAddTorque, rawrigidbodyset_rbApplyTorqueImpulse, rawrigidbodyset_rbAddForceAtPoint, rawrigidbodyset_rbApplyImpulseAtPoint, rawrigidbodyset_rbAdditionalSolverIterations, rawrigidbodyset_rbSetAdditionalSolverIterations, rawrigidbodyset_rbUserData, rawrigidbodyset_rbSetUserData, __wbg_rawrigidbodyset_free, rawrigidbodyset_new, rawrigidbodyset_createRigidBody, rawrigidbodyset_remove, rawrigidbodyset_contains, rawrigidbodyset_forEachRigidBodyHandle, rawrigidbodyset_propagateModifiedBodyPositionsToColliders, __wbg_rawbroadphase_free, rawbroadphase_new, rawcolliderset_coTranslation, rawcolliderset_coRotation, rawcolliderset_coSetTranslation, rawcolliderset_coSetTranslationWrtParent, rawcolliderset_coSetRotation, rawcolliderset_coSetRotationWrtParent, rawcolliderset_coIsSensor, rawcolliderset_coShapeType, rawcolliderset_coHalfspaceNormal, rawcolliderset_coHalfExtents, rawcolliderset_coSetHalfExtents, rawcolliderset_coRadius, rawcolliderset_coSetRadius, rawcolliderset_coHalfHeight, rawcolliderset_coSetHalfHeight, rawcolliderset_coRoundRadius, rawcolliderset_coSetRoundRadius, rawcolliderset_coVertices, rawcolliderset_coIndices, rawcolliderset_coTriMeshFlags, rawcolliderset_coHeightFieldFlags, rawcolliderset_coHeightfieldHeights, rawcolliderset_coHeightfieldScale, rawcolliderset_coHeightfieldNRows, rawcolliderset_coHeightfieldNCols, rawcolliderset_coParent, rawcolliderset_coSetEnabled, rawcolliderset_coIsEnabled, rawcolliderset_coSetContactSkin, rawcolliderset_coContactSkin, rawcolliderset_coFriction, rawcolliderset_coRestitution, rawcolliderset_coDensity, rawcolliderset_coMass, rawcolliderset_coVolume, rawcolliderset_coCollisionGroups, rawcolliderset_coSolverGroups, rawcolliderset_coActiveHooks, rawcolliderset_coActiveCollisionTypes, rawcolliderset_coActiveEvents, rawcolliderset_coContactForceEventThreshold, rawcolliderset_coContainsPoint, rawcolliderset_coCastShape, rawcolliderset_coCastCollider, rawcolliderset_coIntersectsShape, rawcolliderset_coContactShape, rawcolliderset_coContactCollider, rawcolliderset_coProjectPoint, rawcolliderset_coIntersectsRay, rawcolliderset_coCastRay, rawcolliderset_coCastRayAndGetNormal, rawcolliderset_coSetSensor, rawcolliderset_coSetRestitution, rawcolliderset_coSetFriction, rawcolliderset_coFrictionCombineRule, rawcolliderset_coSetFrictionCombineRule, rawcolliderset_coRestitutionCombineRule, rawcolliderset_coSetRestitutionCombineRule, rawcolliderset_coSetCollisionGroups, rawcolliderset_coSetSolverGroups, rawcolliderset_coSetActiveHooks, rawcolliderset_coSetActiveEvents, rawcolliderset_coSetActiveCollisionTypes, rawcolliderset_coSetShape, rawcolliderset_coSetContactForceEventThreshold, rawcolliderset_coSetDensity, rawcolliderset_coSetMass, rawcolliderset_coSetMassProperties, __wbg_rawcolliderset_free, rawcolliderset_new, rawcolliderset_len, rawcolliderset_contains, rawcolliderset_createCollider, rawcolliderset_remove, rawcolliderset_forEachColliderHandle, __wbg_rawshapecontact_free, __wbg_rawnarrowphase_free, rawnarrowphase_new, rawnarrowphase_contact_pairs_with, rawnarrowphase_contact_pair, rawnarrowphase_intersection_pairs_with, rawnarrowphase_intersection_pair, __wbg_rawcontactmanifold_free, rawcontactpair_collider1, rawcontactpair_collider2, rawcontactpair_numContactManifolds, rawcontactpair_contactManifold, rawcontactmanifold_normal, rawcontactmanifold_local_n1, rawcontactmanifold_local_n2, rawcontactmanifold_subshape1, rawcontactmanifold_subshape2, rawcontactmanifold_num_contacts, rawcontactmanifold_contact_local_p1, rawcontactmanifold_contact_local_p2, rawcontactmanifold_contact_dist, rawcontactmanifold_contact_fid1, rawcontactmanifold_contact_fid2, rawcontactmanifold_contact_impulse, rawcontactmanifold_contact_tangent_impulse_x, rawcontactmanifold_contact_tangent_impulse_y, rawcontactmanifold_num_solver_contacts, rawcontactmanifold_solver_contact_point, rawcontactmanifold_solver_contact_dist, rawcontactmanifold_solver_contact_friction, rawcontactmanifold_solver_contact_restitution, rawcontactmanifold_solver_contact_tangent_velocity, __wbg_rawpointprojection_free, rawpointprojection_point, rawpointprojection_isInside, __wbg_rawpointcolliderprojection_free, rawpointcolliderprojection_colliderHandle, rawpointcolliderprojection_point, rawpointcolliderprojection_isInside, rawpointcolliderprojection_featureType, rawpointcolliderprojection_featureId, __wbg_rawrayintersection_free, __wbg_rawraycolliderhit_free, __wbg_rawshape_free, rawshape_cuboid, rawshape_roundCuboid, rawshape_ball, rawshape_halfspace, rawshape_capsule, rawshape_cylinder, rawshape_roundCylinder, rawshape_cone, rawshape_roundCone, rawshape_polyline, rawshape_trimesh, rawshape_heightfield, rawshape_segment, rawshape_triangle, rawshape_roundTriangle, rawshape_convexHull, rawshape_roundConvexHull, rawshape_convexMesh, rawshape_roundConvexMesh, rawshape_castShape, rawshape_intersectsShape, rawshape_contactShape, rawshape_containsPoint, rawshape_projectPoint, rawshape_intersectsRay, rawshape_castRay, rawshape_castRayAndGetNormal, __wbg_rawshapecasthit_free, rawshapecasthit_witness1, rawshapecasthit_normal1, rawshapecasthit_normal2, __wbg_rawcollidershapecasthit_free, rawcollidershapecasthit_time_of_impact, rawcollidershapecasthit_witness1, rawcollidershapecasthit_witness2, rawrotation_new, rawrotation_identity, rawrotation_x, rawvector_zero, rawvector_new, rawvector_set_x, rawvector_set_z, rawvector_xyz, rawvector_yxz, rawvector_zxy, rawvector_xzy, rawvector_yzx, rawvector_zyx, rawsdpmatrix3_elements, __wbg_rawdebugrenderpipeline_free, rawdebugrenderpipeline_new, rawdebugrenderpipeline_vertices, rawdebugrenderpipeline_colors, rawdebugrenderpipeline_render, __wbg_raweventqueue_free, __wbg_rawcontactforceevent_free, rawcontactforceevent_collider2, rawcontactforceevent_total_force, rawcontactforceevent_total_force_magnitude, rawcontactforceevent_max_force_direction, rawcontactforceevent_max_force_magnitude, raweventqueue_new, raweventqueue_drainCollisionEvents, raweventqueue_drainContactForceEvents, raweventqueue_clear, __wbg_rawphysicspipeline_free, rawphysicspipeline_new, rawphysicspipeline_step, rawphysicspipeline_stepWithEvents, __wbg_rawquerypipeline_free, rawquerypipeline_new, rawquerypipeline_update, rawquerypipeline_castRay, rawquerypipeline_castRayAndGetNormal, rawquerypipeline_intersectionsWithRay, rawquerypipeline_intersectionWithShape, rawquerypipeline_projectPoint, rawquerypipeline_projectPointAndGetFeature, rawquerypipeline_intersectionsWithPoint, rawquerypipeline_castShape, rawquerypipeline_intersectionsWithShape, rawquerypipeline_collidersWithAabbIntersectingAabb, __wbg_rawdeserializedworld_free, rawdeserializedworld_takeGravity, rawdeserializedworld_takeIntegrationParameters, rawdeserializedworld_takeIslandManager, rawdeserializedworld_takeBroadPhase, rawdeserializedworld_takeNarrowPhase, rawdeserializedworld_takeBodies, rawdeserializedworld_takeColliders, rawdeserializedworld_takeImpulseJoints, rawdeserializedworld_takeMultibodyJoints, rawserializationpipeline_new, rawserializationpipeline_serializeAll, rawserializationpipeline_deserializeAll, rawintegrationparameters_set_numAdditionalFrictionIterations, rawintegrationparameters_set_numInternalPgsIterations, rawvector_set_y, rawkinematiccharactercontroller_up, rawshapecontact_normal2, rawshapecontact_point1, rawshapecontact_point2, rawrayintersection_normal, rawraycolliderintersection_normal, rawshapecontact_normal1, rawcollidershapecasthit_normal1, rawcollidershapecasthit_normal2, rawshapecasthit_witness2, rawkinematiccharactercontroller_offset, rawintegrationparameters_normalizedAllowedLinearError, rawintegrationparameters_numAdditionalFrictionIterations, rawintegrationparameters_numInternalPgsIterations, rawintegrationparameters_minIslandSize, rawrigidbodyset_len, rawshapecontact_distance, rawrayintersection_featureType, rawraycolliderintersection_colliderHandle, rawrayintersection_time_of_impact, rawraycolliderintersection_featureType, rawraycolliderhit_colliderHandle, rawraycolliderintersection_time_of_impact, rawcollidershapecasthit_colliderHandle, rawraycolliderhit_timeOfImpact, rawshapecasthit_time_of_impact, rawrotation_y, rawrotation_z, rawrotation_w, rawvector_x, rawvector_y, rawvector_z, rawcontactforceevent_collider1, rawintegrationparameters_normalizedPredictionDistance, rawcolliderset_isHandleValid, __wbg_rawserializationpipeline_free, rawrayintersection_featureId, rawraycolliderintersection_featureId, __wbg_rawcontactpair_free, __wbg_rawraycolliderintersection_free, __wbg_rawrotation_free, __wbg_rawvector_free, __wbg_rawsdpmatrix3_free, __wbindgen_add_to_stack_pointer, __wbindgen_free, __wbindgen_malloc, __wbindgen_exn_store */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Instantiate WebAssembly module
var wasmExports = __webpack_require__.w[module.i];
__webpack_require__.r(exports);
// export exports from WebAssembly module
for(var name in wasmExports) if(name != "__webpack_init__") exports[name] = wasmExports[name];
// exec imports from WebAssembly module (for esm order)
/* harmony import */ var m0 = __webpack_require__(/*! ./rapier_wasm3d_bg.js */ "./lib/@dimforge/rapier3d/rapier_wasm3d_bg.js");


// exec wasm module
wasmExports["__webpack_init__"]()

/***/ }),

/***/ "./lib/@dimforge/rapier3d/raw.js":
/*!***************************************!*\
  !*** ./lib/@dimforge/rapier3d/raw.js ***!
  \***************************************/
/*! exports provided: __wbg_set_wasm, version, RawFeatureType, RawShapeType, RawJointType, RawJointAxis, RawMotorModel, RawRigidBodyType, RawBroadPhase, RawCCDSolver, RawCharacterCollision, RawColliderSet, RawColliderShapeCastHit, RawContactForceEvent, RawContactManifold, RawContactPair, RawDebugRenderPipeline, RawDeserializedWorld, RawDynamicRayCastVehicleController, RawEventQueue, RawGenericJoint, RawImpulseJointSet, RawIntegrationParameters, RawIslandManager, RawKinematicCharacterController, RawMultibodyJointSet, RawNarrowPhase, RawPhysicsPipeline, RawPointColliderProjection, RawPointProjection, RawQueryPipeline, RawRayColliderHit, RawRayColliderIntersection, RawRayIntersection, RawRigidBodySet, RawRotation, RawSdpMatrix3, RawSerializationPipeline, RawShape, RawShapeCastHit, RawShapeContact, RawVector, __wbindgen_number_new, __wbindgen_boolean_get, __wbindgen_object_drop_ref, __wbindgen_number_get, __wbindgen_is_function, __wbg_rawraycolliderintersection_new, __wbg_rawcontactforceevent_new, __wbg_call_01734de55d61e11d, __wbg_call_4c92f6aec1e1d6e6, __wbg_call_776890ca77946e2f, __wbg_bind_60a9a80cada2f33c, __wbg_buffer_085ec1f694018c4f, __wbg_newwithbyteoffsetandlength_6da8e527659b86aa, __wbg_new_8125e318e6245eed, __wbg_set_5cf90238115182c3, __wbg_length_72e2208bbc0efc61, __wbg_newwithbyteoffsetandlength_69193e31c844b792, __wbg_set_6146c51d49a2c0df, __wbg_length_d7327c75a759af37, __wbg_newwithlength_68d29ab115d0099c, __wbindgen_throw, __wbindgen_memory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rapier_wasm3d */ \"./lib/@dimforge/rapier3d/rapier_wasm3d.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_wasm\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_wasm\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"version\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"version\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawFeatureType\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawFeatureType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawShapeType\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawShapeType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawJointType\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawJointType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawJointAxis\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawJointAxis\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawMotorModel\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawMotorModel\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawRigidBodyType\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawRigidBodyType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawBroadPhase\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawBroadPhase\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawCCDSolver\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawCCDSolver\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawCharacterCollision\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawCharacterCollision\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawColliderSet\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawColliderSet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawColliderShapeCastHit\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawColliderShapeCastHit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawContactForceEvent\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawContactForceEvent\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawContactManifold\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawContactManifold\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawContactPair\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawContactPair\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawDebugRenderPipeline\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawDebugRenderPipeline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawDeserializedWorld\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawDeserializedWorld\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawDynamicRayCastVehicleController\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawDynamicRayCastVehicleController\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawEventQueue\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawEventQueue\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawGenericJoint\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawGenericJoint\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawImpulseJointSet\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawImpulseJointSet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawIntegrationParameters\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawIntegrationParameters\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawIslandManager\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawIslandManager\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawKinematicCharacterController\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawKinematicCharacterController\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawMultibodyJointSet\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawMultibodyJointSet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawNarrowPhase\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawNarrowPhase\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawPhysicsPipeline\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawPhysicsPipeline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawPointColliderProjection\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawPointColliderProjection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawPointProjection\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawPointProjection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawQueryPipeline\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawQueryPipeline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawRayColliderHit\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawRayColliderHit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawRayColliderIntersection\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawRayColliderIntersection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawRayIntersection\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawRayIntersection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawRigidBodySet\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawRigidBodySet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawRotation\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawRotation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawSdpMatrix3\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawSdpMatrix3\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawSerializationPipeline\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawSerializationPipeline\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawShape\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawShape\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawShapeCastHit\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawShapeCastHit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawShapeContact\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawShapeContact\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RawVector\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"RawVector\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_number_new\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_number_new\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_boolean_get\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_boolean_get\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_object_drop_ref\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_number_get\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_number_get\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_is_function\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_is_function\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_rawraycolliderintersection_new\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_rawraycolliderintersection_new\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_rawcontactforceevent_new\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_rawcontactforceevent_new\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_call_01734de55d61e11d\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_call_01734de55d61e11d\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_call_4c92f6aec1e1d6e6\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_call_4c92f6aec1e1d6e6\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_call_776890ca77946e2f\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_call_776890ca77946e2f\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_bind_60a9a80cada2f33c\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_bind_60a9a80cada2f33c\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_buffer_085ec1f694018c4f\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_buffer_085ec1f694018c4f\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_newwithbyteoffsetandlength_6da8e527659b86aa\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_newwithbyteoffsetandlength_6da8e527659b86aa\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_new_8125e318e6245eed\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_new_8125e318e6245eed\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_5cf90238115182c3\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_5cf90238115182c3\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_length_72e2208bbc0efc61\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_length_72e2208bbc0efc61\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_newwithbyteoffsetandlength_69193e31c844b792\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_newwithbyteoffsetandlength_69193e31c844b792\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_set_6146c51d49a2c0df\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_set_6146c51d49a2c0df\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_length_d7327c75a759af37\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_length_d7327c75a759af37\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_newwithlength_68d29ab115d0099c\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_newwithlength_68d29ab115d0099c\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_throw\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_memory\", function() { return _rapier_wasm3d__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_memory\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3Jhdy50cz83NmI0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwiZmlsZSI6Ii4vbGliL0BkaW1mb3JnZS9yYXBpZXIzZC9yYXcuanMuanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/@dimforge/rapier3d/raw.js\n");

/***/ })

}]);